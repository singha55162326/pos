{"version":3,"sources":["utils/commonType.js","actions/loginActions.js","components/MyLoading/index.js","components/Footer.js","components/ToastMessage/index.js","components/menu/Manage.js","components/menu/Report.js","components/menu/Service.js","img/bg.jpeg","components/Menu.js","components/Header.js","img/loading.gif","components/NavbarComponent/index.js","components/FooterComponent/index.js","components/MainComponent/index.js","components/LoadingComponet/index.js","img/Spinner.gif","components/Spinner/index.js","components/Alert/index.js","img/11_PTT.png","components/DisplayResult/index.js","screens/Login/index.js","api/bodyReq.js","screens/Home/index.js","screens/NotFound/index.js","screens/Loading/index.js","actions/carAction.js","screens/Car/index.js","utils/Formater.js","actions/reportAction.js","screens/Dashboard/index.js","actions/employeeAction.js","screens/Employee/index.js","actions/supplierAction.js","screens/supplier/index.js","actions/oilAction.js","screens/OilScreen/index.js","actions/customerAction.js","screens/Customer/index.js","screens/UserScreen/index.js","actions/userAction.js","actions/documentAction.js","actions/order.js","actions/sellAction.js","screens/Document/index.js","screens/Transports/index.js","actions/transportsAction.js","screens/Sale/index.js","screens/Order/index.js","screens/import/index.js","actions/importAction.js","screens/ReportSell/index.js","screens/ReportOrder/index.js","screens/ReportImport/index.js","screens/ReportTransfer/index.js","screens/ReportOils/index.js","screens/Bill/index.js","screens/Routes.js","api/apiConfig.js","sagas/loginSaga.js","sagas/carSaga.js","sagas/employeeSaga.js","sagas/supplierSaga.js","sagas/oilSaga.js","sagas/customerSaga.js","sagas/userSaga.js","sagas/documentSaga.js","sagas/orderSaga.js","sagas/transportsSaga.js","sagas/reportSaga.js","sagas/importSaga.js","sagas/sellSaga.js","sagas/index.js","reducers/loginReducer.js","reducers/carReducer.js","reducers/employeeReducer.js","reducers/supplierReducer.js","reducers/oilReducer.js","reducers/customerReducer.js","reducers/userReducer.js","reducers/documentReducer.js","reducers/orderReducer.js","reducers/transportsReducer.js","reducers/sellReducer.js","reducers/importReducer.js","reducers/reportReducer.js","reducers/index.js","i18n.js","index.js"],"names":["LOGIN","LOGIN_SUCCESS","LOGIN_FAILED","GET_ALL_CAR","GET_ALL_CAR_SUCCESS","GET_ALL_CAR_FAILED","DELETE_BY_ID_CAR","DELETE_BY_ID_CAR_SUCCESS","DELETE_BY_ID_CAR_FAILED","INSRT_NEW_CAR","INSRT_NEW_CAR_SUCCESS","INSRT_NEW_CAR_FAILED","UPDATE_CAR","UPDATE_CAR_SUCCESS","UPDATE_CAR_FAILED","GET_ALL_EMPLOYEE","GET_ALL_EMPLOYEE_SUCCESS","GET_ALL_EMPLOYEE_FAILED","DELETE_BY_ID_EMPLOYEE","DELETE_BY_ID_EMPLOYEE_SUCCESS","DELETE_BY_ID_EMPLOYEE_FAILED","INSRT_NEW_EMPLOYEE","INSRT_NEW_EMPLOYEE_SUCCESS","INSRT_NEW_EMPLOYEE_FAILED","UPDATE_EMPLOYEE","UPDATE_EMPLOYEE_SUCCESS","UPDATE_EMPLOYEE_FAILED","GET_ALL_SUPPLIER","GET_ALL_SUPPLIER_SUCCESS","GET_ALL_SUPPLIER_FAILED","DELETE_BY_ID_SUPPLIER","DELETE_BY_ID_SUPPLIER_SUCCESS","DELETE_BY_ID_SUPPLIER_FAILED","INSRT_NEW_SUPPLIER","INSRT_NEW_SUPPLIER_SUCCESS","INSRT_NEW_SUPPLIER_FAILED","UPDATE_SUPPLIER","UPDATE_SUPPLIER_SUCCESS","UPDATE_SUPPLIER_FAILED","GET_ALL_OIL","GET_ALL_OIL_SUCCESS","GET_ALL_OIL_FAILED","DELETE_BY_ID_OIL","DELETE_BY_ID_OIL_SUCCESS","DELETE_BY_ID_OIL_FAILED","INSRT_NEW_OIL","INSRT_NEW_OIL_SUCCESS","INSRT_NEW_OIL_FAILED","UPDATE_OIL","UPDATE_OIL_SUCCESS","UPDATE_OIL_FAILED","GET_ALL_OIL_BY_ID_SUPPLIER","GET_ALL_OIL_BY_ID_SUPPLIER_SUCCESS","GET_ALL_OIL_BY_ID_SUPPLIER_FAILED","GET_ALL_CUSTOMERS","GET_ALL_CUSTOMERS_SUCCESS","GET_ALL_CUSTOMERS_FAILED","DELETE_BY_ID_CUSTOMERS","DELETE_BY_ID_CUSTOMERS_SUCCESS","DELETE_BY_ID_CUSTOMERS_FAILED","INSRT_NEW_CUSTOMERS","INSRT_NEW_CUSTOMERS_SUCCESS","INSRT_NEW_CUSTOMERS_FAILED","UPDATE_CUSTOMERS","UPDATE_CUSTOMERS_SUCCESS","UPDATE_CUSTOMERS_FAILED","GET_ALL_USERS","GET_ALL_USERS_SUCCESS","GET_ALL_USERS_FAILED","DELETE_BY_ID_USERS","DELETE_BY_ID_USERS_SUCCESS","DELETE_BY_ID_USERS_FAILED","INSRT_NEW_USERS","INSRT_NEW_USERS_SUCCESS","INSRT_NEW_USERS_FAILED","UPDATE_USERS","UPDATE_USERS_SUCCESS","UPDATE_USERS_FAILED","GET_ALL_DOCUMENT","GET_ALL_DOCUMENT_SUCCESS","GET_ALL_DOCUMENT_FAILED","DELETE_BY_ID_DOCUMENT","DELETE_BY_ID_DOCUMENT_SUCCESS","DELETE_BY_ID_DOCUMENT_FAILED","INSRT_NEW_DOCUMENT","INSRT_NEW_DOCUMENT_SUCCESS","INSRT_NEW_DOCUMENT_FAILED","UPDATE_DOCUMENT","UPDATE_DOCUMENT_SUCCESS","UPDATE_DOCUMENT_FAILED","GET_ALL_ORDER","GET_ALL_ORDER_SUCCESS","GET_ALL_ORDER_FAILED","DELETE_BY_ID_ORDER","DELETE_BY_ID_ORDER_SUCCESS","DELETE_BY_ID_ORDER_FAILED","INSRT_NEW_ORDER","INSRT_NEW_ORDER_SUCCESS","INSRT_NEW_ORDER_FAILED","UPDATE_ORDER","UPDATE_ORDER_SUCCESS","UPDATE_ORDER_FAILED","GET_ALL_TRANSPORTS","GET_ALL_TRANSPORTS_SUCCESS","GET_ALL_TRANSPORTS_FAILED","DELETE_BY_ID_TRANSPORTS","DELETE_BY_ID_TRANSPORTS_SUCCESS","DELETE_BY_ID_TRANSPORTS_FAILED","INSRT_NEW_TRANSPORTS","INSRT_NEW_TRANSPORTS_SUCCESS","INSRT_NEW_TRANSPORTS_FAILED","UPDATE_TRANSPORTS","UPDATE_TRANSPORTS_SUCCESS","UPDATE_TRANSPORTS_FAILED","INSRT_NEW_SELL","INSRT_NEW_SELL_SUCCESS","INSRT_NEW_SELL_FAILED","GET_MAX_ID_SELL","GET_MAX_ID_SELL_SUCCESS","GET_MAX_ID_SELL_FAILED","INSRT_NEW_SELL_DETAIL","INSRT_NEW_SELL_DETAIL_SUCCESS","INSRT_NEW_SELL_DETAIL_FAILED","GET_MAX_ID_ORDER","GET_MAX_ID_ORDER_SUCCESS","GET_MAX_ID_ORDER_FAILED","INSRT_NEW_ORDER_DETAIL","INSRT_NEW_ORDER_DETAIL_SUCCESS","INSRT_NEW_ORDER_DETAIL_FAILED","GET_SEARCH_ORDER","GET_SEARCH_ORDER_SUCCESS","GET_SEARCH_ORDER_FAILED","INSRT_NEW_IMPORT","INSRT_NEW_IMPORT_SUCCESS","INSRT_NEW_IMPORT_FAILED","GET_MAX_ID_IMPORT","GET_MAX_ID_IMPORT_SUCCESS","GET_MAX_ID_IMPORT_FAILED","INSRT_NEW_IMPORT_DETAIL","INSRT_NEW_IMPORT_DETAIL_SUCCESS","INSRT_NEW_IMPORT_DETAIL_FAILED","GET_ALL_REPORT","GET_ALL_REPORT_SUCCESS","GET_ALL_REPORT_FAILED","GET_SUM_REPORT","GET_SUM_REPORT_SUCCESS","GET_SUM_REPORT_FAILED","GET_ALL_SELL","GET_ALL_SELL_SUCCESS","GET_ALL_SELL_FAILED","GET_PRINT_SELL","GET_PRINT_SELL_SUCCESS","GET_PRINT_SELL_FAILED","GET_PRINT_ORDER","GET_PRINT_ORDER_SUCCESS","GET_PRINT_ORDER_FAILED","GET_PRINT_IMPORT","GET_PRINT_IMPORT_SUCCESS","GET_PRINT_IMPORT_FAILED","GET_ALL_DOCUMENT_BY_ID","GET_ALL_DOCUMENT_BY_ID_SUCCESS","GET_ALL_DOCUMENT_BY_ID_FAILED","GET_ALL_TRANSPORTS_BY_ID","GET_ALL_TRANSPORTS_BY_ID_SUCCESS","GET_ALL_TRANSPORTS_BY_ID_FAILED","requestLoginAction","data","type","Component","Footer","className","href","navMange","title","path","icon","navReport","index","props","state","Role","userInfo","Cookie","getJSON","console","log","role","auth","this","setState","t","style","backgroundColor","backgroundImage","background","width","height","backgroundSize","backgroundRepeat","backgroundPosition","Manage","map","item","to","Service","Report","connect","actionType","loginReduce","success","withTranslation","MySwal","withReactContent","Swal","Header","Name","Cookies","token","user_id","createBy","username","remove","fire","text","confirmButtonText","then","result","isConfirmed","window","location","onClick","onLogout","class","src","Loading","alt","accessToken","userName","password","isLoginSuccess","isRegister","loading","pressClickSignIn","bind","onTextChangeUserName","onTextChangePassword","nextProps","user_name","footer","event","target","value","requestBodyLogin","i18n","changeLanguage","lng","logo","marginLeft","placeholder","onChange","message","dispatch","isLoadPage","Menu","requestGetAllCar","componentName","onAddNewInformation","alert","onPressEdit","carId","car_id","carName","car_name","dimenTion","dimention","status","showForm","onChangeTextcar_name","errorcar_name","length","onChangeTextdimention","errordimention","onCloseModalForm","isInsertCar","requestBodyCreateNewCars","requestInsertCar","onCloseModalFormUpdate","bodyUpdateCar","requestUpdateCar","onCallUpdateCar","onPressDelete","showDelete","onCloseDelete","onCloseModalFormInsert","onAddNew","onClickDelete","isDeleteCarById","requestDeleteCar","show","loadData","onGetInfo","dataResultCar","responseCode","dataResultCarNew","dataResultCarDelete","dataResultCarUpdate","onRefresh","i","format","createdAt","updatedAt","Modal","animation","onHide","Title","Body","name","undefined","size","carReducer","formatNumber","str","find","replace","trim","RegExp","toString","requestGetReport","SellSrceen","loaderOrder","requestGetSumReport","dataResultSumReport","a","color","total","qty","reportReducer","requestGetAllEmployee","employee_id","employeeName","employeename","Address","address","Position","position","Phone","phone","onChangeTextemployeename","erroremployeename","onChangeTextaddress","erroraddress","onChangeTextposition","errorposition","onChangeTextphone","errorphone","isInsertEmployee","requestBodyCreateNewEmployee","requestInsertEmployee","bodyUpdateEmployee","requestUpdateEmployee","onCallUpdateEmployee","isDeleteEmployeeById","requestDeleteEmployee","dataResultEmployee","dataResultEmployeeNew","dataResultEmployeeDelete","dataResultEmployeeUpdate","employeeReducer","requestGetAllSupplier","supplier_id","supplier_Name","supplier_name","onChangeTextsupplier_name","errorsupplier_name","isInsertSupplier","requestBodyCreateNewSuppliers","requestInsertSupplier","bodyUpdateSupplier","requestUpdateSupplier","onCallUpdateSupplier","isDeleteSupplierById","requestDeleteSupplier","dataResultSupplier","dataResultSupplierNew","dataResultSupplierDelete","dataResultSupplierUpdate","supplierReducer","requestGetAllOil","requestGetAllOilByIdSupplier","oils_id","oil_Name","oil_name","Status","Price","price","Qty","Supplier_id","statusModle","onChangeTextoil_name","erroroil_name","onSelectStatus","onChangeTextqty","errorqty","onChangeTextprice","errorprice","isInsertOil","requestBodyCreateNewOils","requestInsertOil","bodyUpdateOil","requestUpdateOil","onCallUpdateOil","isDeleteOilById","requestDeleteOil","onSelectSupplier_id","isCallGetAllDataSupplier","dataResultOil","dataResultOilNew","dataResultOilDelete","dataResultOilUpdate","actionTypeSupplier","dataComboSupplier","Form","Control","as","oilReducer","requestGetAllCustomers","cus_id","cus_Name","cus_name","Contact","contact","onChangeTextcus_name","errorcus_name","onChangeTextcontact","errorcontact","onChangeTextstatus","errorstatus","requestBodyCreateNewCustomerss","isInsertCustomers","requestInsertCustomers","bodyUpdateCustomers","requestUpdateCustomers","onCallUpdateCustomers","isDeleteCustomersById","requestDeleteCustomers","dataResultCustomers","dataResultCustomersNew","dataResultCustomersDelete","dataResultCustomersUpdate","customerReducer","Prasswold","prasswold","Level","level","onChangeTextusername","errorusername","onChangeTextrole","errorrole","onChangeTextlevel","errorlevel","onChangeTextprasswold","errorprasswold","CreatedBy","isInsertUsers","requestBodyCreateNewUsers","requestInsertUsers","bodyUpdateUsers","requestUpdateUsers","onCallUpdateUsers","isDeleteUsersById","requestDeleteUsers","requestGetAllUsers","dataResultUsers","dataResultUsersNew","dataResultUsersDelete","dataResultUsersUpdate","userReducer","requestGetAllDocument","requestGetAllOrder","requestInsertOrder","requestInsertOrderDetail","requestGetAllSell","callCustomer","onGetInfoCustomer","callEmployee","onGetInfoEmployee","callSell","onGetInfoSell","onPressView","id_Documents","id_documents","requestGetByIdDocument","onGetBillDocByID","Orders_Id","orders_id","Traid","traid","Date","date","Company","company","Dimention","service","User_id","Username","onChangeTextorders_id","textSplit","split","errororders_id","onChangeTexttraid","errortraid","onChangeTextdate","errordate","onChangeTextcompany","errorcompany","onChangeTextservice","errorservice","isInsertDocument","order_id","requestBodyCreateNewDocument","requestInsertDocument","bodyUpdateDocument","requestUpdateDocument","onCallUpdateDocument","isCallGetOrder","isDeleteDocumentById","requestDeleteDocument","onCloseAlertBill","alertModelPrint","dataPrint","dataResultDocument","dataResultDocumentNew","dataResultDocumentDelete","dataResultDocumentUpdate","dataResultOrder","actionTypeOrder","dataOrder","actionTypeCustomer","dataCustomer","actionTypeEmployee","dataEmp","dataResultGetSell","actionTypeGetSell","dataSell","dataResultDocumentById","dataResultDocumentByIdActionType","dataView","phone1","sales_id","status_sell","disabled","ref","el","componentRef","reduce","v","parseInt","trigger","content","documentReducer","orderReducer","sellReducer","Transport_id","transport_id","Id_documents","Order_id","Oil_id","oil_id","Car_id","requestBodyCreateNewTransports","requestInsertTransports","isInsertTransports","bodyUpdateTransports","requestUpdateTransports","onCallUpdateTransports","requestGetByIdTransports","onGetBillTranspostByID","onLoadingDataCombobox","isDeleteTransportsById","requestDeleteTransports","onSelectId_documents","onSelectOrder_id","onSelectOil_id","onSelectCar_id","isCallGetAllDataCar","isCallGetAllDataOil","isCallGetAllDataDocment","requestGetAllTransports","dataResultTransports","dataResultTransportsNew","dataResultTransportsDelete","dataResultTransportsUpdate","actionTypeCar","dataComboCar","actionTypeOil","dataComboOil","actionTypeDocument","dataDocument","data1","dataResultTransportsById","actionTypeGetTransport","dataTransport","transportsReducer","onPrintBill","requestMaxIdSell","onGetMaxSell","onClose","showQty","onCloseInsert","modelInsert","onConfrimInsert","listDataBuy","b","qty_cus","bodyInsertSell","onInsertSell","error","onConfrim","newData","strOldAmount","sumTotal","filter","isDataBuy","onAddCart","onSelectCustomer","onDeleteOrder","showDenyButton","customClass","actions","cancelButton","confirmButton","onConfrimDelete","Array","forEach","push","onDeleteAll","onSell","callGetCustomerInfo","count","totalAmont","onSearch","onClickBill","onGetInfoByIdSupplier","onInsertSellDetail","onPrintSellDetail","listData","dataResultOilByIdSupplier","actionTypeCustomers","dataResultSellNew","actionTypeSellNew","dataResultMaxIdSell","actionTypeMaxIdSell","maxId","saleId","bodyInsertSellDetail","requestInsertSellDetail","requestGetPrintSell","dataResultSellDetailNew","actionTypeSellDetailNew","dataResultGetPrintSell","actionTypeGetPrintSell","datar","id_sup","nameSup","requestGetMaxIdOrder","onGetMaxOrder","status_order","bodyInsertOrder","moment","onInsertOrder","loader","onInsertOrderDetail","onPrintOrderDetail","dataResultOrderNew","actionTypeOrderNew","dataResultMaxIdOrder","actionTypeMaxIdOrder","bodyInsertOrderDetail","requestGetPrintOrder","dataResultOrderDetailNew","actionTypeOrderDetailNew","dataResultPrintOrder","actionTypeOrderPrint","requestGetMaxIdImport","onGetMaxImport","ImpDate","ImpID","bodyInsertImport","requestInsertImport","onInsertImport","onSelectOrder","requestGetSearchOrder","onCallGetOrderById","onInsertImportDetail","onPrintImport","dataResultImportNew","actionTypeImportNew","responseCodeImport","dataResultMaxIdImport","actionTypeMaxIdImport","bodyInsertImportDetail","requestInsertImportDetail","requestGetPrintImport","dataResultImportDetailNew","actionTypeImportDetailNew","dataResultGetSearchOrderNew","actionTypeGetSearchOrder","dataOrderSearch","dataResultGetPrintImport","actionTypeImportPrint","importReducer","onChangeTextstartDate","errorstartDate","startDate","onChangeTextendDate","errorendDate","endDate","onClickScrach","dataResultReport","reportValueSell","reportValueOrder","createdat","reportValueImport","impid","impdate","reportValueTransfer","reportValueOil","Router","useRoutes","element","children","Dashboard","Car","NotFound","Employee","OilScreen","Customer","UserScreen","Document","Transports","Sale","Order","ReportSell","ReportOrder","ReportImport","ReportTransfer","ReportOils","userLoginApi","apiResultGetAllCar","apiResultdataCarDelete","apiResultdataCarNew","apiResultdataCarUpdate","apiResultGetAllEmployee","apiResultdataEmployeeDelete","apiResultdataEmployeeNew","apiResultdataEmployeeUpdate","apiResultGetAllSupplier","apiResultdataSupplierDelete","apiResultdataSupplierNew","apiResultdataSupplierUpdate","apiResultGetAllOil","apiResultdataOilDelete","apiResultdataOilNew","apiResultdataOilUpdate","apiResultGetAllOilByIdSupplier","apiResultGetAllCustomers","apiResultdataCustomersDelete","apiResultdataCustomersNew","apiResultdataCustomersUpdate","apiResultGetAllUsers","apiResultdataUsersDelete","apiResultdataUsersNew","apiResultdataUsersUpdate","apiResultGetAllDocument","apiResultdataDocumentDelete","apiResultdataDocumentNew","apiResultdataDocumentUpdate","apiResultdataDocumentById","apiResultGetAllOrder","apiResultGetSearchOrder","apiResultGetPrintOrder","apiResultdataOrderDelete","apiResultdataOrderNew","apiResultdataOrderUpdate","apiResultGetAllTransports","apiResultdataTransportsDelete","apiResultdataTransportsNew","apiResultdataTransportsUpdate","apiResultdataSellNew","apiResultGetMaxIdSell","apiResultGetPrintSell","apiResultdataSellDetailNew","apiResultGetMaxIdOrder","apiResultdataOrderDetailNew","apiResultdataImportNew","apiResultGetMaxIdImport","apiResultdataImportDetailNew","apiResultGetPrintImport","apiResultGetAllReport","apiResultGetSumReport","apiResultGetSell","apiResultdataTransportsById","baseApi","axios","create","baseURL","headers","Authorization","timeout","api","post","get","wachLogin","callLogin","takeEvery","action","set","JSON","stringify","put","description","wachResultGetAllCar","callResultGetAllCar","wachResultdataCarDelete","callResultdataCarDelete","wachResultdataCarNew","callResultdataCarNew","wachResultdataCarUpdate","callResultdataCarUpdate","cars","wachResultGetAllEmployee","callResultGetAllEmployee","wachResultdataEmployeeDelete","callResultdataEmployeeDelete","wachResultdataEmployeeNew","callResultdataEmployeeNew","wachResultdataEmployeeUpdate","callResultdataEmployeeUpdate","employees","wachResultGetAllSupplier","callResultGetAllSupplier","wachResultdataSupplierDelete","callResultdataSupplierDelete","wachResultdataSupplierNew","callResultdataSupplierNew","wachResultdataSupplierUpdate","callResultdataSupplierUpdate","suppliers","wachResultGetAllOil","callResultGetAllOil","wachResultdataOilDelete","callResultdataOilDelete","wachResultdataOilNew","callResultdataOilNew","wachResultdataOilUpdate","callResultdataOilUpdate","wachResultGetAllOilByIdSupplier","callResultGetAllOilByIdSupplier","oils","supplier","wachResultGetAllCustomers","callResultGetAllCustomers","wachResultdataCustomersDelete","callResultdataCustomersDelete","wachResultdataCustomersNew","callResultdataCustomersNew","wachResultdataCustomersUpdate","callResultdataCustomersUpdate","customers","wachResultGetAllUsers","callResultGetAllUsers","wachResultdataUsersDelete","callResultdataUsersDelete","wachResultdataUsersNew","callResultdataUsersNew","wachResultdataUsersUpdate","callResultdataUsersUpdate","users","wachResultGetAllDocument","callResultGetAllDocument","wachResultdataDocumentDelete","callResultdataDocumentDelete","wachResultdataDocumentNew","callResultdataDocumentNew","wachResultdataDocumentUpdate","callResultdataDocumentUpdate","wachResultdataDocumentById","callResultdataDocumentById","documents","wachResultGetAllOrder","callResultGetAllOrder","wachResultdataOrderDelete","callResultdataOrderDelete","wachResultdataOrderNew","callResultdataOrderNew","wachResultdataOrderUpdate","callResultdataOrderUpdate","wachResultGetMaxIdOrder","callResultGetMaxIdOrder","wachResultdataOrderDetailNew","callResultdataOrderDetailNew","wachResultGetSearchOrder","callResultGetSearchOrder","wachResultGetPrintOrder","callResultGetPrintOrder","order","wachResultGetAllTransports","callResultGetAllTransports","wachResultdataTransportsDelete","callResultdataTransportsDelete","wachResultdataTransportsNew","callResultdataTransportsNew","wachResultdataTransportsUpdate","callResultdataTransportsUpdate","wachResultdataTransportsById","callResultdataTransportsById","transports","wachResultGetAllReport","callResultGetAllReport","wachResultGetSumReport","callResultGetSumReport","dataSum","wachResultdataImportNew","callResultdataImportNew","wachResultGetMaxIdImport","callResultGetMaxIdImport","wachResultdataImportDetailNew","callResultdataImportDetailNew","wachResultGetPrintImport","callResultGetPrintImport","imports","wachResultdataSellNew","callResultdataSellNew","wachResultGetMaxIdSell","callResultGetMaxIdSell","wachResultdataSellDetailNew","callResultdataSellDetailNew","wachResultGetdSell","callResultGetdSell","wachResultGetdPrintSell","callResultGetdPrintSell","sell","rootSaga","spawn","initialState","isLoading","responseDescription","setlogin","dataLogout","dataResultOrderDelete","dataResultOrderUpdate","AppReducer","combineReducers","use","Backend","LanguageDetector","initReactI18next","init","fallbackLng","debug","whitelist","interpolation","escapeValue","sagaMiddleware","createSagaMiddleware","store","createStore","allReducers","applyMiddleware","ReactDOM","render","StrictMode","fallback","document","getElementById","run"],"mappings":"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","file":"static/js/main.e27499a0.chunk.js","sourcesContent":["export const LOGIN = 'LOGIN'\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS'\nexport const LOGIN_FAILED = 'LOGIN_FAILED'\n\n// CAR\nexport const GET_ALL_CAR = 'GET_ALL_CAR'\nexport const GET_ALL_CAR_SUCCESS = 'GET_ALL_CAR_SUCCESS'\nexport const GET_ALL_CAR_FAILED = 'GET_ALL_CAR_FAILED'\n\nexport const DELETE_BY_ID_CAR = 'DELETE_BY_ID_CAR'\nexport const DELETE_BY_ID_CAR_SUCCESS = 'DELETE_BY_ID_CAR_SUCCESS'\nexport const DELETE_BY_ID_CAR_FAILED = 'DELETE_BY_ID_CAR_FAILED'\n\nexport const INSRT_NEW_CAR = 'INSRT_NEW_CAR'\nexport const INSRT_NEW_CAR_SUCCESS = 'INSRT_NEW_CAR_SUCCESS'\nexport const INSRT_NEW_CAR_FAILED = 'INSRT_NEW_CAR_FAILED'\n\nexport const UPDATE_CAR = 'UPDATE_CAR'\nexport const UPDATE_CAR_SUCCESS = 'UPDATE_CAR_SUCCESS'\nexport const UPDATE_CAR_FAILED = 'UPDATE_CAR_FAILED'\n// EMPLOYEE\nexport const GET_ALL_EMPLOYEE = 'GET_ALL_EMPLOYEE'\nexport const GET_ALL_EMPLOYEE_SUCCESS = 'GET_ALL_EMPLOYEE_SUCCESS'\nexport const GET_ALL_EMPLOYEE_FAILED = 'GET_ALL_EMPLOYEE_FAILED'\n\nexport const DELETE_BY_ID_EMPLOYEE = 'DELETE_BY_ID_EMPLOYEE'\nexport const DELETE_BY_ID_EMPLOYEE_SUCCESS = 'DELETE_BY_ID_EMPLOYEE_SUCCESS'\nexport const DELETE_BY_ID_EMPLOYEE_FAILED = 'DELETE_BY_ID_EMPLOYEE_FAILED'\n\nexport const INSRT_NEW_EMPLOYEE = 'INSRT_NEW_EMPLOYEE'\nexport const INSRT_NEW_EMPLOYEE_SUCCESS = 'INSRT_NEW_EMPLOYEE_SUCCESS'\nexport const INSRT_NEW_EMPLOYEE_FAILED = 'INSRT_NEW_EMPLOYEE_FAILED'\n\nexport const UPDATE_EMPLOYEE = 'UPDATE_EMPLOYEE'\nexport const UPDATE_EMPLOYEE_SUCCESS = 'UPDATE_EMPLOYEE_SUCCESS'\nexport const UPDATE_EMPLOYEE_FAILED = 'UPDATE_EMPLOYEE_FAILED'\n\n// SUPPLIER\nexport const GET_ALL_SUPPLIER = 'GET_ALL_SUPPLIER'\nexport const GET_ALL_SUPPLIER_SUCCESS = 'GET_ALL_SUPPLIER_SUCCESS'\nexport const GET_ALL_SUPPLIER_FAILED = 'GET_ALL_SUPPLIER_FAILED'\n\nexport const DELETE_BY_ID_SUPPLIER = 'DELETE_BY_ID_SUPPLIER'\nexport const DELETE_BY_ID_SUPPLIER_SUCCESS = 'DELETE_BY_ID_SUPPLIER_SUCCESS'\nexport const DELETE_BY_ID_SUPPLIER_FAILED = 'DELETE_BY_ID_SUPPLIER_FAILED'\n\nexport const INSRT_NEW_SUPPLIER = 'INSRT_NEW_SUPPLIER'\nexport const INSRT_NEW_SUPPLIER_SUCCESS = 'INSRT_NEW_SUPPLIER_SUCCESS'\nexport const INSRT_NEW_SUPPLIER_FAILED = 'INSRT_NEW_SUPPLIER_FAILED'\n\nexport const UPDATE_SUPPLIER = 'UPDATE_SUPPLIER'\nexport const UPDATE_SUPPLIER_SUCCESS = 'UPDATE_SUPPLIER_SUCCESS'\nexport const UPDATE_SUPPLIER_FAILED = 'UPDATE_SUPPLIER_FAILED'\n\n// OIL\n\nexport const GET_ALL_OIL = 'GET_ALL_OIL'\nexport const GET_ALL_OIL_SUCCESS = 'GET_ALL_OIL_SUCCESS'\nexport const GET_ALL_OIL_FAILED = 'GET_ALL_OIL_FAILED'\n\nexport const DELETE_BY_ID_OIL = 'DELETE_BY_ID_OIL'\nexport const DELETE_BY_ID_OIL_SUCCESS = 'DELETE_BY_ID_OIL_SUCCESS'\nexport const DELETE_BY_ID_OIL_FAILED = 'DELETE_BY_ID_OIL_FAILED'\n\nexport const INSRT_NEW_OIL = 'INSRT_NEW_OIL'\nexport const INSRT_NEW_OIL_SUCCESS = 'INSRT_NEW_OIL_SUCCESS'\nexport const INSRT_NEW_OIL_FAILED = 'INSRT_NEW_OIL_FAILED'\n\nexport const UPDATE_OIL = 'UPDATE_OIL'\nexport const UPDATE_OIL_SUCCESS = 'UPDATE_OIL_SUCCESS'\nexport const UPDATE_OIL_FAILED = 'UPDATE_OIL_FAILED'\n\nexport const GET_ALL_OIL_BY_ID_SUPPLIER = 'GET_ALL_OIL_BY_ID_SUPPLIER'\nexport const GET_ALL_OIL_BY_ID_SUPPLIER_SUCCESS = 'GET_ALL_OIL_BY_ID_SUPPLIER_SUCCESS'\nexport const GET_ALL_OIL_BY_ID_SUPPLIER_FAILED = 'GET_ALL_OIL_BY_ID_SUPPLIER_FAILED'\n\n// CUSTOMERS\nexport const GET_ALL_CUSTOMERS = 'GET_ALL_CUSTOMERS'\nexport const GET_ALL_CUSTOMERS_SUCCESS = 'GET_ALL_CUSTOMERS_SUCCESS'\nexport const GET_ALL_CUSTOMERS_FAILED = 'GET_ALL_CUSTOMERS_FAILED'\n\nexport const DELETE_BY_ID_CUSTOMERS = 'DELETE_BY_ID_CUSTOMERS'\nexport const DELETE_BY_ID_CUSTOMERS_SUCCESS = 'DELETE_BY_ID_CUSTOMERS_SUCCESS'\nexport const DELETE_BY_ID_CUSTOMERS_FAILED = 'DELETE_BY_ID_CUSTOMERS_FAILED'\n\nexport const INSRT_NEW_CUSTOMERS = 'INSRT_NEW_CUSTOMERS'\nexport const INSRT_NEW_CUSTOMERS_SUCCESS = 'INSRT_NEW_CUSTOMERS_SUCCESS'\nexport const INSRT_NEW_CUSTOMERS_FAILED = 'INSRT_NEW_CUSTOMERS_FAILED'\n\nexport const UPDATE_CUSTOMERS = 'UPDATE_CUSTOMERS'\nexport const UPDATE_CUSTOMERS_SUCCESS = 'UPDATE_CUSTOMERS_SUCCESS'\nexport const UPDATE_CUSTOMERS_FAILED = 'UPDATE_CUSTOMERS_FAILED'\n\n\n// USERS\nexport const GET_ALL_USERS = 'GET_ALL_USERS'\nexport const GET_ALL_USERS_SUCCESS = 'GET_ALL_USERS_SUCCESS'\nexport const GET_ALL_USERS_FAILED = 'GET_ALL_USERS_FAILED'\n\nexport const DELETE_BY_ID_USERS = 'DELETE_BY_ID_USERS'\nexport const DELETE_BY_ID_USERS_SUCCESS = 'DELETE_BY_ID_USERS_SUCCESS'\nexport const DELETE_BY_ID_USERS_FAILED = 'DELETE_BY_ID_USERS_FAILED'\n\nexport const INSRT_NEW_USERS = 'INSRT_NEW_USERS'\nexport const INSRT_NEW_USERS_SUCCESS = 'INSRT_NEW_USERS_SUCCESS'\nexport const INSRT_NEW_USERS_FAILED = 'INSRT_NEW_USERS_FAILED'\n\nexport const UPDATE_USERS = 'UPDATE_USERS'\nexport const UPDATE_USERS_SUCCESS = 'UPDATE_USERS_SUCCESS'\nexport const UPDATE_USERS_FAILED = 'UPDATE_USERS_FAILED'\n\n// DOCUMENT\nexport const GET_ALL_DOCUMENT = 'GET_ALL_DOCUMENT'\nexport const GET_ALL_DOCUMENT_SUCCESS = 'GET_ALL_DOCUMENT_SUCCESS'\nexport const GET_ALL_DOCUMENT_FAILED = 'GET_ALL_DOCUMENT_FAILED'\n\nexport const DELETE_BY_ID_DOCUMENT = 'DELETE_BY_ID_DOCUMENT'\nexport const DELETE_BY_ID_DOCUMENT_SUCCESS = 'DELETE_BY_ID_DOCUMENT_SUCCESS'\nexport const DELETE_BY_ID_DOCUMENT_FAILED = 'DELETE_BY_ID_DOCUMENT_FAILED'\n\nexport const INSRT_NEW_DOCUMENT = 'INSRT_NEW_DOCUMENT'\nexport const INSRT_NEW_DOCUMENT_SUCCESS = 'INSRT_NEW_DOCUMENT_SUCCESS'\nexport const INSRT_NEW_DOCUMENT_FAILED = 'INSRT_NEW_DOCUMENT_FAILED'\n\nexport const UPDATE_DOCUMENT = 'UPDATE_DOCUMENT'\nexport const UPDATE_DOCUMENT_SUCCESS = 'UPDATE_DOCUMENT_SUCCESS'\nexport const UPDATE_DOCUMENT_FAILED = 'UPDATE_DOCUMENT_FAILED'\n\n// ORDER\nexport const GET_ALL_ORDER = 'GET_ALL_ORDER'\nexport const GET_ALL_ORDER_SUCCESS = 'GET_ALL_ORDER_SUCCESS'\nexport const GET_ALL_ORDER_FAILED = 'GET_ALL_ORDER_FAILED'\n\nexport const DELETE_BY_ID_ORDER = 'DELETE_BY_ID_ORDER'\nexport const DELETE_BY_ID_ORDER_SUCCESS = 'DELETE_BY_ID_ORDER_SUCCESS'\nexport const DELETE_BY_ID_ORDER_FAILED = 'DELETE_BY_ID_ORDER_FAILED'\n\nexport const INSRT_NEW_ORDER = 'INSRT_NEW_ORDER'\nexport const INSRT_NEW_ORDER_SUCCESS = 'INSRT_NEW_ORDER_SUCCESS'\nexport const INSRT_NEW_ORDER_FAILED = 'INSRT_NEW_ORDER_FAILED'\n\nexport const UPDATE_ORDER = 'UPDATE_ORDER'\nexport const UPDATE_ORDER_SUCCESS = 'UPDATE_ORDER_SUCCESS'\nexport const UPDATE_ORDER_FAILED = 'UPDATE_ORDER_FAILED'\n\n\n\n// TRANSPORTS\nexport const GET_ALL_TRANSPORTS = 'GET_ALL_TRANSPORTS'\nexport const GET_ALL_TRANSPORTS_SUCCESS = 'GET_ALL_TRANSPORTS_SUCCESS'\nexport const GET_ALL_TRANSPORTS_FAILED = 'GET_ALL_TRANSPORTS_FAILED'\n\nexport const DELETE_BY_ID_TRANSPORTS = 'DELETE_BY_ID_TRANSPORTS'\nexport const DELETE_BY_ID_TRANSPORTS_SUCCESS = 'DELETE_BY_ID_TRANSPORTS_SUCCESS'\nexport const DELETE_BY_ID_TRANSPORTS_FAILED = 'DELETE_BY_ID_TRANSPORTS_FAILED'\n\nexport const INSRT_NEW_TRANSPORTS = 'INSRT_NEW_TRANSPORTS'\nexport const INSRT_NEW_TRANSPORTS_SUCCESS = 'INSRT_NEW_TRANSPORTS_SUCCESS'\nexport const INSRT_NEW_TRANSPORTS_FAILED = 'INSRT_NEW_TRANSPORTS_FAILED'\n\nexport const UPDATE_TRANSPORTS = 'UPDATE_TRANSPORTS'\nexport const UPDATE_TRANSPORTS_SUCCESS = 'UPDATE_TRANSPORTS_SUCCESS'\nexport const UPDATE_TRANSPORTS_FAILED = 'UPDATE_TRANSPORTS_FAILED'\n\n//SELL\n\nexport const INSRT_NEW_SELL = 'INSRT_NEW_SELL'\nexport const INSRT_NEW_SELL_SUCCESS = 'INSRT_NEW_SELL_SUCCESS'\nexport const INSRT_NEW_SELL_FAILED = 'INSRT_NEW_SELL_FAILED'\n\nexport const GET_MAX_ID_SELL = 'GET_MAX_ID_SELL'\nexport const GET_MAX_ID_SELL_SUCCESS = 'GET_MAX_ID_SELL_SUCCESS'\nexport const GET_MAX_ID_SELL_FAILED = 'GET_MAX_ID_SELL_FAILED'\n\nexport const INSRT_NEW_SELL_DETAIL = 'INSRT_NEW_SELL_DETAIL'\nexport const INSRT_NEW_SELL_DETAIL_SUCCESS = 'INSRT_NEW_SELL_DETAIL_SUCCESS'\nexport const INSRT_NEW_SELL_DETAIL_FAILED = 'INSRT_NEW_SELL_DETAIL_FAILED'\n\n\nexport const GET_MAX_ID_ORDER = 'GET_MAX_ID_ORDER'\nexport const GET_MAX_ID_ORDER_SUCCESS = 'GET_MAX_ID_ORDER_SUCCESS'\nexport const GET_MAX_ID_ORDER_FAILED = 'GET_MAX_ID_ORDER_FAILED'\n\nexport const INSRT_NEW_ORDER_DETAIL = 'INSRT_NEW_ORDER_DETAIL'\nexport const INSRT_NEW_ORDER_DETAIL_SUCCESS = 'INSRT_NEW_ORDER_DETAIL_SUCCESS'\nexport const INSRT_NEW_ORDER_DETAIL_FAILED = 'INSRT_NEW_ORDER_DETAIL_FAILED'\n\nexport const GET_SEARCH_ORDER = 'GET_SEARCH_ORDER'\nexport const GET_SEARCH_ORDER_SUCCESS = 'GET_SEARCH_ORDER_SUCCESS'\nexport const GET_SEARCH_ORDER_FAILED = 'GET_SEARCH_ORDER_FAILED'\n\nexport const INSRT_NEW_IMPORT = 'INSRT_NEW_IMPORT'\nexport const INSRT_NEW_IMPORT_SUCCESS = 'INSRT_NEW_IMPORT_SUCCESS'\nexport const INSRT_NEW_IMPORT_FAILED = 'INSRT_NEW_IMPORT_FAILED'\n\nexport const GET_MAX_ID_IMPORT = 'GET_MAX_ID_IMPORT'\nexport const GET_MAX_ID_IMPORT_SUCCESS = 'GET_MAX_ID_IMPORT_SUCCESS'\nexport const GET_MAX_ID_IMPORT_FAILED = 'GET_MAX_ID_IMPORT_FAILED'\n\nexport const INSRT_NEW_IMPORT_DETAIL = 'INSRT_NEW_IMPORT_DETAIL'\nexport const INSRT_NEW_IMPORT_DETAIL_SUCCESS = 'INSRT_NEW_IMPORT_DETAIL_SUCCESS'\nexport const INSRT_NEW_IMPORT_DETAIL_FAILED = 'INSRT_NEW_IMPORT_DETAIL_FAILED'\n\n\nexport const GET_ALL_REPORT = 'GET_ALL_REPORT'\nexport const GET_ALL_REPORT_SUCCESS = 'GET_ALL_REPORT_SUCCESS'\nexport const GET_ALL_REPORT_FAILED = 'GET_ALL_REPORT_FAILED'\n\n\nexport const GET_SUM_REPORT = 'GET_SUM_REPORT'\nexport const GET_SUM_REPORT_SUCCESS = 'GET_SUM_REPORT_SUCCESS'\nexport const GET_SUM_REPORT_FAILED = 'GET_SUM_REPORT_FAILED'\n\n\nexport const GET_ALL_SELL = 'GET_ALL_SELL'\nexport const GET_ALL_SELL_SUCCESS = 'GET_ALL_SELL_SUCCESS'\nexport const GET_ALL_SELL_FAILED = 'GET_ALL_SELL_FAILED'\n\nexport const GET_PRINT_SELL = 'GET_PRINT_SELL'\nexport const GET_PRINT_SELL_SUCCESS = 'GET_PRINT_SELL_SUCCESS'\nexport const GET_PRINT_SELL_FAILED = 'GET_PRINT_SELL_FAILED'\n\nexport const GET_PRINT_ORDER = 'GET_PRINT_ORDER'\nexport const GET_PRINT_ORDER_SUCCESS = 'GET_PRINT_ORDER_SUCCESS'\nexport const GET_PRINT_ORDER_FAILED = 'GET_PRINT_ORDER_FAILED'\n\nexport const GET_PRINT_IMPORT = 'GET_PRINT_IMPORT'\nexport const GET_PRINT_IMPORT_SUCCESS = 'GET_PRINT_IMPORT_SUCCESS'\nexport const GET_PRINT_IMPORT_FAILED = 'GET_PRINT_IMPORT_FAILED'\n\nexport const GET_ALL_DOCUMENT_BY_ID = 'GET_ALL_DOCUMENT_BY_ID'\nexport const GET_ALL_DOCUMENT_BY_ID_SUCCESS = 'GET_ALL_DOCUMENT_BY_ID_SUCCESS'\nexport const GET_ALL_DOCUMENT_BY_ID_FAILED = 'GET_ALL_DOCUMENT_BY_ID_FAILED'\n\nexport const GET_ALL_TRANSPORTS_BY_ID = 'GET_ALL_TRANSPORTS_BY_ID'\nexport const GET_ALL_TRANSPORTS_BY_ID_SUCCESS = 'GET_ALL_TRANSPORTS_BY_ID_SUCCESS'\nexport const GET_ALL_TRANSPORTS_BY_ID_FAILED = 'GET_ALL_TRANSPORTS_BY_ID_FAILED'","import { LOGIN} from \"../utils/commonType.js\";\n\nexport const requestLoginAction = (data) => {\n  return {\n    type: LOGIN,\n    data,\n  };\n};\n\n","import React, { Component } from 'react';\nimport Loader from \"react-loader-spinner\";\n\nexport default class index extends Component {\n    render() {\n        return (\n            <dvi style={{ zIndex: 99999, position: 'fixed', width: '100%', height: '100%', backgroundColor: 'rgba(52,52,52,0.5)', }}>\n                <div style={{ zIndex: 99999, position: 'fixed', top: '50%', left: '50%', transform: 'translate(-50%, -50%)', }}>\n                    <Loader\n                        type=\"Bars\"\n                        color=\"#00BFFF\"\n                        height={150}\n                        width={150}\n                        radius={20}\n                    />\n                </div>\n            </dvi>\n\n        );\n    }\n}\n","import React, { Component } from 'react';\n\nexport default class Footer extends Component {\n  render() {\n    return (\n      <footer className=\"main-footer\">\n        <strong>Copyright © 2014-2021 <a href=\"#\">AdminLTE.io</a>.</strong>\n        All rights reserved.\n        <div className=\"float-right d-none d-sm-inline-block\">\n          <b>Version</b> 3.1.0\n        </div>\n      </footer>\n\n    );\n  }\n}\n","import React, { Component } from 'react';\nimport { ToastContainer, toast, Zoom, Bounce } from 'react-toastify';\nimport 'react-toastify/dist/ReactToastify.css';\nimport './styles.css'\nexport default class ToastMessage extends Component {\n\n    render() {\n        const { toastType, toastContent } = this.props\n        return (\n            <div>\n                <ToastContainer draggable={false} transition={Zoom} autoClose={3000} />\n                {\n                    toastType === 'success' ?\n                        toast.success(toastContent, {\n                            className: \"myFont\",\n                            draggable: true,\n                            position: toast.POSITION.BOTTOM_RIGHT\n                        }) : toastType === 'error' ? toast.error(toastContent, {\n                            className: \"myFont\",\n                            draggable: true,\n                            position: toast.POSITION.BOTTOM_RIGHT\n                        })\n                            : toastType === 'warnig' ? toast.warn(toastContent, {\n                                className: \"myFont\",\n                                draggable: true,\n                                position: toast.POSITION.BOTTOM_RIGHT\n                            }) : toastType === 'info' ? toast.info(toastContent, {\n                                className: \"myFont\",\n                                draggable: true,\n                                position: toast.POSITION.BOTTOM_RIGHT\n                            }) : null\n                }\n            </div>\n        );\n    }\n}\n","const navMange = [\r\n  {\r\n    title: \"CarInformation\",\r\n    path: \"CarInformation\",\r\n    icon: \"far fa-circle nav-icon\",\r\n  },\r\n  {\r\n    title: \"ManageEmployee\",\r\n    path: \"ManageEmployee\",\r\n    icon: \"far fa-circle nav-icon\",\r\n  },\r\n  {\r\n    title: \"supplierManage\",\r\n    path: \"supplierManage\",\r\n    icon: \"far fa-circle nav-icon\",\r\n  },\r\n  {\r\n    title: \"oilManage\",\r\n    path: \"oilManage\",\r\n    icon: \"far fa-circle nav-icon\",\r\n  },\r\n  {\r\n    title: \"CustomerInformation\",\r\n    path: \"CustomerInformation\",\r\n    icon: \"far fa-circle nav-icon\",\r\n  },\r\n  {\r\n    title: \"UsersInformation\",\r\n    path: \"UserScreen\",\r\n    icon: \"far fa-circle nav-icon\",\r\n  },\r\n  {\r\n    title: \"FuelDeliveryDocument\",\r\n    path: \"FuelDeliveryDocument\",\r\n    icon: \"far fa-circle nav-icon\",\r\n  },\r\n  {\r\n    title: \"FuelDelivery\",\r\n    path: \"FuelDelivery\",\r\n    icon: \"far fa-circle nav-icon\",\r\n  }\r\n];\r\n\r\nexport default navMange;\r\n","const navReport = [\r\n  {\r\n    title: \"SalesReport\",\r\n    path: \"SalesItems\",\r\n    icon: \"far fa-circle nav-icon\",\r\n  },\r\n  {\r\n    title: \"ImportReport\",\r\n    path: \"ImportReport\",\r\n    icon: \"far fa-circle nav-icon\",\r\n  },\r\n  {\r\n    title: \"OrderReport\",\r\n    path: \"OrderReport\",\r\n    icon: \"far fa-circle nav-icon\",\r\n  },\r\n  // {\r\n  //   title: \"CarInformationReport\",\r\n  //   path: \"CarInformationReport\",\r\n  //   icon: \"far fa-circle nav-icon\",\r\n  // },\r\n  {\r\n    title: \"ReportFuelInformation\",\r\n    path: \"ReportFuelInformation\",\r\n    icon: \"far fa-circle nav-icon\",\r\n  },\r\n  {\r\n    title: \"ReportFuelDeliveryInformation\",\r\n    path: \"ReportFuelDeliveryInformation\",\r\n    icon: \"far fa-circle nav-icon\",\r\n  },\r\n];\r\n\r\nexport default navReport;\r\n","const navReport = [\r\n    {\r\n      title: \"sell\",\r\n      path: \"sell\",\r\n      icon: \"far fa-circle nav-icon\",\r\n    },\r\n    {\r\n      title: \"OrderSreen\",\r\n      path: \"OrderSreen\",\r\n      icon: \"far fa-circle nav-icon\",\r\n    },\r\n    {\r\n      title: \"import\",\r\n      path: \"ImportScreen\",\r\n      icon: \"far fa-circle nav-icon\",\r\n    }\r\n  ];\r\n  \r\n  export default navReport;\r\n  ","export default __webpack_public_path__ + \"static/media/bg.bc4f3898.jpeg\";","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Link } from \"react-router-dom\";\nimport \"./style.css\";\nimport { withTranslation } from \"react-i18next\";\nimport Cookie from \"js-cookie\";\nimport Manage from \"./menu/Manage\";\nimport Report from \"./menu/Report\";\nimport Service from \"./menu/Service\";\nimport background from '../img/bg.jpeg'\nconst SectionStyle = {\n  width: \"100%\",\n  height: \"200px\",\n  backgroundImage: \"url(\" + { background } + \")\"\n};\nclass index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Role: null,\n    };\n  }\n\n  componentDidMount() {\n    const userInfo = Cookie.getJSON(\"userInfo\") || null;\n    console.log('userInfo:', userInfo)\n    let role = userInfo ? userInfo.auth[0].role : null;\n    this.setState({ Role: role });\n  }\n\n  render() {\n    const { t } = this.props;\n    const { Role } = this.state\n    return (\n      <aside className=\"main-sidebar sidebar-dark-primary elevation-4 myFont\" style={{ backgroundColor: '#2596be' }}>\n        <div style={{\n          backgroundImage: `url(${background})`, width: '100%', height: 100, backgroundSize: 'cover',\n          backgroundRepeat: 'no-repeat',\n          backgroundPosition: 'center',\n        }}>\n\n\n        </div>\n        <div className=\"sidebar\">\n          <nav className=\"mt-2\">\n            <ul\n              className=\"nav nav-pills nav-sidebar flex-column\"\n              data-widget=\"treeview\"\n              role=\"menu\"\n              data-accordion=\"false\"\n            >\n              {\n                Role == 1 ?\n                  <li className=\"nav-item menu-open\">\n                    <a href=\"#\" className=\"nav-link\">\n                      <i className=\"fas fa-book mr-1\" />\n                      <p>\n                        {t(\"Manage\")}\n                        <i className=\"fas fa-angle-left right\" />\n                      </p>\n                    </a>\n                    <ul className=\"nav nav-treeview\">\n                      {Manage.map((item) => (\n                        <li className=\"nav-item\">\n                          <Link to={item.path} className=\"nav-link\">\n                            <i className={item.icon} />\n                            <p>{t(item.title)}</p>\n                          </Link>\n                        </li>\n                      ))}\n                    </ul>\n                  </li>\n                  : null\n              }\n\n              {\n                Role == 1 || Role == 2 ?\n                  <li className=\"nav-item menu-open\">\n                    <a href=\"#\" className=\"nav-link\">\n                      <i className=\"fas fa-book mr-1\" />\n                      <p>\n                        {t(\"service\")}\n                        <i className=\"fas fa-angle-left right\" />\n                      </p>\n                    </a>\n                    <ul className=\"nav nav-treeview\">\n                      {Service.map((item) => (\n                        <li className=\"nav-item\">\n                          <Link to={item.path} className=\"nav-link\">\n                            <i className={item.icon} />\n                            <p>{t(item.title)}</p>\n                          </Link>\n                        </li>\n                      ))}\n                    </ul>\n\n                  </li> : null\n              }\n\n              {\n                Role == 1 ?\n                  <li className=\"nav-item menu-open\">\n                    <a href=\"#\" className=\"nav-link\">\n                      <i className=\"fas fa-book mr-1\" />\n                      <p>\n                        {t(\"Report\")}\n                        <i className=\"fas fa-angle-left right\" />\n                      </p>\n                    </a>\n                    <ul className=\"nav nav-treeview\">\n                      {Report.map((item) => (\n                        <li className=\"nav-item\">\n                          <Link to={item.path} className=\"nav-link\">\n                            <i className={item.icon} />\n                            <p>{t(item.title)}</p>\n                          </Link>\n                        </li>\n                      ))}\n                    </ul>\n                  </li>\n                  : null\n              }\n\n\n            </ul>\n          </nav>\n        </div>\n      </aside>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    actionType: state.loginReduce.actionType,\n    success: state.loginReduce.success,\n    userInfo: state.loginReduce.userInfo,\n  };\n};\nexport default connect(mapStateToProps, null)(withTranslation()(index));\n","import React, { Component } from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { connect } from \"react-redux\";\nimport { withTranslation } from \"react-i18next\";\nimport Cookies from \"js-cookie\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nconst MySwal = withReactContent(Swal);\nclass Header extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      Name: \"\",\n    };\n  }\n  componentDidMount() {\n    const userInfo = Cookies.getJSON(\"userInfo\") || null;\n    let token = userInfo ? userInfo.token : null;\n    let user_id = userInfo.auth[0].user_id;\n    let createBy = userInfo ? userInfo.auth[0].username : null;\n    this.setState({ token, user_id , Name: createBy });\n\n}\n  onLogout() {\n    const { t } = this.props;\n    Cookies.remove('userInfo'); // fail!\n    MySwal.fire({\n      icon: \"success\",\n      title: t(\"Alert\"),\n      text: t(\"logoutSuccessfully\"),\n      confirmButtonText: t(\"Confirm\"),\n    }).then((result) => {\n      if (result.isConfirmed) {\n        window.location.href = \"/\";\n      }\n    });\n  }\n  render() {\n    const { t } = this.props;\n    const { Name } = this.state;\n    return (\n      <nav className=\"main-header navbar navbar-expand navbar-light\" style={{backgroundColor: '#FFF'}}>\n        <ul className=\"navbar-nav\">\n          \n          <li className=\"nav-item\">\n            <a\n              className=\"nav-link\"\n              data-widget=\"pushmenu\"\n              href=\"#\"\n              role=\"button\"\n            >\n              <i className=\"fas fa-bars\" />\n            </a>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\"\n              data-widget=\"control-sidebar\"\n              data-slide=\"true\"\n              to={\"/dashboard\"}\n              role=\"button\">\n              {t('Home')}\n            </Link>\n          </li>\n          <li className=\"nav-item\">\n            <Link className=\"nav-link\"\n              data-widget=\"control-sidebar\"\n              data-slide=\"true\"\n              to={\"/dashboard\"}\n              role=\"button\">\n              {Name ? Name : null}\n            </Link>\n          </li>\n        </ul>\n        <ul className=\"navbar-nav ml-auto\">\n          <li className=\"nav-item\">\n            <Link\n              className=\"nav-link\"\n              data-widget=\"control-sidebar\"\n              data-slide=\"true\"\n              to={\"/\"}\n              role=\"button\"\n              onClick={() => this.onLogout()}\n            >\n              <i class=\"fas fa-sign-out-alt\" />\n              {t(\"logout\")}\n            </Link>\n          </li>\n        </ul>\n      </nav>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n  return {};\n};\nexport default connect(mapStateToProps, null)(withTranslation()(Header));\n","export default __webpack_public_path__ + \"static/media/loading.bbecf458.gif\";","import React, { Component } from \"react\";\n\nexport default class index extends Component {\n  onBankHome = () => {\n    this.props.onBankHome()\n  }\n  onLogout = () => {\n    this.props.onClickLogout()\n  }\n  onLogin=()=>{\n    this.props.onClickLogin()\n  }\n  render() {\n    return (\n      <nav className=\"navbar navbar-dark navbar-primary navbar-dark)\">\n        <div className=\"container\">\n          <button\n            className=\"navbar-toggler order-1\"\n            type=\"button\"\n            data-toggle=\"collapse\"\n            data-target=\"#navbarCollapse\"\n            aria-controls=\"navbarCollapse\"\n            aria-expanded=\"false\"\n            aria-label=\"Toggle navigation\"\n          >\n            <span className=\"navbar-toggler-icon\" />\n          </button>\n          <div className=\"collapse navbar-collapse order-3\" id=\"navbarCollapse\">\n            <ul className=\"navbar-nav\">\n              <li class=\"nav-item d-none d-sm-inline-block\">\n                <button className=\"btn nav-link\" onClick={() => this.onBankHome()}>\n                  {this.props.home}\n                </button>\n              </li>\n            </ul>\n\n            <form className=\"form-inline ml-0 ml-md-3\">\n              <div className=\"input-group input-group-sm\">\n                <input\n                  className=\"form-control form-control-navbar\"\n                  type=\"search\"\n                  placeholder=\"ຄົ້ນຫາ\"\n                  aria-label=\"Search\"\n                />\n                <div className=\"input-group-append\">\n                  <button className=\"btn btn-navbar\" type=\"submit\">\n                    <i className=\"fas fa-search\" />\n                  </button>\n                </div>\n              </div>\n            </form>\n          </div>\n\n          <ul className=\"order-1 order-md-3 navbar-nav navbar-no-expand ml-auto\">\n            <li className=\"nav-item\">\n              <button className=\"btn nav-link\">\n                {this.props.userName || null}\n              </button>\n            </li>\n            <li className=\"nav-item\">\n              {this.props.userName ?\n                <button className=\"btn nav-link\" onClick={() => this.onLogout()}>\n                  {this.props.Logout}\n                </button> :\n                <button className=\"btn nav-link\" onClick={() => this.onLogin()}>\n                  {this.props.Login}\n                </button>}\n\n            </li>\n          </ul>\n        </div>\n      </nav>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\n\nexport default class index extends Component {\n  static propTypes = {\n    prop: PropTypes,\n  };\n\n  render() {\n    return (\n      \n        <footer className=\"footer\">\n        {/* To the right */}\n        <div className=\"float-right d-none d-sm-inline\">\n        ທາງເລືອກທີ່ດີກວ່າ\n        </div>\n        {/* Default to the left */}\n        <strong>Copyright ©2021 <a href=\"#\">Lottory.com</a>.</strong> ສະຫງວນລິຂະສິດທັງໝົດ.\n        </footer>\n\n    );\n  }\n}\n","import React, { Component } from 'react'\n\nexport default class index extends Component {\n  render() {\n    return (\n      <div>\n        \n      </div>\n    )\n  }\n}\n","import React, { Component } from 'react'\nimport Loading from '../../img/loading.gif'\nexport default class index extends Component {\n    render() {\n        return (\n            <div>\n                <div class=\"divLoader\">\n                    <img\n                        src={Loading}\n                        alt=\"new\"\n                        style={{ width: 100 }}\n                    ></img>\n                </div>\n            </div>\n        )\n    }\n}\n","export default __webpack_public_path__ + \"static/media/Spinner.fb67e575.gif\";","import React, { Component } from 'react'\nimport Loading from '../../img/Spinner.gif'\nexport default class index extends Component {\n    render() {\n        return (\n            <div>\n                <div class=\"divLoader1\">\n                    <img\n                        src={Loading}\n                        alt=\"new\"\n                        style={{ width: 20 }}\n                    ></img>\n                </div>\n            </div>\n        )\n    }\n}\n","import React, { Component } from \"react\";\nimport Swal from 'sweetalert2'\nimport withReactContent from \"sweetalert2-react-content\";\nconst MySwal = withReactContent(Swal);\nexport default class alertYesNo extends Component {\n    onEventClick = () => {\n        alert('ook')\n    }\n    render() {\n        return (\n            <div>\n                {MySwal.fire({\n                    title: \"Are you sure?\",\n                    text: \"You won't be able to revert this!\",\n                    icon: \"warning\",\n                    showCancelButton: true,\n                    confirmButtonColor: \"#3085d6\",\n                    cancelButtonColor: \"#d33\",\n                    confirmButtonText: \"Yes, delete it!\",\n                }).then((result) => {\n                    if (result.isConfirmed) {\n                        this.onEventClick();\n                    }\n                })}\n            </div>\n        );\n    }\n}\n\n\n\n","export default __webpack_public_path__ + \"static/media/11_PTT.6115276b.png\";","import React, { Component } from \"react\";\nimport PropTypes from \"prop-types\";\nimport { Spinner } from '../../components'\nexport default class index extends Component {\n  static propTypes = {\n    prop: PropTypes,\n  };\n  onClickHistory = () => {\n    this.props.onClickHistory()\n  }\n  render() {\n    const { dateResult } = this.props\n    console.log('dateResult:', dateResult)\n    return (\n      <div>\n        <div className=\"content\">\n          <div className=\"container\">\n            <div className=\"row\">\n              {dateResult ?\n                <div className=\"col-lg-12\">\n                  \n                  <div class=\"card card-primary card-outline\">\n                    <div class=\"card-header\">\n                      <h3 className=\"card-title txt1\">XỔ SỐ TRUYỀN THỐNG</h3>\n\n                      <div class=\"card-tools\">\n                        <h3 className=\"card-title txt1\">Ngày: 10/12/2021</h3>\n                      </div>\n                    </div>\n                    <div className=\"card-body\">\n                      <table\n                        className=\"table table-bordered table-hover table-sm\"\n                        style={{ textAlign: \"center\", tableLayout: \"fixed\" }}\n                      >\n                        <tbody>\n                          <tr data-widget=\"expandable-table\">\n                            <td>Ký tự</td>\n                            <td colSpan={4}>5NV-11NV-8NV-3NV-4NV-9NV</td>\n                          </tr>\n                          <tr data-widget=\"expandable-table\">\n                            <td>Đặt biệt</td>\n                            <td colSpan={4}>\n                              <h4 className=\"display-5\" style={{ color: \"#ff0000\" }}>\n                                {dateResult != null ? dateResult.g_zero : <Spinner />}\n                              </h4>\n                            </td>\n                          </tr>\n                          <tr data-widget=\"expandable-table\">\n                            <td>Giải nhất</td>\n                            <td colSpan={4}>\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_one : <Spinner />}</h6>\n                            </td>\n                          </tr>\n                          <tr data-widget=\"expandable-table\">\n                            <td>Giải nhỉ</td>\n                            <td colSpan={2}>\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_two_one : <Spinner />}</h6>\n                            </td>\n                            <td colSpan={2}>\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_two_two : <Spinner />}</h6>\n                            </td>\n                          </tr>\n                          <tr data-widget=\"expandable-table\">\n                            <td rowSpan={2}>Giải ba</td>\n                            <td colSpan={1}>\n\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_three_one : <Spinner />}</h6>\n                            </td>\n                            <td colSpan={2}>\n\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_three_two : <Spinner />}</h6>\n                            </td>\n                            <td colSpan={1}>\n\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_three_three : <Spinner />}</h6>\n                            </td>\n                          </tr>\n                          <tr data-widget=\"expandable-table\">\n                            <td colSpan={1}>\n\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_three_four : <Spinner />}</h6>\n                            </td>\n                            <td colSpan={2}>\n\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_three_five : <Spinner />}</h6>\n                            </td>\n                            <td colSpan={1}>\n\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_three_six : <Spinner />}</h6>\n                            </td>\n                          </tr>\n                          <tr data-widget=\"expandable-table\">\n                            <td>Giải tư</td>\n                            <td colSpan={1}>\n\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_four_one : <Spinner />}</h6>\n                            </td>\n                            <td colSpan={1}>\n\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_four_two : <Spinner />}</h6>\n                            </td>\n                            <td colSpan={1}>\n\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_four_three : <Spinner />}</h6>\n                            </td>\n                            <td colSpan={1}>\n\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_four_four : <Spinner />}</h6>\n                            </td>\n                          </tr>\n                          <tr data-widget=\"expandable-table\">\n                            <td rowSpan={2}>Giải năm</td>\n                            <td colSpan={1}>\n\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_five_one : <Spinner />}</h6>\n                            </td>\n                            <td colSpan={2}>\n\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_five_two : <Spinner />}</h6>\n                            </td>\n                            <td colSpan={1}>\n\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_five_three : <Spinner />}</h6>\n                            </td>\n                          </tr>\n                          <tr data-widget=\"expandable-table\">\n                            <td colSpan={1}>\n\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_five_four : <Spinner />}</h6>\n                            </td>\n                            <td colSpan={2}>\n\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_five_five : <Spinner />}</h6>\n                            </td>\n                            <td colSpan={1}>\n\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_five_six : <Spinner />}</h6>\n                            </td>\n                          </tr>\n                          <tr data-widget=\"expandable-table\">\n                            <td>Giải sau</td>\n                            <td colSpan={1}>\n\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_six_one : <Spinner />}</h6>\n                            </td>\n                            <td colSpan={2}>\n\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_six_two : <Spinner />}</h6>\n                            </td>\n                            <td colSpan={1}>\n\n                              <h6 className=\"display-7\">{dateResult != null ? dateResult.g_six_three : <Spinner />}</h6>\n                            </td>\n                          </tr>\n                          <tr data-widget=\"expandable-table\">\n                            <td>Giải bày</td>\n                            <td colSpan={1}>\n                              <h4\n                                className=\"display-5\"\n                                style={{ color: \" #ff0000\" }}\n                              >\n                                {dateResult != null ? dateResult.g_seven_one : <Spinner />}\n                              </h4>\n                            </td>\n                            <td colSpan={1}>\n                              <h4\n                                className=\"display-5\"\n                                style={{ color: \" #ff0000\" }}\n                              >\n                                {dateResult != null ? dateResult.g_seven_two : <Spinner />}\n                              </h4>\n                            </td>\n                            <td colSpan={1}>\n                              <h4\n                                className=\"display-5\"\n                                style={{ color: \" #ff0000\" }}\n                              >\n                                {dateResult != null ? dateResult.g_seven_three : <Spinner />}\n                              </h4>\n                            </td>\n                            <td colSpan={1}>\n                              <h4\n                                className=\"display-5\"\n                                style={{ color: \" #ff0000\" }}\n                              >\n                                {dateResult != null ? dateResult.g_seven_four : <Spinner />}\n                              </h4>\n                            </td>\n                          </tr>\n                        </tbody>\n                      </table>\n                    </div>\n                  </div>\n\n                </div>\n                : null}\n\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { requestLoginAction } from \"../../actions/loginActions\";\nimport { LOGIN_SUCCESS, LOGIN_FAILED } from \"../../utils/commonType.js\";\nimport { requestBodyLogin } from \"../../api/bodyReq\";\nimport { LoadingComponet } from \"../../components\";\nimport Cookie from \"js-cookie\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport { withTranslation } from \"react-i18next\";\nimport logo from '../../img/11_PTT.png';\nconst MySwal = withReactContent(Swal);\nclass index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      accessToken: null,\n      userName: null,\n      password: null,\n      isLoginSuccess: false,\n      isRegister: false,\n      loading: false,\n    };\n\n    this.pressClickSignIn = this.pressClickSignIn.bind(this);\n    this.onTextChangeUserName = this.onTextChangeUserName.bind(this); //input text\n    this.onTextChangePassword = this.onTextChangePassword.bind(this); //input text\n  }\n  componentWillReceiveProps(nextProps) {\n    const { t } = this.props;\n    const { isLoginSuccess } = this.state;\n    if (isLoginSuccess) {\n      switch (nextProps.actionType) {\n        case LOGIN_SUCCESS:\n          const userInfo = Cookie.getJSON(\"userInfo\") || null;\n          console.log(\"userInfo:\", userInfo);\n          MySwal.fire({\n            icon: \"success\",\n            title: t(\"LoginSuccessfully\"),\n            text: t(\"welcome\") + userInfo.auth[0].user_name,\n            confirmButtonText: t(\"Login\"),\n          }).then((result) => {\n            if (result.isConfirmed) {\n              window.location.href = \"/dashboard\";\n            }\n          });\n          this.setState({ isLoginSuccess: false, loading: false });\n          break;\n        case LOGIN_FAILED:\n          MySwal.fire({\n            icon: \"error\",\n            title: t(\"info\"),\n            text: t(\"error\"),\n            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n          });\n          this.setState({ isLoginSuccess: false, loading: false });\n          break;\n        default:\n          break;\n      }\n    }\n  }\n\n  onTextChangeUserName(event) {\n    this.setState({ userName: event.target.value });\n  }\n\n  onTextChangePassword(event) {\n    this.setState({ password: event.target.value });\n  }\n\n  pressClickSignIn() {\n    const { t } = this.props;\n    const { userName, password } = this.state;\n    if (userName && password) {\n      let data = requestBodyLogin(userName, password);\n      this.props.requestLoginAction(data);\n      this.setState({ isLoginSuccess: true, loading: true });\n    } else {\n      MySwal.fire({\n        icon: \"error\",\n        title: t(\"info\"),\n        text: t(\"EnterInfo\"),\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n      });\n    }\n  }\n\n  render() {\n    const { t, i18n } = this.props;\n    const changeLanguage = (lng) => {\n      i18n.changeLanguage(lng);\n    };\n    const { loading } = this.state;\n    return (\n      <div>\n        {loading ? <LoadingComponet /> : null}\n        <div className=\"wrapper\">\n          <nav className=\"navbar navbar-expand-md navbar-light navbar-white\">\n            <ul className=\"navbar-nav ml-auto\">\n              <li className=\"nav-item dropdown\">\n                <a className=\"nav-link\" data-toggle=\"dropdown\" href=\"#\">\n                  <i className=\"flag-icon flag-icon-la\" />\n                </a>\n                <div className=\"dropdown-menu dropdown-menu-right p-0\">\n                  <button\n                    className=\"dropdown-item active\"\n                    onClick={() => changeLanguage(\"lo\")}\n                  >\n                    <i className=\"flag-icon flag-icon-la mr-2\" /> LAO\n                  </button>\n\n                  <button\n                    className=\"dropdown-item\"\n                    onClick={() => changeLanguage(\"en\")}\n                  >\n                    <i className=\"flag-icon flag-icon-us mr-2\" /> English{\" \"}\n                  </button>\n                </div>\n              </li>\n            </ul>\n          </nav>\n        </div>\n        <div className=\"login-page\">\n          <div className=\"login-box\">\n            <div className=\"card card-outline \">\n            <img\n                                                src={logo}\n                                                className=\"img-circle\"\n                                                style={{ width: 100, height: 50, marginLeft: 125 }}\n                                            />\n              <div className=\"card-header text-center\">\n            \n                <b>{t(\"login\")}</b>\n              </div>\n              <div className=\"card-body login-card-body\">\n                <p className=\"login-box-msg\"></p>\n                <div>\n                  <div className=\"input-group mb-3\">\n                    <input\n                      type=\"userName\"\n                      className=\"form-control\"\n                      placeholder={t(\"userName\")}\n                      onChange={this.onTextChangeUserName}\n                    />\n                    <div className=\"input-group-append\">\n                      <div className=\"input-group-text\">\n                        <span className=\"fas fa-user\" />\n                      </div>\n                    </div>\n                  </div>\n                  <div className=\"input-group mb-3\">\n                    <input\n                      type=\"password\"\n                      className=\"form-control\"\n                      placeholder={t(\"password\")}\n                      onChange={this.onTextChangePassword}\n                    />\n                    <div className=\"input-group-append\">\n                      <div className=\"input-group-text\">\n                        <span className=\"fas fa-lock\" />\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"social-auth-links text-center mb-3\">\n                  <button\n                    type=\"submit\"\n                    onClick={this.pressClickSignIn}\n                    className=\"btn btn-block btn-success\"\n                  >\n                    {t(\"login\")}\n                  </button>\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    actionType: state.loginReduce.actionType,\n    message: state.loginReduce.message,\n    success: state.loginReduce.success,\n    userInfo: state.loginReduce.userInfo,\n  };\n};\n\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    requestLoginAction: (data) => dispatch(requestLoginAction(data)),\n  };\n};\nexport default connect(\n  mapStateToProps,\n  mapDispatchToProps\n)(withTranslation()(index));\n","export function requestBodyLogin(userName, password) {\n  let data = {\n\n    \"username\": `${userName}`,\n    \"password\": `${password}`\n\n  }\n  return data\n}\n\nexport function requestBodyCreateNewCars(car_id, car_name, dimention, user_id) {\n  let data = {\n    \"car_id\": car_id,\n    \"car_name\": car_name,\n    \"dimention\": dimention,\n    \"user_id\": user_id\n  }\n  return data\n}\n\nexport function bodyDeleteCar(car_id) {\n  let data = {\n    \"car_id\": car_id\n  }\n  return data\n}\n\nexport function bodyUpdateCar(carId, carName, dimenTion, user_id) {\n  let data = {\n    \"car_id\": carId,\n    \"car_name\": carName,\n    \"dimention\": dimenTion,\n    \"user_id\": user_id\n  }\n  return data\n}\n\nexport function requestBodyCreateNewEmployee(employee_id, employeename, address, position, phone, user_id) {\n  let data = {\n    \"employee_id\": employee_id,\n    \"employeename\": employeename,\n    \"address\": address,\n    \"position\": position,\n    \"phone\": phone,\n    \"user_id\": user_id\n  }\n  return data\n}\nexport function bodyUpdateEmployee(employee_id, employeename, address, position, phone, user_id) {\n  let data = {\n    \"employee_id\": employee_id,\n    \"employeename\": employeename,\n    \"address\": address,\n    \"position\": position,\n    \"phone\": phone,\n    \"user_id\": user_id\n  }\n  return data\n}\n\nexport function bodyDeletEmployee(employee_id) {\n  let data = {\n    \"employee_id\": employee_id\n  }\n  return data\n}\n\n\nexport function requestBodyCreateNewSuppliers(supplier_id, supplier_name, user_id) {\n  let data = {\n    \"supplier_id\": supplier_id,\n    \"supplier_name\": supplier_name,\n    \"user_id\": user_id\n  }\n  return data\n}\n\nexport function bodyDeleteSupplier(supplier_id) {\n  let data = {\n    \"supplier_id\": supplier_id\n  }\n  return data\n}\n\nexport function bodyUpdateSupplier(supplier_id, supplier_name, user_id) {\n  let data = {\n    \"supplier_id\": supplier_id,\n    \"supplier_name\": supplier_name,\n    \"user_id\": user_id\n  }\n  return data\n}\n\nexport function requestBodyCreateNewOils(oils_id, oil_name, status, qty, price, user_id, supplier_id) {\n  let data = {\n    \"oils_id\": oils_id,\n    \"oil_name\": oil_name,\n    \"status\": status,\n    \"qty\": qty,\n    \"price\": price,\n    \"user_id\": user_id,\n    \"supplier_id\": supplier_id\n  }\n  return data\n}\n\nexport function bodyDeleteOil(oils_id) {\n  let data = {\n    \"oils_id\": oils_id\n  }\n  return data\n}\n\nexport function bodyUpdateOil(oils_id, oil_name, status, qty, price, user_id, Supplier_id) {\n  let data = {\n    \"oils_id\": oils_id,\n    \"oil_name\": oil_name,\n    \"status\": status,\n    \"qty\": qty,\n    \"price\": price,\n    \"user_id\": user_id,\n    \"supplier_id\": Supplier_id\n  }\n  return data\n}\n\n\nexport function requestBodyCreateNewCustomerss(cus_id, cus_name, address, contact, status, phone, user_id) {\n  let data = {\n    \"cus_id\": cus_id,\n    \"cus_name\": cus_name,\n    \"address\": address,\n    \"contact\": contact,\n    \"status\": status,\n    \"phone\": phone,\n    \"user_id\": user_id\n  }\n  return data\n}\n\nexport function bodyDeleteCustomers(cus_id) {\n  let data = {\n    \"cus_id\": cus_id\n  }\n  return data\n}\n//\nexport function bodyUpdateCustomers(cus_id, cus_name, address, contact, status, phone, user_id) {\n  let data = {\n    \"cus_id\": cus_id,\n    \"cus_name\": cus_name,\n    \"address\": address,\n    \"contact\": contact,\n    \"status\": status,\n    \"phone\": phone,\n    \"user_id\": user_id\n  }\n  return data\n}\n\n\nexport function requestBodyCreateNewUsers(user_id, username, prasswold, role, level, CreatedBy) {\n  let data = {\n    \"user_id\": user_id,\n    \"username\": username,\n    \"prasswold\": prasswold,\n    \"role\": role,\n    \"level\": level,\n    \"CreatedBy\": CreatedBy\n  }\n  return data\n}\n\nexport function bodyDeleteUsers(user_id) {\n  let data = {\n    \"user_id\": user_id\n  }\n  return data\n}\n\nexport function bodyUpdateUsers(user_id, username, prasswold, role, level, CreatedBy) {\n  let data = {\n    \"user_id\": user_id,\n    \"username\": username,\n    \"prasswold\": prasswold,\n    \"role\": role,\n    \"level\": level,\n    \"CreatedBy\": CreatedBy\n  }\n  return data\n}\n\nexport function requestBodyCreateNewDocument(id_documents, address, order_id, contact, traid, date, company, dimention, phone, service, price, user_id) {\n  let data = {\n    \"id_documents\": id_documents,\n    \"address\": address,\n    \"order_id\": order_id,\n    \"contact\": contact,\n    \"traid\": traid,\n    \"date\": date,\n    \"company\": company,\n    \"dimention\": dimention,\n    \"phone\": phone,\n    \"service\": service,\n    \"price\": price,\n    \"user_id\": user_id\n  }\n  return data\n}\n\nexport function bodyDeleteDocument(id_documents) {\n  let data = {\n    \"id_documents\": id_documents\n  }\n  return data\n}\n\nexport function bodyUpdateDocument(id_documents, address, order_id, contact, traid, date, company, dimention, phone, service, price, user_id) {\n  let data = {\n    \"id_documents\": id_documents,\n    \"address\": address,\n    \"order_id\": order_id,\n    \"contact\": contact,\n    \"traid\": traid,\n    \"date\": date,\n    \"company\": company,\n    \"dimention\": dimention,\n    \"phone\": phone,\n    \"service\": service,\n    \"price\": price,\n    \"user_id\": user_id\n  }\n  return data\n}\n// transport_id\tid_documents\tdimention\torder_id\toil_id\tcompany\tsupplier_id\tcar_id\tuser_id\nexport function requestBodyCreateNewTransports(transport_id, id_documents, dimention, order_id, oil_id, company, supplier_id, car_id, user_id) {\n  let data = {\n    \"transport_id\": transport_id,\n    \"id_documents\": id_documents,\n    \"dimention\": dimention,\n    \"order_id\": order_id,\n    \"oil_id\": oil_id,\n    \"company\": company,\n    \"supplier_id\": supplier_id,\n    \"car_id\": car_id,\n    \"user_id\": user_id\n  }\n  return data\n}\n\nexport function bodyDeleteTransports(transport_id) {\n  let data = {\n    \"transport_id\": transport_id\n  }\n  return data\n}\n\nexport function bodyUpdateTransports(transport_id, id_documents, dimention, order_id, oil_id, company, supplier_id, car_id, user_id) {\n  let data = {\n    \"transport_id\": transport_id,\n    \"id_documents\": id_documents,\n    \"dimention\": dimention,\n    \"order_id\": order_id,\n    \"oil_id\": oil_id,\n    \"company\": company,\n    \"supplier_id\": supplier_id,\n    \"car_id\": car_id,\n    \"user_id\": user_id\n  }\n  return data\n}\n\nexport function bodyInsertSell(sales_id, qty, total, status_sell, cus_id, user_id) {\n  let data = {\n    \"sales_id\": sales_id,\n    \"qty\": qty,\n    \"total\": total,\n    \"status_sell\": status_sell,\n    \"cus_id\": cus_id,\n    \"user_id\": user_id\n  }\n  return data\n}\n\nexport function bodyInsertSellDetail(listData) {\n  let data = {\n    \"listData\": listData\n  }\n  return data\n}\n\nexport function bodyInsertOrder(orders_id, service, total, company, date, qty, user_id, status_order, id_sup) {\n  let data = {\n    \"orders_id\": orders_id,\n    \"service\": service,\n    \"total\": total,\n    \"company\": company,\n    \"date\": date,\n    \"qty\": qty,\n    \"user_id\": user_id,\n    \"status_order\": status_order,\n    \"supplier_id\": id_sup,\n  }\n  return data\n}\n\nexport function bodyInsertOrderDetail(listData) {\n  let data = {\n    \"listData\": listData\n  }\n  return data\n}\n\nexport function bodyInsertImport(ImpID, qty, total, ImpDate, order_id, id_sup) {\n  let data = {\n    \"ImpID\": ImpID,\n    \"Qty\": qty,\n    \"Price\": total,\n    \"ImpDate\": ImpDate,\n    \"Orders_id\": order_id,\n    \"supplier_id\": id_sup,\n  }\n  return data\n}\nexport function bodyInsertImportDetail(listData) {\n  let data = {\n    \"listData\": listData\n  }\n  return data\n}\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\n\nimport Header from \"../../components/Header\";\nimport Menu from \"../../components/Menu\";\nimport Footer from \"../../components/Footer\";\nimport { requestLoginAction } from \"../../actions/loginActions\";\nimport images from '../../themes/img'\n// import imgg from '../../img/01_icon.png'\nclass index extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      isLoadPage: false,\n    };\n  }\n\n  componentDidMount() {\n    // window.location.reload(false);\n  }\n\n  componentWillReceiveProps(nextProps) {\n    console.log(\"<<<<< NextProps Login >>>>>\", nextProps);\n    if (nextProps !== null) {\n      console.log(nextProps.userInfo);\n    }\n  }\n\n  render() {\n    return (\n      <div>\n        <Header />\n        <Menu />\n        <div className=\"content-wrapper body\">\n          <section className=\"content-header\">\n            <div className=\"container-fluid\">\n              <div className=\"row mb-2\">\n                <div className=\"col-sm-6\">\n                  <h1>ຫນ້າຫລັກ</h1>\n                </div>\n                <div className=\"col-sm-6\">\n                  <ol className=\"breadcrumb float-sm-right\">\n                  </ol>\n                </div>\n              </div>\n            </div>\n          </section>\n          <section className=\"content\">\n            <div className=\"container-fluid\">\n\n              <div className=\"row\">\n\n                {/* {images.map(({ id, src, title, number }) =>\n                  <div className=\"col-12 col-sm-6 col-md-3\">\n                    <div className=\"info-box\">\n                      <span className=\"info-box-icon\">\n                        <img key={id} src={imgg} />\n                      </span>\n                      <div className=\"info-box-content\">\n                        <span className=\"info-box-text\">{title}</span>\n                        <span className=\"info-box-number\">\n                          {number}\n                        </span>\n                      </div>\n                    </div>\n                  </div>)} */}\n              </div>\n\n\n            </div>\n          </section>\n        </div>\n        <Footer />\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    actionType: state.loginReduce.actionType,\n    success: state.loginReduce.success,\n    userInfo: state.loginReduce.userInfo,\n  };\n};\nconst mapDispatchToProps = (dispatch) => {\n  return {\n    requestLoginAction: (data) => dispatch(requestLoginAction(data)),\n  };\n};\nexport default connect(mapStateToProps, mapDispatchToProps)(index);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { withTranslation } from \"react-i18next\";\nclass index extends Component {\n    \n  render() {\n    const { t } = this.props;\n    return (\n      <div class=\"content-wrapper\">\n        <section class=\"content-header\">\n          <div class=\"container-fluid\">\n            <div class=\"row mb-2\">\n              <div class=\"col-sm-6\">\n                <h1>{t('404ErrorPage')}</h1>\n              </div>\n              <div class=\"col-sm-6\">\n                \n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section class=\"content\">\n          <div class=\"error-page\">\n            <h2 class=\"headline text-warning\"> 404</h2>\n            <div class=\"error-content\">\n              <h3>\n                <i class=\"fas fa-exclamation-triangle text-warning\"></i> Oops!\n               {t('Pagenotfound')}\n              </h3>\n              <p>\n               {t('404Detial')}\n              </p>\n            </div>\n          </div>\n        </section>\n      </div>\n    );\n  }\n}\nconst mapStateToProps = (state) => {\n    return {\n    };\n  };\n  \n  const mapDispatchToProps = (dispatch) => {\n    return {\n    };\n  };\n  export default connect(\n    mapStateToProps,\n    mapDispatchToProps\n  )(withTranslation()(index));\n","import React, { Component } from 'react'\nimport Loading from '../../img/loading.gif'\nexport default class index extends Component {\n    render() {\n        return (\n            <div>\n                <div class=\"divLoader\">\n                    <img\n                        src={Loading}\n                        alt=\"new\"\n                        style={{ width: 100 }}\n                    ></img>\n                </div>\n            </div>\n        )\n    }\n}\n","import {\r\n  GET_ALL_CAR,\r\n  DELETE_BY_ID_CAR,\r\n  INSRT_NEW_CAR,\r\n  UPDATE_CAR\r\n} from \"../utils/commonType\";\r\n\r\nexport const requestGetAllCar = (data) => {\r\n  return {\r\n    type: GET_ALL_CAR,\r\n    data,\r\n  };\r\n};\r\nexport const requestDeleteCar = (data, token) => {\r\n  return {\r\n    type: DELETE_BY_ID_CAR,\r\n    data,\r\n    token,\r\n  };\r\n};\r\n\r\nexport const requestInsertCar = (data, token) => {\r\n  return {\r\n    type: INSRT_NEW_CAR,\r\n    data,\r\n    token,\r\n  };\r\n};\r\nexport const requestUpdateCar = (data, token) => {\r\n  return {\r\n    type: UPDATE_CAR,\r\n    data,\r\n    token,\r\n  };\r\n};\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport {\r\n  bodyDeleteCar,\r\n  requestBodyCreateNewCars,\r\n  bodyUpdateCar,\r\n} from \"../../api/bodyReq\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport {\r\n  requestGetAllCar,\r\n  requestDeleteCar,\r\n  requestInsertCar,\r\n  requestUpdateCar,\r\n} from \"../../actions/carAction\";\r\nimport {\r\n  GET_ALL_CAR_FAILED,\r\n  GET_ALL_CAR_SUCCESS,\r\n  INSRT_NEW_CAR_SUCCESS,\r\n  INSRT_NEW_CAR_FAILED,\r\n  DELETE_BY_ID_CAR_FAILED,\r\n  DELETE_BY_ID_CAR_SUCCESS,\r\n  UPDATE_CAR_FAILED,\r\n  UPDATE_CAR_SUCCESS,\r\n} from \"../../utils/commonType\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Cookie from \"js-cookie\";\r\nimport { LoadingComponet } from \"../../components\";\r\nimport Moment from 'react-moment';\r\n\r\nconst MySwal = withReactContent(Swal);\r\nclass componentName extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      showDelete: false,\r\n      loading: false,\r\n      showForm: false,\r\n      status: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const userInfo = Cookie.getJSON(\"userInfo\") || null;\r\n    let token = userInfo ? userInfo.token : null;\r\n    let user_id = userInfo.auth[0].user_id;\r\n    this.loadData(token);\r\n    this.setState({ token, user_id });\r\n  }\r\n  loadData(token) {\r\n    this.setState({ loading: true, onGetInfo: true });\r\n    this.props.requestGetAllCar(token);\r\n  }\r\n  onAddNewInformation = () => {\r\n    alert(\"ok\");\r\n  };\r\n  onRefresh() {}\r\n  componentWillReceiveProps(nextProps) {\r\n    const { t } = this.props;\r\n    const { onGetInfo, isInsertCar, isDeleteCarById, onCallUpdateCar, token } =\r\n      this.state;\r\n    console.log(\"nextProps car:\", nextProps);\r\n    if (onGetInfo) {\r\n      if (nextProps.dataResultCar) {\r\n        switch (nextProps.actionType) {\r\n          case GET_ALL_CAR_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                let data = nextProps.dataResultCar;\r\n                this.setState({ onGetInfo: false, loading: false, data });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({ onGetInfo: false, loading: false });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case GET_ALL_CAR_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({ onGetInfo: false, loading: false });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isInsertCar) {\r\n      if (nextProps.dataResultCarNew) {\r\n        switch (nextProps.actionType) {\r\n          case INSRT_NEW_CAR_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/CarInformation\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  isInsertCar: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  isInsertCar: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n            break;\r\n          case INSRT_NEW_CAR_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              isInsertCar: false,\r\n              loading: false,\r\n              showForm: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isDeleteCarById) {\r\n      if (nextProps.dataResultCarDelete) {\r\n        switch (nextProps.actionType) {\r\n          case DELETE_BY_ID_CAR_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/CarInformation\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  isDeleteCarById: false,\r\n                  loading: false,\r\n                  showDelete: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  isDeleteCarById: false,\r\n                  loading: false,\r\n                  showDelete: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n            break;\r\n          case DELETE_BY_ID_CAR_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              isDeleteCarById: false,\r\n              loading: false,\r\n              showDelete: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (onCallUpdateCar) {\r\n      if (nextProps.dataResultCarUpdate) {\r\n        switch (nextProps.actionType) {\r\n          case UPDATE_CAR_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/CarInformation\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  onCallUpdateCar: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  onCallUpdateCar: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case UPDATE_CAR_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              onCallUpdateCar: false,\r\n              loading: false,\r\n              showForm: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onPressEdit = (item) => {\r\n    const { t } = this.props;\r\n    // console.log(\"---item----\", item);\r\n    if (item) {\r\n      let carId = item.car_id;\r\n      let carName = item.car_name;\r\n      let dimenTion = item.dimention;\r\n      this.setState({\r\n        carId,\r\n        carName,\r\n        dimenTion,\r\n        status: true,\r\n        showForm: true,\r\n      });\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onChangeTextcar_name = (text) => {\r\n    const value = text.target.value;\r\n    const errorcar_name =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({ car_name: value, errorcar_name, carName: value });\r\n  };\r\n  onChangeTextdimention = (text) => {\r\n    const value = text.target.value;\r\n    const errordimention =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({ dimention: value, errordimention, dimenTion: value });\r\n  };\r\n  onCloseModalForm = () => {\r\n    const { t } = this.props;\r\n    const { car_name, dimention, token } = this.state;\r\n    if (car_name && dimention) {\r\n      this.setState({ loading: true, isInsertCar: true });\r\n      // let token = this.state.token\r\n      let data = requestBodyCreateNewCars(null, car_name, dimention, \"1\");\r\n      this.props.requestInsertCar(data, token);\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onCloseModalFormUpdate = () => {\r\n    const { t } = this.props;\r\n    const { carId, carName, dimenTion, user_id, token } = this.state;\r\n    if (carId && carName && dimenTion && user_id && token) {\r\n      let data = bodyUpdateCar(carId, carName, dimenTion, user_id);\r\n      this.props.requestUpdateCar(data, token);\r\n      this.setState({ loading: true, onCallUpdateCar: true });\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onPressDelete = (item) => {\r\n    this.setState({\r\n      showDelete: true,\r\n      car_id: item.car_id,\r\n    });\r\n  };\r\n  onCloseDelete = () => {\r\n    this.setState({ showDelete: false });\r\n  };\r\n  onCloseModalFormInsert = () => {\r\n    this.setState({ showForm: false });\r\n  };\r\n  onAddNew = () => {\r\n    this.setState({ showForm: true, status: false });\r\n  };\r\n  onClickDelete = () => {\r\n    const { t } = this.props;\r\n    const { token } = this.state;\r\n    if (this.state.car_id) {\r\n      this.setState({ loading: true, isDeleteCarById: true });\r\n      let data = bodyDeleteCar(this.state.car_id);\r\n      this.props.requestDeleteCar(data, token);\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { t } = this.props;\r\n    const {\r\n      data,\r\n      car_name,\r\n      errorcar_name,\r\n      dimention,\r\n      errordimention,\r\n      showDelete,\r\n      showForm,\r\n      carName,\r\n      dimenTion,\r\n      status,\r\n      loading\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n         {loading ? <LoadingComponet /> : null}\r\n      <div className=\"content-wrapper body\">\r\n        <section className=\"content-header\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row mb-2\">\r\n              <div className=\"col-sm-6\">\r\n                <h1>{t(\"CarInformation\")}</h1>\r\n              </div>\r\n              <div className=\"col-sm-6\">\r\n                <ol className=\"breadcrumb float-sm-right\">\r\n                  <li className=\"breadcrumb-item\">\r\n                    <a className=\"newEvent\" onClick={() => this.onRefresh()}>\r\n                      <i class=\"fas fa-sync-alt\"></i> {t(\"Refresh\")}\r\n                    </a>\r\n                  </li>\r\n                  <li className=\"breadcrumb-item\">\r\n                    <a className=\"newEvent\" onClick={() => this.onAddNew()}>\r\n                      <i class=\"fas fa-user\"></i> {t(\"AddNewInformation\")}\r\n                    </a>\r\n                  </li>\r\n                </ol>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </section>\r\n        <section className=\"content\">\r\n          <div className=\"container-fluid\">\r\n            <div className=\"row\">\r\n              <div className=\"col-12\">\r\n                <div className=\"card\">\r\n                  <div className=\"card-header\">\r\n                    <h3 className=\"card-title\">{t(\"Description\")}</h3>\r\n                    <div className=\"card-tools\">\r\n                     \r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"card-body table-responsive p-0\">\r\n                    <table className=\"table table-hover text-nowrap\">\r\n                      <thead>\r\n                        <tr>\r\n                          <th>{t(\"Level\")}</th>\r\n                          <th>{t(\"car_id\")}</th>\r\n                          <th>{t(\"car_name\")}</th>\r\n                          <th>{t(\"dimention\")}</th>\r\n                          <th>{t(\"createdAt\")}</th>\r\n                          <th>{t(\"updatedAt\")}</th>\r\n                          <th>{t(\"user_id\")}</th>\r\n                          <th>{t(\"option\")}</th>\r\n                        </tr>\r\n                      </thead>\r\n                      <tbody>\r\n                        {data\r\n                          ? data.map((item, i) => (\r\n                              <tr key={i}>\r\n                                <td>{i + 1}</td>\r\n                                <td>{item.car_id}</td>\r\n                                <td>{item.car_name}</td>\r\n                                <td>{item.dimention}</td>\r\n                                <td>\r\n                                  <Moment format=\"YYYY/MM/DD\">{item.createdAt}</Moment>\r\n                                </td>\r\n                                <td>\r\n                                <Moment format=\"YYYY/MM/DD\">{item.updatedAt}</Moment>\r\n                                </td>\r\n                                <td>{item.username}</td>\r\n                                <td>\r\n                                  <div class=\"btn-group\">\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"btn btn-success btn-xs\"\r\n                                      onClick={() => this.onPressEdit(item)}\r\n                                    >\r\n                                      <i className=\"fas fa-edit\" />\r\n                                    </button>\r\n\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"btn btn-danger btn-xs\"\r\n                                      onClick={() => this.onPressDelete(item)}\r\n                                    >\r\n                                      <i className=\"fas fa-trash\" />\r\n                                    </button>\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n                            ))\r\n                          : null}\r\n                      </tbody>\r\n                    </table>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </div>\r\n\r\n          <Modal\r\n            className=\"modal\"\r\n            show={showForm}\r\n            animation={true}\r\n            onHide={() => this.onCloseModalFormInsert()}\r\n          >\r\n            <Modal.Header>\r\n              <Modal.Title>\r\n                {status ? t(\"formUpdateInformation\") : t(\"formAddInformation\")}\r\n              </Modal.Title>\r\n              <Modal.Title>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  onClick={() => this.onCloseModalFormInsert()}\r\n                >\r\n                  <span aria-hidden=\"true\">×</span>\r\n                </button>\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>\r\n              <div class=\"modal-body\">\r\n                <div className=\"form-row\">\r\n                  <div className=\"col-md-6 mb-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>{t(\"car_name\")}</label>\r\n                      <input\r\n                        name=\"car_name\"\r\n                        value={status ? carName : car_name}\r\n                        type=\"text\"\r\n                        className={\r\n                          errorcar_name === undefined\r\n                            ? \"form-control\"\r\n                            : errorcar_name\r\n                            ? \"form-control is-invalid\"\r\n                            : \"form-control is-valid\"\r\n                        }\r\n                        placeholder={t(\"car_name\")}\r\n                        onChange={(text) => this.onChangeTextcar_name(text)}\r\n                      />\r\n                      {errorcar_name ? (\r\n                        <p class=\"text-danger\">{errorcar_name}</p>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n\r\n                  <div className=\"col-md-6 mb-6\">\r\n                    <div class=\"form-group\">\r\n                      <label>{t(\"dimention\")}</label>\r\n                      <input\r\n                        name=\"dimention\"\r\n                        value={status ? dimenTion : dimention}\r\n                        type=\"text\"\r\n                        className={\r\n                          errordimention === undefined\r\n                            ? \"form-control\"\r\n                            : errordimention\r\n                            ? \"form-control is-invalid\"\r\n                            : \"form-control is-valid\"\r\n                        }\r\n                        placeholder={t(\"dimention\")}\r\n                        onChange={(text) => this.onChangeTextdimention(text)}\r\n                      />\r\n                      {errordimention ? (\r\n                        <p class=\"text-danger\">{errordimention}</p>\r\n                      ) : null}\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </Modal.Body>\r\n            <Modal.Footer>\r\n              {status ? (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.onCloseModalFormUpdate()}\r\n                  class=\"btn btn-success\"\r\n                  className={\r\n                    !car_name || errorcar_name || !dimention || errordimention\r\n                      ? \"btn btn-secondary disabled\"\r\n                      : \"btn btn-success\"\r\n                  }\r\n                >\r\n                  {t(\"Confirm\")}\r\n                </button>\r\n              ) : (\r\n                <button\r\n                  type=\"button\"\r\n                  onClick={() => this.onCloseModalForm()}\r\n                  class=\"btn btn-primary\"\r\n                  className={\r\n                    !car_name || errorcar_name || !dimention || errordimention\r\n                      ? \"btn btn-secondary disabled\"\r\n                      : \"btn btn-primary\"\r\n                  }\r\n                >\r\n                  {t(\"Confirm\")}\r\n                </button>\r\n              )}\r\n\r\n              <button\r\n                type=\"button\"\r\n                class=\"btn btn-default\"\r\n                onClick={() => this.onCloseModalFormInsert()}\r\n              >\r\n                {t(\"cancel\")}\r\n              </button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n\r\n          <Modal\r\n            className=\"modal\"\r\n            show={showDelete}\r\n            size=\"sm\"\r\n            onHide={() => this.onCloseDelete()}\r\n          >\r\n            <Modal.Header>\r\n              <Modal.Title>{t(\"Confirm\")}</Modal.Title>\r\n              <Modal.Title>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"close\"\r\n                  onClick={() => this.onCloseDelete()}\r\n                >\r\n                  <span aria-hidden=\"true\">×</span>\r\n                </button>\r\n              </Modal.Title>\r\n            </Modal.Header>\r\n            <Modal.Body>{t(\"DoYouReallyWantDeleteData\")}</Modal.Body>\r\n            <Modal.Footer>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-default\"\r\n                onClick={() => this.onCloseDelete()}\r\n              >\r\n                {t(\"clase\")}\r\n              </button>\r\n              <button\r\n                type=\"button\"\r\n                className=\"btn btn-primary\"\r\n                onClick={() => this.onClickDelete()}\r\n              >\r\n                {t(\"Confirm\")}\r\n              </button>\r\n            </Modal.Footer>\r\n          </Modal>\r\n        </section>\r\n      </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dataResultCar: state.carReducer.dataResultCar,\r\n    actionType: state.carReducer.actionType,\r\n    responseCode: state.carReducer.responseCode,\r\n    message: state.carReducer.message,\r\n    dataResultCarNew: state.carReducer.dataResultCarNew,\r\n    dataResultCarDelete: state.carReducer.dataResultCarDelete,\r\n    dataResultCarUpdate: state.carReducer.dataResultCarUpdate,\r\n    userInfo: state.loginReduce.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    requestGetAllCar: (data) => dispatch(requestGetAllCar(data)),\r\n    requestDeleteCar: (data, token) => dispatch(requestDeleteCar(data, token)),\r\n    requestInsertCar: (data, token) => dispatch(requestInsertCar(data, token)),\r\n    requestUpdateCar: (data, token) => dispatch(requestUpdateCar(data, token)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation()(componentName));\r\n","export function replaceAll(str, find, replace) {\n    return str.replace(new RegExp(find, 'g'), replace)\n  }\n  export function formatNumber(text) {\n    let number = replaceAll(text.trim(), \",\", \"\")\n    return number.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, \"$1,\")\n  }","import {\n    GET_ALL_REPORT,\n    GET_SUM_REPORT\n  } from \"../utils/commonType\";  \n  export const requestGetReport = (data, token) => {\n    return {\n      type: GET_ALL_REPORT,\n      data,\n      token,\n    };\n  };\n\n  export const requestGetSumReport = (token) => {\n    return {\n      type: GET_SUM_REPORT,\n      token,\n    };\n  };\n","import React, { Component } from 'react'\r\nimport { connect } from \"react-redux\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport { LoadingComponet } from \"../../components\";\r\nimport Cookie from \"js-cookie\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport {\r\n  GET_SUM_REPORT_FAILED,\r\n  GET_SUM_REPORT_SUCCESS,\r\n\r\n} from \"../../utils/commonType\";\r\nimport { formatNumber } from '../../utils/Formater'\r\nimport { requestGetSumReport } from '../../actions/reportAction'\r\nimport logo from '../../img/11_PTT.png';\r\n\r\n\r\nconst MySwal = withReactContent(Swal);\r\nclass SellSrceen extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      loading: false,\r\n      data: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const userInfo = Cookie.getJSON(\"userInfo\") || null;\r\n    let token = userInfo ? userInfo.token : null;\r\n    let user_id = userInfo.auth[0].user_id;\r\n    this.setState({ token, user_id });\r\n    this.loaderOrder(token)\r\n\r\n  }\r\n\r\n  loaderOrder(token) {\r\n    this.props.requestGetSumReport(token);\r\n    this.setState({ loading: true, onGetInfo: true })\r\n  }\r\n  componentWillReceiveProps(nextProps) {\r\n    const { t } = this.props;\r\n    const { onGetInfo } = this.state;\r\n    if (onGetInfo) {\r\n      if (nextProps.dataResultSumReport) {\r\n        switch (nextProps.actionType) {\r\n          case GET_SUM_REPORT_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                let a = nextProps.dataResultSumReport;\r\n                this.setState({ onGetInfo: false, loading: false, data: a });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.dataResultSumReport.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({ onGetInfo: false, loading: false });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case GET_SUM_REPORT_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({ onGetInfo: false, loading: false });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n  render() {\r\n    const { t } = this.props;\r\n    const { data } = this.state\r\n    return (\r\n      <div>\r\n        {/* {loading ? <LoadingComponet /> : null} */}\r\n        <div class=\"content-wrapper\">\r\n          <div class=\"content-header\">\r\n\r\n          </div>\r\n\r\n          <section class=\"content\">\r\n            <div class=\"container-fluid\">\r\n              <div class=\"row\">\r\n                {\r\n                  data.length > 0 ?\r\n                    data.map((item, i) => (\r\n                      <div class=\"col-12 col-sm-6 col-md-3\">\r\n                        <div class=\"info-box\">\r\n                          <span class={item.color}>\r\n                            <i class={item.icon}></i>\r\n                          </span>\r\n                          <button class=\"info-box-content btn\">\r\n                            <span class=\"info-box-text\">{item.Name}</span>\r\n                            <span class=\"info-box-number text-danger\">{item.total ? formatNumber(item.total + '') : 0} .Kip</span>\r\n                            <span class=\"info-box-number\">\r\n                              {item.qty ? formatNumber(item.qty + '') : 0}\r\n                              <small> ລິດ</small>\r\n                            </span>\r\n                          </button>\r\n                        </div>\r\n                      </div>\r\n                    ))\r\n                    : null\r\n\r\n                }\r\n\r\n\r\n\r\n              </div>\r\n            </div>\r\n          </section>\r\n        </div>\r\n      </div>\r\n\r\n    )\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n\r\n    dataResultSumReport: state.reportReducer.dataResultSumReport,\r\n    actionType: state.reportReducer.actionType,\r\n    responseCode: state.reportReducer.responseCode,\r\n\r\n  };\r\n};\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    requestGetSumReport: (token) => dispatch(requestGetSumReport(token)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation()(SellSrceen));","import {\r\n    GET_ALL_EMPLOYEE,\r\n    DELETE_BY_ID_EMPLOYEE,\r\n    INSRT_NEW_EMPLOYEE,\r\n    UPDATE_EMPLOYEE\r\n  } from \"../utils/commonType\";\r\n  \r\n  export const requestGetAllEmployee = (data) => {\r\n    return {\r\n      type: GET_ALL_EMPLOYEE,\r\n      data,\r\n    };\r\n  };\r\n  export const requestDeleteEmployee = (data, token) => {\r\n    return {\r\n      type: DELETE_BY_ID_EMPLOYEE,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  \r\n  export const requestInsertEmployee = (data, token) => {\r\n    return {\r\n      type: INSRT_NEW_EMPLOYEE,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  export const requestUpdateEmployee = (data, token) => {\r\n    return {\r\n      type: UPDATE_EMPLOYEE,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  ","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport {\r\n  bodyDeletEmployee,\r\n  requestBodyCreateNewEmployee,\r\n  bodyUpdateEmployee,\r\n} from \"../../api/bodyReq\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport {\r\n  requestGetAllEmployee,\r\n  requestDeleteEmployee,\r\n  requestInsertEmployee,\r\n  requestUpdateEmployee,\r\n} from \"../../actions/employeeAction\";\r\nimport {\r\n  GET_ALL_EMPLOYEE_FAILED,\r\n  GET_ALL_EMPLOYEE_SUCCESS,\r\n  INSRT_NEW_EMPLOYEE_SUCCESS,\r\n  INSRT_NEW_EMPLOYEE_FAILED,\r\n  DELETE_BY_ID_EMPLOYEE_FAILED,\r\n  DELETE_BY_ID_EMPLOYEE_SUCCESS,\r\n  UPDATE_EMPLOYEE_FAILED,\r\n  UPDATE_EMPLOYEE_SUCCESS,\r\n} from \"../../utils/commonType\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Cookie from \"js-cookie\";\r\nimport { LoadingComponet } from \"../../components\";\r\nimport Moment from 'react-moment';\r\n\r\nconst MySwal = withReactContent(Swal);\r\nclass componentName extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      showDelete: false,\r\n      loading: false,\r\n      showForm: false,\r\n      status: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const userInfo = Cookie.getJSON(\"userInfo\") || null;\r\n    let token = userInfo ? userInfo.token : null;\r\n    let user_id = userInfo.auth[0].user_id;\r\n    this.loadData(token);\r\n    this.setState({ token, user_id });\r\n  }\r\n  loadData(token) {\r\n    this.setState({ loading: true, onGetInfo: true });\r\n    this.props.requestGetAllEmployee(token);\r\n  }\r\n  onAddNewInformation = () => {\r\n    alert(\"ok\");\r\n  };\r\n  onRefresh() { }\r\n  componentWillReceiveProps(nextProps) {\r\n    const { t } = this.props;\r\n    const {\r\n      onGetInfo,\r\n      isInsertEmployee,\r\n      isDeleteEmployeeById,\r\n      onCallUpdateEmployee,\r\n      token,\r\n    } = this.state;\r\n    console.log(\"nextProps car:\", nextProps);\r\n    if (onGetInfo) {\r\n      if (nextProps.dataResultEmployee) {\r\n        switch (nextProps.actionType) {\r\n          case GET_ALL_EMPLOYEE_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                let data = nextProps.dataResultEmployee;\r\n                this.setState({ onGetInfo: false, loading: false, data });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({ onGetInfo: false, loading: false });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case GET_ALL_EMPLOYEE_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({ onGetInfo: false, loading: false });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isInsertEmployee) {\r\n      if (nextProps.dataResultEmployeeNew) {\r\n        switch (nextProps.actionType) {\r\n          case INSRT_NEW_EMPLOYEE_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/ManageEmployee\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  isInsertEmployee: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  isInsertEmployee: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n            break;\r\n          case INSRT_NEW_EMPLOYEE_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              isInsertEmployee: false,\r\n              loading: false,\r\n              showForm: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isDeleteEmployeeById) {\r\n      if (nextProps.dataResultEmployeeDelete) {\r\n        switch (nextProps.actionType) {\r\n          case DELETE_BY_ID_EMPLOYEE_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/ManageEmployee\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  isDeleteEmployeeById: false,\r\n                  loading: false,\r\n                  showDelete: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  isDeleteEmployeeById: false,\r\n                  loading: false,\r\n                  showDelete: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n            break;\r\n          case DELETE_BY_ID_EMPLOYEE_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              isDeleteEmployeeById: false,\r\n              loading: false,\r\n              showDelete: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (onCallUpdateEmployee) {\r\n      if (nextProps.dataResultEmployeeUpdate) {\r\n        switch (nextProps.actionType) {\r\n          case UPDATE_EMPLOYEE_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/ManageEmployee\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  onCallUpdateEmployee: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  onCallUpdateEmployee: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case UPDATE_EMPLOYEE_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              onCallUpdateEmployee: false,\r\n              loading: false,\r\n              showForm: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onPressEdit = (item) => {\r\n    const { t } = this.props;\r\n    // console.log(\"---item----\", item);\r\n    if (item) {\r\n      let employee_id = item.employee_id;\r\n      let employeeName = item.employeename;\r\n      let Address = item.address;\r\n      let Position = item.position;\r\n      let Phone = item.phone;\r\n      this.setState({\r\n        employee_id,\r\n        employeeName,\r\n        Address,\r\n        Position,\r\n        Phone,\r\n        status: true,\r\n        showForm: true,\r\n      });\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onChangeTextemployeename = (text) => {\r\n    const value = text.target.value;\r\n    const erroremployeename =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({\r\n      employeename: value,\r\n      erroremployeename,\r\n      employeeName: value,\r\n    });\r\n  };\r\n  onChangeTextaddress = (text) => {\r\n    const value = text.target.value;\r\n    const erroraddress =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({ address: value, erroraddress, Address: value });\r\n  };\r\n  onChangeTextposition = (text) => {\r\n    const value = text.target.value;\r\n    const errorposition =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({\r\n      position: value,\r\n      errorposition,\r\n      Position: value,\r\n    });\r\n  };\r\n  onChangeTextphone = (text) => {\r\n    const value = text.target.value;\r\n    const errorphone =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({\r\n      phone: value,\r\n      errorphone,\r\n      Phone: value,\r\n    });\r\n  };\r\n  onCloseModalForm = () => {\r\n    const { t } = this.props;\r\n    const { employeename, address, position, phone, token, user_id } =\r\n      this.state;\r\n    if (employeename && address && position && phone && token && user_id) {\r\n      this.setState({ loading: true, isInsertEmployee: true });\r\n      let data = requestBodyCreateNewEmployee(\r\n        null,\r\n        employeename,\r\n        address,\r\n        position,\r\n        phone,\r\n        user_id\r\n      );\r\n      this.props.requestInsertEmployee(data, token);\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onCloseModalFormUpdate = () => {\r\n    const { t } = this.props;\r\n    const {\r\n      employee_id,\r\n      employeeName,\r\n      Address,\r\n      Phone,\r\n      Position,\r\n      user_id,\r\n      token,\r\n    } = this.state;\r\n    if (\r\n      employee_id &&\r\n      employeeName &&\r\n      Address &&\r\n      user_id &&\r\n      Phone &&\r\n      Position &&\r\n      token\r\n    ) {\r\n      let data = bodyUpdateEmployee(\r\n        employee_id,\r\n        employeeName,\r\n        Address,\r\n        Position,\r\n        Phone,\r\n        user_id\r\n      );\r\n      this.props.requestUpdateEmployee(data, token);\r\n      this.setState({ loading: true, onCallUpdateEmployee: true });\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onPressDelete = (item) => {\r\n    this.setState({\r\n      showDelete: true,\r\n      employee_id: item.employee_id,\r\n    });\r\n  };\r\n  onCloseDelete = () => {\r\n    this.setState({ showDelete: false });\r\n  };\r\n  onCloseModalFormInsert = () => {\r\n    this.setState({ showForm: false });\r\n  };\r\n  onAddNew = () => {\r\n    this.setState({ showForm: true, status: false });\r\n  };\r\n  onClickDelete = () => {\r\n    const { t } = this.props;\r\n    const { token } = this.state;\r\n    if (this.state.employee_id) {\r\n      this.setState({ loading: true, isDeleteEmployeeById: true });\r\n      let data = bodyDeletEmployee(this.state.employee_id);\r\n      this.props.requestDeleteEmployee(data, token);\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { t } = this.props;\r\n    const {\r\n      data,\r\n      employeename,\r\n      erroremployeename,\r\n      address,\r\n      erroraddress,\r\n      showDelete,\r\n      showForm,\r\n      employeeName,\r\n      Address,\r\n      status,\r\n      Position,\r\n      errorposition,\r\n      position,\r\n      Phone,\r\n      phone,\r\n      errorphone,\r\n      loading,\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        {loading ? <LoadingComponet /> : null}\r\n        <div className=\"content-wrapper body\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h1>{t(\"EmployeeInformation\")}</h1>\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                  <ol className=\"breadcrumb float-sm-right\">\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a className=\"newEvent\" onClick={() => this.onRefresh()}>\r\n                        <i class=\"fas fa-sync-alt\"></i> {t(\"Refresh\")}\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a className=\"newEvent\" onClick={() => this.onAddNew()}>\r\n                        <i class=\"fas fa-user\"></i> {t(\"AddNewInformation\")}\r\n                      </a>\r\n                    </li>\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h3 className=\"card-title\">{t(\"Description\")}</h3>\r\n                      <div className=\"card-tools\">\r\n                        \r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"card-body table-responsive p-0\">\r\n                      <table className=\"table table-hover text-nowrap\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>{t(\"Level\")}</th>\r\n                            <th>{t(\"employee_id\")}</th>\r\n                            <th>{t(\"employeename\")}</th>\r\n                            <th>{t(\"address\")}</th>\r\n                            <th>{t(\"position\")}</th>\r\n                            <th>{t(\"phone\")}</th>\r\n                            <th>{t(\"createdAt\")}</th>\r\n                            <th>{t(\"updatedAt\")}</th>\r\n                            <th>{t(\"user_id\")}</th>\r\n                            <th>{t(\"option\")}</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {data\r\n                            ? data.map((item, i) => (\r\n                              <tr key={i}>\r\n                                <td>{i + 1}</td>\r\n                                <td>{item.employee_id}</td>\r\n                                <td>{item.employeename}</td>\r\n                                <td>{item.address}</td>\r\n                                <td>{item.position}</td>\r\n                                <td>{item.phone}</td>\r\n\r\n                                <td>\r\n                                  <Moment format=\"YYYY/MM/DD\">{item.createdAt}</Moment>\r\n                                </td>\r\n                                <td>\r\n                                  <Moment format=\"YYYY/MM/DD\">{item.updatedAt}</Moment>\r\n                                </td>\r\n                                <td>{item.username}</td>\r\n                                <td>\r\n                                  <div class=\"btn-group\">\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"btn btn-success btn-xs\"\r\n                                      onClick={() => this.onPressEdit(item)}\r\n                                    >\r\n                                      <i className=\"fas fa-edit\" />\r\n                                    </button>\r\n\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"btn btn-danger btn-xs\"\r\n                                      onClick={() => this.onPressDelete(item)}\r\n                                    >\r\n                                      <i className=\"fas fa-trash\" />\r\n                                    </button>\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n                            ))\r\n                            : null}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <Modal\r\n              className=\"modal\"\r\n              show={showForm}\r\n              animation={true}\r\n              onHide={() => this.onCloseModalFormInsert()}\r\n            >\r\n              <Modal.Header>\r\n                <Modal.Title>\r\n                  {status\r\n                    ? t(\"formUpdateInformation\")\r\n                    : t(\"formAddInformation\")}\r\n                </Modal.Title>\r\n                <Modal.Title>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    onClick={() => this.onCloseModalFormInsert()}\r\n                  >\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div class=\"modal-body\">\r\n                  <div className=\"form-row\">\r\n                    <div className=\"col-md-6 mb-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"employeename\")}</label>\r\n                        <input\r\n                          name=\"employeename\"\r\n                          value={status ? employeeName : employeename}\r\n                          type=\"text\"\r\n                          className={\r\n                            erroremployeename === undefined\r\n                              ? \"form-control\"\r\n                              : erroremployeename\r\n                                ? \"form-control is-invalid\"\r\n                                : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"employeename\")}\r\n                          onChange={(text) =>\r\n                            this.onChangeTextemployeename(text)\r\n                          }\r\n                        />\r\n                        {erroremployeename ? (\r\n                          <p class=\"text-danger\">{erroremployeename}</p>\r\n                        ) : null}\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"position\")}</label>\r\n                        <input\r\n                          name=\"position\"\r\n                          value={status ? Position : position}\r\n                          type=\"text\"\r\n                          className={\r\n                            errorposition === undefined\r\n                              ? \"form-control\"\r\n                              : errorposition\r\n                                ? \"form-control is-invalid\"\r\n                                : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"position\")}\r\n                          onChange={(text) => this.onChangeTextposition(text)}\r\n                        />\r\n                        {errorposition ? (\r\n                          <p class=\"text-danger\">{errorposition}</p>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 mb-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"address\")}</label>\r\n                        <input\r\n                          name=\"address\"\r\n                          value={status ? Address : address}\r\n                          type=\"text\"\r\n                          className={\r\n                            erroraddress === undefined\r\n                              ? \"form-control\"\r\n                              : erroraddress\r\n                                ? \"form-control is-invalid\"\r\n                                : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"address\")}\r\n                          onChange={(text) => this.onChangeTextaddress(text)}\r\n                        />\r\n                        {erroraddress ? (\r\n                          <p class=\"text-danger\">{erroraddress}</p>\r\n                        ) : null}\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"phone\")}</label>\r\n                        <input\r\n                          name=\"phone\"\r\n                          value={status ? Phone : phone}\r\n                          type=\"text\"\r\n                          className={\r\n                            errorphone === undefined\r\n                              ? \"form-control\"\r\n                              : errorphone\r\n                                ? \"form-control is-invalid\"\r\n                                : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"phone\")}\r\n                          onChange={(text) => this.onChangeTextphone(text)}\r\n                        />\r\n                        {errorphone ? (\r\n                          <p class=\"text-danger\">{errorphone}</p>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                {status ? (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.onCloseModalFormUpdate()}\r\n                    class=\"btn btn-success\"\r\n                    className={\r\n                      !employeename ||\r\n                        erroremployeename ||\r\n                        !address ||\r\n                        erroraddress ||\r\n                        !position ||\r\n                        errorposition ||\r\n                        !phone ||\r\n                        errorphone\r\n                        ? \"btn btn-secondary disabled\"\r\n                        : \"btn btn-success\"\r\n                    }\r\n                  >\r\n                    {t(\"Confirm\")}\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.onCloseModalForm()}\r\n                    class=\"btn btn-primary\"\r\n                    className={\r\n                      !employeename ||\r\n                        erroremployeename ||\r\n                        !address ||\r\n                        erroraddress ||\r\n                        !position ||\r\n                        errorposition ||\r\n                        !phone ||\r\n                        errorphone\r\n                        ? \"btn btn-secondary disabled\"\r\n                        : \"btn btn-primary\"\r\n                    }\r\n                  >\r\n                    {t(\"Confirm\")}\r\n                  </button>\r\n                )}\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-default\"\r\n                  onClick={() => this.onCloseModalFormInsert()}\r\n                >\r\n                  {t(\"cancel\")}\r\n                </button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal\r\n              className=\"modal\"\r\n              show={showDelete}\r\n              size=\"sm\"\r\n              onHide={() => this.onCloseDelete()}\r\n            >\r\n              <Modal.Header>\r\n                <Modal.Title>{t(\"Confirm\")}</Modal.Title>\r\n                <Modal.Title>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    onClick={() => this.onCloseDelete()}\r\n                  >\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>{t(\"DoYouReallyWantDeleteData\")}</Modal.Body>\r\n              <Modal.Footer>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default\"\r\n                  onClick={() => this.onCloseDelete()}\r\n                >\r\n                  {t(\"clase\")}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => this.onClickDelete()}\r\n                >\r\n                  {t(\"Confirm\")}\r\n                </button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dataResultEmployee: state.employeeReducer.dataResultEmployee,\r\n    actionType: state.employeeReducer.actionType,\r\n    responseCode: state.employeeReducer.responseCode,\r\n    message: state.employeeReducer.message,\r\n    dataResultEmployeeNew: state.employeeReducer.dataResultEmployeeNew,\r\n    dataResultEmployeeDelete: state.employeeReducer.dataResultEmployeeDelete,\r\n    dataResultEmployeeUpdate: state.employeeReducer.dataResultEmployeeUpdate,\r\n    userInfo: state.loginReduce.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    requestGetAllEmployee: (data) => dispatch(requestGetAllEmployee(data)),\r\n    requestDeleteEmployee: (data, token) =>\r\n      dispatch(requestDeleteEmployee(data, token)),\r\n    requestInsertEmployee: (data, token) =>\r\n      dispatch(requestInsertEmployee(data, token)),\r\n    requestUpdateEmployee: (data, token) =>\r\n      dispatch(requestUpdateEmployee(data, token)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation()(componentName));\r\n","import {\r\n    GET_ALL_SUPPLIER,\r\n    DELETE_BY_ID_SUPPLIER,\r\n    INSRT_NEW_SUPPLIER,\r\n    UPDATE_SUPPLIER\r\n  } from \"../utils/commonType\";\r\n  \r\n  export const requestGetAllSupplier = (data) => {\r\n    return {\r\n      type: GET_ALL_SUPPLIER,\r\n      data,\r\n    };\r\n  };\r\n  export const requestDeleteSupplier = (data, token) => {\r\n    return {\r\n      type: DELETE_BY_ID_SUPPLIER,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  \r\n  export const requestInsertSupplier = (data, token) => {\r\n    return {\r\n      type: INSRT_NEW_SUPPLIER,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  export const requestUpdateSupplier = (data, token) => {\r\n    return {\r\n      type: UPDATE_SUPPLIER,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  ","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport {\r\n  bodyDeleteSupplier,\r\n  requestBodyCreateNewSuppliers,\r\n  bodyUpdateSupplier,\r\n} from \"../../api/bodyReq\";\r\nimport { Modal } from \"react-bootstrap\";\r\nimport {\r\n  requestGetAllSupplier,\r\n  requestDeleteSupplier,\r\n  requestInsertSupplier,\r\n  requestUpdateSupplier,\r\n} from \"../../actions/supplierAction\";\r\nimport {\r\n  GET_ALL_SUPPLIER_FAILED,\r\n  GET_ALL_SUPPLIER_SUCCESS,\r\n  INSRT_NEW_SUPPLIER_SUCCESS,\r\n  INSRT_NEW_SUPPLIER_FAILED,\r\n  DELETE_BY_ID_SUPPLIER_FAILED,\r\n  DELETE_BY_ID_SUPPLIER_SUCCESS,\r\n  UPDATE_SUPPLIER_FAILED,\r\n  UPDATE_SUPPLIER_SUCCESS,\r\n} from \"../../utils/commonType\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Cookie from \"js-cookie\";\r\nimport { LoadingComponet } from \"../../components\";\r\nimport Moment from 'react-moment';\r\n\r\nconst MySwal = withReactContent(Swal);\r\nclass componentName extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      showDelete: false,\r\n      loading: false,\r\n      showForm: false,\r\n      status: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const userInfo = Cookie.getJSON(\"userInfo\") || null;\r\n    let token = userInfo ? userInfo.token : null;\r\n    let user_id = userInfo.auth[0].user_id;\r\n    this.loadData(token);\r\n    this.setState({ token, user_id });\r\n  }\r\n  loadData(token) {\r\n    this.setState({ loading: true, onGetInfo: true });\r\n    this.props.requestGetAllSupplier(token);\r\n  }\r\n  onAddNewInformation = () => {\r\n    alert(\"ok\");\r\n  };\r\n  onRefresh() { }\r\n  componentWillReceiveProps(nextProps) {\r\n    const { t } = this.props;\r\n    const {\r\n      onGetInfo,\r\n      isInsertSupplier,\r\n      isDeleteSupplierById,\r\n      onCallUpdateSupplier,\r\n      token,\r\n    } = this.state;\r\n    console.log(\"nextProps car:\", nextProps);\r\n    if (onGetInfo) {\r\n      if (nextProps.dataResultSupplier) {\r\n        switch (nextProps.actionType) {\r\n          case GET_ALL_SUPPLIER_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                let data = nextProps.dataResultSupplier;\r\n                this.setState({ onGetInfo: false, loading: false, data });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({ onGetInfo: false, loading: false });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case GET_ALL_SUPPLIER_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({ onGetInfo: false, loading: false });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isInsertSupplier) {\r\n      if (nextProps.dataResultSupplierNew) {\r\n        switch (nextProps.actionType) {\r\n          case INSRT_NEW_SUPPLIER_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/supplierManage\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  isInsertSupplier: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  isInsertSupplier: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n            break;\r\n          case INSRT_NEW_SUPPLIER_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              isInsertSupplier: false,\r\n              loading: false,\r\n              showForm: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isDeleteSupplierById) {\r\n      if (nextProps.dataResultSupplierDelete) {\r\n        switch (nextProps.actionType) {\r\n          case DELETE_BY_ID_SUPPLIER_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/supplierManage\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  isDeleteSupplierById: false,\r\n                  loading: false,\r\n                  showDelete: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  isDeleteSupplierById: false,\r\n                  loading: false,\r\n                  showDelete: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n            break;\r\n          case DELETE_BY_ID_SUPPLIER_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              isDeleteSupplierById: false,\r\n              loading: false,\r\n              showDelete: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (onCallUpdateSupplier) {\r\n      if (nextProps.dataResultSupplierUpdate) {\r\n        switch (nextProps.actionType) {\r\n          case UPDATE_SUPPLIER_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/supplierManage\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  onCallUpdateSupplier: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  onCallUpdateSupplier: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case UPDATE_SUPPLIER_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              onCallUpdateSupplier: false,\r\n              loading: false,\r\n              showForm: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onPressEdit = (item) => {\r\n    const { t } = this.props;\r\n    // console.log(\"---item----\", item);\r\n    if (item) {\r\n      let supplier_id = item.supplier_id;\r\n      let supplier_Name = item.supplier_name;\r\n      this.setState({\r\n        supplier_id,\r\n        supplier_Name,\r\n        status: true,\r\n        showForm: true,\r\n      });\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onChangeTextsupplier_name = (text) => {\r\n    const value = text.target.value;\r\n    const errorsupplier_name =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({\r\n      supplier_name: value,\r\n      errorsupplier_name,\r\n      supplier_Name: value,\r\n    });\r\n  };\r\n\r\n  onCloseModalForm = () => {\r\n    const { t } = this.props;\r\n    const { supplier_name, token, user_id } = this.state;\r\n    if (supplier_name) {\r\n      this.setState({ loading: true, isInsertSupplier: true });\r\n      let data = requestBodyCreateNewSuppliers(null, supplier_name, user_id);\r\n      this.props.requestInsertSupplier(data, token);\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onCloseModalFormUpdate = () => {\r\n    const { t } = this.props;\r\n    const { supplier_id, supplier_Name, user_id, token } = this.state;\r\n    if (supplier_id && supplier_Name && user_id && token) {\r\n      let data = bodyUpdateSupplier(supplier_id, supplier_Name, user_id);\r\n      this.props.requestUpdateSupplier(data, token);\r\n      this.setState({ loading: true, onCallUpdateSupplier: true });\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onPressDelete = (item) => {\r\n    this.setState({\r\n      showDelete: true,\r\n      supplier_id: item.supplier_id,\r\n    });\r\n  };\r\n  onCloseDelete = () => {\r\n    this.setState({ showDelete: false });\r\n  };\r\n  onCloseModalFormInsert = () => {\r\n    this.setState({ showForm: false });\r\n  };\r\n  onAddNew = () => {\r\n    this.setState({ showForm: true, status: false });\r\n  };\r\n  onClickDelete = () => {\r\n    const { t } = this.props;\r\n    const { token } = this.state;\r\n    if (this.state.supplier_id) {\r\n      this.setState({ loading: true, isDeleteSupplierById: true });\r\n      let data = bodyDeleteSupplier(this.state.supplier_id);\r\n      this.props.requestDeleteSupplier(data, token);\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { t } = this.props;\r\n    const {\r\n      data,\r\n      supplier_name,\r\n      errorsupplier_name,\r\n      showDelete,\r\n      showForm,\r\n      supplier_Name,\r\n      status,\r\n      loading,\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        {loading ? <LoadingComponet /> : null}\r\n        <div className=\"content-wrapper body\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h1>{t(\"SupplierInformation\")}</h1>\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                  <ol className=\"breadcrumb float-sm-right\">\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a className=\"newEvent\" onClick={() => this.onRefresh()}>\r\n                        <i class=\"fas fa-sync-alt\"></i> {t(\"Refresh\")}\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a className=\"newEvent\" onClick={() => this.onAddNew()}>\r\n                        <i class=\"fas fa-user\"></i> {t(\"AddNewInformation\")}\r\n                      </a>\r\n                    </li>\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h3 className=\"card-title\">{t(\"Description\")}</h3>\r\n                      <div className=\"card-tools\">\r\n                        \r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"card-body table-responsive p-0\">\r\n                      <table className=\"table table-hover text-nowrap\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>{t(\"Level\")}</th>\r\n                            <th>{t(\"supplier_id\")}</th>\r\n                            <th>{t(\"supplier_name\")}</th>\r\n                            <th>{t(\"createdAt\")}</th>\r\n                            <th>{t(\"updatedAt\")}</th>\r\n                            <th>{t(\"username\")}</th>\r\n                            <th>{t(\"option\")}</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {data\r\n                            ? data.map((item, i) => (\r\n                              <tr key={i}>\r\n                                <td>{i + 1}</td>\r\n                                <td>{item.supplier_id}</td>\r\n                                <td>{item.supplier_name}</td>\r\n\r\n                                <td>\r\n                                  <Moment format=\"YYYY/MM/DD\">{item.createdAt}</Moment>\r\n                                </td>\r\n                                <td>\r\n                                  <Moment format=\"YYYY/MM/DD\">{item.updatedAt}</Moment>\r\n                                </td>\r\n                                <td>{item.username}</td>\r\n                                <td>\r\n                                  <div class=\"btn-group\">\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"btn btn-success btn-xs\"\r\n                                      onClick={() => this.onPressEdit(item)}\r\n                                    >\r\n                                      <i className=\"fas fa-edit\" />\r\n                                    </button>\r\n\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"btn btn-danger btn-xs\"\r\n                                      onClick={() => this.onPressDelete(item)}\r\n                                    >\r\n                                      <i className=\"fas fa-trash\" />\r\n                                    </button>\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n                            ))\r\n                            : null}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <Modal\r\n              className=\"modal\"\r\n              show={showForm}\r\n              size=\"sm\"\r\n              onHide={() => this.onCloseModalFormInsert()}\r\n            >\r\n              <Modal.Header>\r\n                <Modal.Title>\r\n                  {status\r\n                    ? t(\"formUpdateInformation\")\r\n                    : t(\"formAddInformation\")}\r\n                </Modal.Title>\r\n                <Modal.Title>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    onClick={() => this.onCloseModalFormInsert()}\r\n                  >\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div class=\"modal-body\">\r\n                  <div className=\"form-row\">\r\n                    <div className=\"col-md-12 mb-12\">\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"supplier_name\")}</label>\r\n                        <input\r\n                          name=\"supplier_name\"\r\n                          value={status ? supplier_Name : supplier_name}\r\n                          type=\"text\"\r\n                          className={\r\n                            errorsupplier_name === undefined\r\n                              ? \"form-control\"\r\n                              : errorsupplier_name\r\n                                ? \"form-control is-invalid\"\r\n                                : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"supplier_name\")}\r\n                          onChange={(text) =>\r\n                            this.onChangeTextsupplier_name(text)\r\n                          }\r\n                        />\r\n                        {errorsupplier_name ? (\r\n                          <p class=\"text-danger\">{errorsupplier_name}</p>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                {status ? (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.onCloseModalFormUpdate()}\r\n                    class=\"btn btn-success\"\r\n                    className={\r\n                      !supplier_name || errorsupplier_name\r\n                        ? \"btn btn-secondary disabled\"\r\n                        : \"btn btn-success\"\r\n                    }\r\n                  >\r\n                    {t(\"Confirm\")}\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.onCloseModalForm()}\r\n                    class=\"btn btn-primary\"\r\n                    className={\r\n                      !supplier_name || errorsupplier_name\r\n                        ? \"btn btn-secondary disabled\"\r\n                        : \"btn btn-primary\"\r\n                    }\r\n                  >\r\n                    {t(\"Confirm\")}\r\n                  </button>\r\n                )}\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-default\"\r\n                  onClick={() => this.onCloseModalFormInsert()}\r\n                >\r\n                  {t(\"cancel\")}\r\n                </button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal\r\n              className=\"modal\"\r\n              show={showDelete}\r\n              size=\"sm\"\r\n              onHide={() => this.onCloseDelete()}\r\n            >\r\n              <Modal.Header>\r\n                <Modal.Title>{t(\"Confirm\")}</Modal.Title>\r\n                <Modal.Title>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    onClick={() => this.onCloseDelete()}\r\n                  >\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>{t(\"DoYouReallyWantDeleteData\")}</Modal.Body>\r\n              <Modal.Footer>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default\"\r\n                  onClick={() => this.onCloseDelete()}\r\n                >\r\n                  {t(\"clase\")}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => this.onClickDelete()}\r\n                >\r\n                  {t(\"Confirm\")}\r\n                </button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dataResultSupplier: state.supplierReducer.dataResultSupplier,\r\n    actionType: state.supplierReducer.actionType,\r\n    responseCode: state.supplierReducer.responseCode,\r\n    message: state.supplierReducer.message,\r\n    dataResultSupplierNew: state.supplierReducer.dataResultSupplierNew,\r\n    dataResultSupplierDelete: state.supplierReducer.dataResultSupplierDelete,\r\n    dataResultSupplierUpdate: state.supplierReducer.dataResultSupplierUpdate,\r\n    userInfo: state.loginReduce.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    requestGetAllSupplier: (data) => dispatch(requestGetAllSupplier(data)),\r\n    requestDeleteSupplier: (data, token) =>\r\n      dispatch(requestDeleteSupplier(data, token)),\r\n    requestInsertSupplier: (data, token) =>\r\n      dispatch(requestInsertSupplier(data, token)),\r\n    requestUpdateSupplier: (data, token) =>\r\n      dispatch(requestUpdateSupplier(data, token)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation()(componentName));\r\n","import {\r\n    GET_ALL_OIL,\r\n    DELETE_BY_ID_OIL,\r\n    INSRT_NEW_OIL,\r\n    UPDATE_OIL,\r\n    GET_ALL_OIL_BY_ID_SUPPLIER\r\n  } from \"../utils/commonType\";\r\n  \r\n  export const requestGetAllOil = (data) => {\r\n    return {\r\n      type: GET_ALL_OIL,\r\n      data,\r\n    };\r\n  };\r\n  export const requestDeleteOil = (data, token) => {\r\n    return {\r\n      type: DELETE_BY_ID_OIL,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  \r\n  export const requestInsertOil = (data, token) => {\r\n    return {\r\n      type: INSRT_NEW_OIL,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  export const requestUpdateOil = (data, token) => {\r\n    return {\r\n      type: UPDATE_OIL,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n\r\n  export const requestGetAllOilByIdSupplier = (data, token) => {\r\n    return {\r\n      type: GET_ALL_OIL_BY_ID_SUPPLIER,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  ","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport {\r\n  bodyDeleteOil,\r\n  requestBodyCreateNewOils,\r\n  bodyUpdateOil,\r\n} from \"../../api/bodyReq\";\r\nimport { Modal, Form } from \"react-bootstrap\";\r\nimport {\r\n  requestGetAllOil,\r\n  requestDeleteOil,\r\n  requestInsertOil,\r\n  requestUpdateOil,\r\n} from \"../../actions/oilAction\";\r\nimport {\r\n  GET_ALL_OIL_FAILED,\r\n  GET_ALL_OIL_SUCCESS,\r\n  INSRT_NEW_OIL_SUCCESS,\r\n  INSRT_NEW_OIL_FAILED,\r\n  DELETE_BY_ID_OIL_FAILED,\r\n  DELETE_BY_ID_OIL_SUCCESS,\r\n  UPDATE_OIL_FAILED,\r\n  UPDATE_OIL_SUCCESS,\r\n  GET_ALL_SUPPLIER_SUCCESS,\r\n  GET_ALL_SUPPLIER_FAILED\r\n} from \"../../utils/commonType\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Cookie from \"js-cookie\";\r\nimport { LoadingComponet } from \"../../components\";\r\nimport { requestGetAllSupplier } from \"../../actions/supplierAction\";\r\nimport { formatNumber } from '../../utils/Formater'\r\nimport Moment from 'react-moment';\r\n\r\n\r\nconst MySwal = withReactContent(Swal);\r\nclass componentName extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      showDelete: false,\r\n      loading: false,\r\n      showForm: false,\r\n      statusModle: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const userInfo = Cookie.getJSON(\"userInfo\") || null;\r\n    let token = userInfo ? userInfo.token : null;\r\n    let user_id = userInfo.auth[0].user_id;\r\n    this.loadData(token);\r\n    this.setState({ token, user_id });\r\n  }\r\n  loadData(token) {\r\n    this.props.requestGetAllSupplier(token);\r\n    this.props.requestGetAllOil(token);\r\n    this.setState({ loading: true, onGetInfo: true, isCallGetAllDataSupplier: true, });\r\n\r\n  }\r\n  onAddNewInformation = () => {\r\n    alert(\"ok\");\r\n  };\r\n  onRefresh() { }\r\n  componentWillReceiveProps(nextProps) {\r\n    const { t } = this.props;\r\n    const { onGetInfo, isInsertOil, isDeleteOilById, onCallUpdateOil, isCallGetAllDataSupplier, token } =\r\n      this.state;\r\n    console.log(\"nextProps car:\", nextProps);\r\n    if (onGetInfo) {\r\n      if (nextProps.dataResultOil) {\r\n        switch (nextProps.actionType) {\r\n          case GET_ALL_OIL_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                let data = nextProps.dataResultOil;\r\n                this.setState({ onGetInfo: false, loading: false, data });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({ onGetInfo: false, loading: false });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case GET_ALL_OIL_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({ onGetInfo: false, loading: false });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isInsertOil) {\r\n      if (nextProps.dataResultOilNew) {\r\n        switch (nextProps.actionType) {\r\n          case INSRT_NEW_OIL_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/oilManage\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  isInsertOil: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  isInsertOil: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n            break;\r\n          case INSRT_NEW_OIL_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              isInsertOil: false,\r\n              loading: false,\r\n              showForm: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isDeleteOilById) {\r\n      if (nextProps.dataResultOilDelete) {\r\n        switch (nextProps.actionType) {\r\n          case DELETE_BY_ID_OIL_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/oilManage\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  isDeleteOilById: false,\r\n                  loading: false,\r\n                  showDelete: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  isDeleteOilById: false,\r\n                  loading: false,\r\n                  showDelete: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n            break;\r\n          case DELETE_BY_ID_OIL_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              isDeleteOilById: false,\r\n              loading: false,\r\n              showDelete: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (onCallUpdateOil) {\r\n      if (nextProps.dataResultOilUpdate) {\r\n        switch (nextProps.actionType) {\r\n          case UPDATE_OIL_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/oilManage\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  onCallUpdateOil: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  onCallUpdateOil: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case UPDATE_OIL_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              onCallUpdateOil: false,\r\n              loading: false,\r\n              showForm: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isCallGetAllDataSupplier) {\r\n      console.log(\"dataResultSupplier:\", nextProps.dataResultSupplier);\r\n      console.log(\"actionTypeSupplier:\", nextProps.actionTypeSupplier);\r\n      if (nextProps.dataResultSupplier) {\r\n        switch (nextProps.actionTypeSupplier) {\r\n          case GET_ALL_SUPPLIER_SUCCESS:\r\n            this.setState({\r\n              isCallGetAllDataSupplier: false,\r\n              dataComboSupplier: nextProps.dataResultSupplier,\r\n            });\r\n            break;\r\n          case GET_ALL_SUPPLIER_FAILED:\r\n            this.setState({\r\n              isCallGetAllDataSupplier: false,\r\n              dataComboSupplier: null,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onPressEdit = (item) => {\r\n    const { t } = this.props;\r\n    // console.log(\"---item----\", item);\r\n    if (item) {\r\n      let oils_id = item.oils_id;\r\n      let oil_Name = item.oil_name;\r\n      let Status = item.status;\r\n      let Price = item.price;\r\n      let Qty = item.qty;\r\n      let Supplier_id = item.supplier_id;\r\n\r\n      this.setState({\r\n        oils_id,\r\n        oil_Name,\r\n        Status,\r\n        Price,\r\n        Qty,\r\n        Supplier_id,\r\n        statusModle: true,\r\n        showForm: true,\r\n      });\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onChangeTextoil_name = (text) => {\r\n    const value = text.target.value;\r\n    const erroroil_name =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({\r\n      oil_name: value,\r\n      erroroil_name,\r\n      oil_Name: value,\r\n    });\r\n  };\r\n  onSelectStatus = (text) => {\r\n    const value = text.target.value;\r\n    this.setState({\r\n      status: value,\r\n      Status: value,\r\n    });\r\n  };\r\n  onChangeTextqty = (text) => {\r\n    const value = text.target.value;\r\n    const errorqty =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({\r\n      qty: value,\r\n      errorqty,\r\n      Qty: value,\r\n    });\r\n  };\r\n  onChangeTextprice = (text) => {\r\n    const value = text.target.value;\r\n    const errorprice =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({\r\n      price: value,\r\n      errorprice,\r\n      Price: value,\r\n    });\r\n  };\r\n  onCloseModalForm = () => {\r\n    const { t } = this.props;\r\n    const { oil_name, price, token, user_id, supplier_id } = this.state;\r\n    // console.log('supplier_id',supplier_id)\r\n    // console.log('oil_name',oil_name)\r\n    // console.log('price',price)\r\n    // console.log('user_id',user_id)\r\n    // console.log('token',token)\r\n\r\n    if (oil_name && price && token && user_id && supplier_id) {\r\n      let status = 0\r\n      let qty = 0\r\n      this.setState({ loading: true, isInsertOil: true });\r\n      let data = requestBodyCreateNewOils(\r\n        null,\r\n        oil_name,\r\n        status,\r\n        qty,\r\n        price,\r\n        user_id,\r\n        supplier_id\r\n      );\r\n      console.log('data----:', data)\r\n      this.props.requestInsertOil(data, token);\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onCloseModalFormUpdate = () => {\r\n    const { t } = this.props;\r\n    const { oils_id, oil_Name, Price, user_id, Supplier_id, token } =\r\n      this.state;\r\n    if (oils_id && oil_Name && user_id && Price && token && Supplier_id) {\r\n      let Status = 0\r\n      let Qty = 0\r\n      let data = bodyUpdateOil(oils_id, oil_Name, Status, Qty, Price, user_id, Supplier_id);\r\n      this.props.requestUpdateOil(data, token);\r\n      this.setState({ loading: true, onCallUpdateOil: true });\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onPressDelete = (item) => {\r\n    this.setState({\r\n      showDelete: true,\r\n      oils_id: item.oils_id,\r\n    });\r\n  };\r\n  onCloseDelete = () => {\r\n    this.setState({ showDelete: false });\r\n  };\r\n  onCloseModalFormInsert = () => {\r\n    this.setState({ showForm: false });\r\n  };\r\n  onAddNew = () => {\r\n    this.setState({ showForm: true, statusModle: false });\r\n  };\r\n  onClickDelete = () => {\r\n    const { t } = this.props;\r\n    const { token } = this.state;\r\n    if (this.state.oils_id) {\r\n      this.setState({ loading: true, isDeleteOilById: true });\r\n      let data = bodyDeleteOil(this.state.oils_id);\r\n      this.props.requestDeleteOil(data, token);\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onSelectSupplier_id = (text) => {\r\n    const value = text.target.value;\r\n    console.log('--value---', value)\r\n    this.setState({\r\n      supplier_id: value,\r\n      Supplier_id: value,\r\n    });\r\n  };\r\n  render() {\r\n    const { t } = this.props;\r\n    const {\r\n      data,\r\n      oil_name,\r\n      erroroil_name,\r\n      showDelete,\r\n      showForm,\r\n      oil_Name,\r\n      Status,\r\n      Price,\r\n      errorqty,\r\n      qty,\r\n      Qty,\r\n      price,\r\n      errorprice,\r\n      statusModle, loading,\r\n      dataComboSupplier\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        {loading ? <LoadingComponet /> : null}\r\n        <div className=\"content-wrapper body\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h1>{t(\"OilInformation\")}</h1>\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                  <ol className=\"breadcrumb float-sm-right\">\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a className=\"newEvent\" onClick={() => this.onRefresh()}>\r\n                        <i class=\"fas fa-sync-alt\"></i> {t(\"Refresh\")}\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a className=\"newEvent\" onClick={() => this.onAddNew()}>\r\n                        <i class=\"fas fa-user\"></i> {t(\"AddNewInformation\")}\r\n                      </a>\r\n                    </li>\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h3 className=\"card-title\">{t(\"Description\")}</h3>\r\n                      <div className=\"card-tools\">\r\n                        \r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"card-body table-responsive p-0\">\r\n                      <table className=\"table table-hover text-nowrap\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>{t(\"Level\")}</th>\r\n                            <th>{t(\"oils_id\")}</th>\r\n                            <th>{t(\"oil_name\")}</th>\r\n                            <th>{t(\"supplier_name\")}</th>\r\n                            <th>{t(\"status\")}</th>\r\n                            <th>{t(\"qty\")}</th>\r\n                            <th>{t(\"price\")}</th>\r\n                            <th>{t(\"createdAt\")}</th>\r\n                            <th>{t(\"updatedAt\")}</th>\r\n                            <th>{t(\"username\")}</th>\r\n                            <th>{t(\"option\")}</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {data\r\n                            ? data.map((item, i) => (\r\n                              <tr key={i}>\r\n                                <td>{i + 1}</td>\r\n                                <td>{item.oils_id}</td>\r\n                                <td>{item.oil_name}</td>\r\n                                <td>{item.supplier_name}</td>\r\n                                <td>{item.status == 1 ? 'ຍັງ' : 'ຫມົດແລ້ວ'}</td>\r\n                                <td>{formatNumber(item.qty + '')}</td>\r\n                                <td>{formatNumber(item.price + '')}</td>\r\n                                <td>\r\n                                  <Moment format=\"YYYY/MM/DD\">{item.createdAt}</Moment>\r\n                                </td>\r\n                                <td>\r\n                                  <Moment format=\"YYYY/MM/DD\">{item.updatedAt}</Moment>\r\n                                </td>\r\n                                <td>{item.username}</td>\r\n                                <td>\r\n                                  <div class=\"btn-group\">\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"btn btn-success btn-xs\"\r\n                                      onClick={() => this.onPressEdit(item)}\r\n                                    >\r\n                                      <i className=\"fas fa-edit\" />\r\n                                    </button>\r\n\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"btn btn-danger btn-xs\"\r\n                                      onClick={() => this.onPressDelete(item)}\r\n                                    >\r\n                                      <i className=\"fas fa-trash\" />\r\n                                    </button>\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n                            ))\r\n                            : null}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <Modal\r\n              className=\"modal\"\r\n              show={showForm}\r\n              animation={true}\r\n              onHide={() => this.onCloseModalFormInsert()}\r\n            >\r\n              <Modal.Header>\r\n                <Modal.Title>\r\n                  {statusModle\r\n                    ? t(\"formUpdateInformation\")\r\n                    : t(\"formAddInformation\")}\r\n                </Modal.Title>\r\n                <Modal.Title>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    onClick={() => this.onCloseModalFormInsert()}\r\n                  >\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n\r\n              <Modal.Body>\r\n                <div class=\"modal-body\">\r\n                  <div className=\"form-row\">\r\n                    <div className=\"col-md-6 mb-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"oil_name\")}</label>\r\n                        <input\r\n                          name=\"oil_name\"\r\n                          value={statusModle ? oil_Name : oil_name}\r\n                          type=\"text\"\r\n                          className={\r\n                            erroroil_name === undefined\r\n                              ? \"form-control\"\r\n                              : erroroil_name\r\n                                ? \"form-control is-invalid\"\r\n                                : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"oil_name\")}\r\n                          onChange={(text) => this.onChangeTextoil_name(text)}\r\n                        />\r\n                        {erroroil_name ? (\r\n                          <p class=\"text-danger\">{erroroil_name}</p>\r\n                        ) : null}\r\n                      </div>\r\n                      {/* <div class=\"form-group\">\r\n                        <label>{t(\"qty\")}</label>\r\n                        <input\r\n                          name=\"qty\"\r\n                          value={statusModle ? Qty : qty}\r\n                          type=\"number\"\r\n                          className={\r\n                            errorqty === undefined\r\n                              ? \"form-control\"\r\n                              : errorqty\r\n                                ? \"form-control is-invalid\"\r\n                                : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"qty\")}\r\n                          onChange={(text) => this.onChangeTextqty(text)}\r\n                        />\r\n                        {errorqty ? <p class=\"text-danger\">{errorqty}</p> : null}\r\n                      </div> */}\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"supplier_id\")}</label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          onChange={(text) => this.onSelectSupplier_id(text)}\r\n                        >\r\n                          <option></option>\r\n                          {dataComboSupplier\r\n                            ? dataComboSupplier.map((item, i) => (\r\n                              <option value={item.supplier_id}>\r\n                                {item.supplier_id} - {item.supplier_name}\r\n                              </option>\r\n                            ))\r\n                            : null}\r\n                        </Form.Control>\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 mb-6\">\r\n                      {/* <div class=\"form-group\">\r\n                        <label>{t(\"status\")}</label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          onChange={(text) => this.onSelectStatus(text)}\r\n                        >\r\n                          <option></option>\r\n                          <option value=\"0\">ຫມົດແລ້ວ</option>\r\n                          <option value=\"1\">ຍັງ</option>\r\n                        </Form.Control>\r\n                      </div> */}\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"price\")}</label>\r\n                        <input\r\n                          name=\"price\"\r\n                          value={statusModle ? Price : price}\r\n                          type=\"number\"\r\n                          className={\r\n                            errorprice === undefined\r\n                              ? \"form-control\"\r\n                              : errorprice\r\n                                ? \"form-control is-invalid\"\r\n                                : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"price\")}\r\n                          onChange={(text) => this.onChangeTextprice(text)}\r\n                        />\r\n                        {errorprice ? (\r\n                          <p class=\"text-danger\">{errorprice}</p>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                {statusModle ? (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.onCloseModalFormUpdate()}\r\n                    class=\"btn btn-success\"\r\n                    className={\r\n                      !oil_name ||\r\n                        erroroil_name ||\r\n\r\n                        !price ||\r\n                        errorprice\r\n                        ? \"btn btn-secondary disabled\"\r\n                        : \"btn btn-success\"\r\n                    }\r\n                  >\r\n                    {t(\"Confirm\")}\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.onCloseModalForm()}\r\n                    class=\"btn btn-primary\"\r\n                    className={\r\n                      !oil_name ||\r\n                        erroroil_name ||\r\n\r\n                        !price ||\r\n                        errorprice\r\n                        ? \"btn btn-secondary disabled\"\r\n                        : \"btn btn-primary\"\r\n                    }\r\n                  >\r\n                    {t(\"Confirm\")}\r\n                  </button>\r\n                )}\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-default\"\r\n                  onClick={() => this.onCloseModalFormInsert()}\r\n                >\r\n                  {t(\"cancel\")}\r\n                </button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal\r\n              className=\"modal\"\r\n              show={showDelete}\r\n              size=\"sm\"\r\n              onHide={() => this.onCloseDelete()}\r\n            >\r\n              <Modal.Header>\r\n                <Modal.Title>{t(\"Confirm\")}</Modal.Title>\r\n                <Modal.Title>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    onClick={() => this.onCloseDelete()}\r\n                  >\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>{t(\"DoYouReallyWantDeleteData\")}</Modal.Body>\r\n              <Modal.Footer>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default\"\r\n                  onClick={() => this.onCloseDelete()}\r\n                >\r\n                  {t(\"clase\")}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => this.onClickDelete()}\r\n                >\r\n                  {t(\"Confirm\")}\r\n                </button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dataResultOil: state.oilReducer.dataResultOil,\r\n    actionType: state.oilReducer.actionType,\r\n    responseCode: state.oilReducer.responseCode,\r\n    message: state.oilReducer.message,\r\n    dataResultOilNew: state.oilReducer.dataResultOilNew,\r\n    dataResultOilDelete: state.oilReducer.dataResultOilDelete,\r\n    dataResultOilUpdate: state.oilReducer.dataResultOilUpdate,\r\n    userInfo: state.loginReduce.userInfo,\r\n    dataResultSupplier: state.supplierReducer.dataResultSupplier,\r\n    actionTypeSupplier: state.supplierReducer.actionType,\r\n\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    requestGetAllOil: (data) => dispatch(requestGetAllOil(data)),\r\n    requestGetAllSupplier: (data) => dispatch(requestGetAllSupplier(data)),\r\n    requestDeleteOil: (data, token) => dispatch(requestDeleteOil(data, token)),\r\n    requestInsertOil: (data, token) => dispatch(requestInsertOil(data, token)),\r\n    requestUpdateOil: (data, token) => dispatch(requestUpdateOil(data, token)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation()(componentName));\r\n","import {\r\n    GET_ALL_CUSTOMERS,\r\n    DELETE_BY_ID_CUSTOMERS,\r\n    INSRT_NEW_CUSTOMERS,\r\n    UPDATE_CUSTOMERS\r\n  } from \"../utils/commonType\";\r\n  \r\n  export const requestGetAllCustomers = (data) => {\r\n    return {\r\n      type: GET_ALL_CUSTOMERS,\r\n      data,\r\n    };\r\n  };\r\n  export const requestDeleteCustomers = (data, token) => {\r\n    return {\r\n      type: DELETE_BY_ID_CUSTOMERS,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  \r\n  export const requestInsertCustomers = (data, token) => {\r\n    return {\r\n      type: INSRT_NEW_CUSTOMERS,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  export const requestUpdateCustomers = (data, token) => {\r\n    return {\r\n      type: UPDATE_CUSTOMERS,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  ","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport {\r\n  requestBodyCreateNewCustomerss,\r\n  bodyUpdateCustomers,\r\n  bodyDeleteCustomers,\r\n} from \"../../api/bodyReq\";\r\nimport { Modal, Form } from \"react-bootstrap\";\r\nimport {\r\n  requestGetAllCustomers,\r\n  requestDeleteCustomers,\r\n  requestInsertCustomers,\r\n  requestUpdateCustomers,\r\n} from \"../../actions/customerAction\";\r\nimport {\r\n  GET_ALL_CUSTOMERS_FAILED,\r\n  GET_ALL_CUSTOMERS_SUCCESS,\r\n  INSRT_NEW_CUSTOMERS_SUCCESS,\r\n  INSRT_NEW_CUSTOMERS_FAILED,\r\n  DELETE_BY_ID_CUSTOMERS_FAILED,\r\n  DELETE_BY_ID_CUSTOMERS_SUCCESS,\r\n  UPDATE_CUSTOMERS_FAILED,\r\n  UPDATE_CUSTOMERS_SUCCESS,\r\n} from \"../../utils/commonType\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Cookie from \"js-cookie\";\r\nimport { LoadingComponet } from \"../../components\";\r\nimport Moment from 'react-moment';\r\n\r\nconst MySwal = withReactContent(Swal);\r\nclass componentName extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      showDelete: false,\r\n      loading: false,\r\n      showForm: false,\r\n      statusModle: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const userInfo = Cookie.getJSON(\"userInfo\") || null;\r\n    let token = userInfo ? userInfo.token : null;\r\n    let user_id = userInfo.auth[0].user_id;\r\n    this.loadData(token);\r\n    this.setState({ token, user_id });\r\n  }\r\n  loadData(token) {\r\n    this.setState({ loading: true, onGetInfo: true });\r\n    this.props.requestGetAllCustomers(token);\r\n  }\r\n  onAddNewInformation = () => {\r\n    alert(\"ok\");\r\n  };\r\n  onRefresh() {}\r\n  componentWillReceiveProps(nextProps) {\r\n    const { t } = this.props;\r\n    const {\r\n      onGetInfo,\r\n      isInsertCustomers,\r\n      isDeleteCustomersById,\r\n      onCallUpdateCustomers,\r\n      token,\r\n    } = this.state;\r\n    console.log(\"nextProps car:\", nextProps);\r\n    if (onGetInfo) {\r\n      if (nextProps.dataResultCustomers) {\r\n        switch (nextProps.actionType) {\r\n          case GET_ALL_CUSTOMERS_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                let data = nextProps.dataResultCustomers;\r\n                this.setState({ onGetInfo: false, loading: false, data });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({ onGetInfo: false, loading: false });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case GET_ALL_CUSTOMERS_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({ onGetInfo: false, loading: false });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isInsertCustomers) {\r\n      if (nextProps.dataResultCustomersNew) {\r\n        switch (nextProps.actionType) {\r\n          case INSRT_NEW_CUSTOMERS_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/CustomerInformation\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  isInsertCustomers: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  isInsertCustomers: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n            break;\r\n          case INSRT_NEW_CUSTOMERS_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              isInsertCustomers: false,\r\n              loading: false,\r\n              showForm: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isDeleteCustomersById) {\r\n      if (nextProps.dataResultCustomersDelete) {\r\n        switch (nextProps.actionType) {\r\n          case DELETE_BY_ID_CUSTOMERS_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/CustomerInformation\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  isDeleteCustomersById: false,\r\n                  loading: false,\r\n                  showDelete: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  isDeleteCustomersById: false,\r\n                  loading: false,\r\n                  showDelete: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n            break;\r\n          case DELETE_BY_ID_CUSTOMERS_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              isDeleteCustomersById: false,\r\n              loading: false,\r\n              showDelete: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (onCallUpdateCustomers) {\r\n      if (nextProps.dataResultCustomersUpdate) {\r\n        switch (nextProps.actionType) {\r\n          case UPDATE_CUSTOMERS_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/CustomerInformation\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  onCallUpdateCustomers: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  onCallUpdateCustomers: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case UPDATE_CUSTOMERS_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              onCallUpdateCustomers: false,\r\n              loading: false,\r\n              showForm: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onPressEdit = (item) => {\r\n    const { t } = this.props;\r\n    console.log(\"---item----\", item);\r\n    if (item) {\r\n      let cus_id = item.cus_id;\r\n      let cus_Name = item.cus_name;\r\n      let Address = item.address;\r\n      let Status = item.status;\r\n      let Contact = item.contact;\r\n      let Phone = item.phone;\r\n      this.setState({\r\n        cus_id,\r\n        cus_Name,\r\n        Address,\r\n        Status,\r\n        Contact,\r\n        Phone,\r\n        statusModle: true,\r\n        showForm: true,\r\n      });\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onChangeTextcus_name = (text) => {\r\n    const value = text.target.value;\r\n    const errorcus_name =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({\r\n      cus_name: value,\r\n      errorcus_name,\r\n      cus_Name: value,\r\n    });\r\n  };\r\n  onChangeTextaddress = (text) => {\r\n    const value = text.target.value;\r\n    const erroraddress =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({\r\n      address: value,\r\n      erroraddress,\r\n      Address: value,\r\n    });\r\n  };\r\n  onChangeTextphone = (text) => {\r\n    const value = text.target.value;\r\n    const errorphone =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({\r\n      phone: value,\r\n      errorphone,\r\n      Phone: value,\r\n    });\r\n  };\r\n  onChangeTextcontact = (text) => {\r\n    const value = text.target.value;\r\n    const errorcontact =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({\r\n      contact: value,\r\n      errorcontact,\r\n      Contact: value,\r\n    });\r\n  };\r\n  onChangeTextstatus = (text) => {\r\n    const value = text.target.value;\r\n    const errorstatus =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({\r\n      status: value,\r\n      errorstatus,\r\n      Status: value,\r\n    });\r\n  };\r\n  onCloseModalForm = () => {\r\n    const { t } = this.props;\r\n    const { cus_name, address, contact, status, token,phone, user_id } = this.state;\r\n    // const userInfo = Cookie.getJSON(\"userInfo\") || null;\r\n   \r\n    // let user_id = userInfo.auth[0].user_id;\r\n    console.log('user_id--1:', user_id)\r\n    if (cus_name && address && contact && status && token && phone && user_id) {\r\n      console.log('user_id--12:', user_id)\r\n      //cus_id, cus_name, address, contact, status,phone, user_id\r\n      let data = requestBodyCreateNewCustomerss(\r\n        null,\r\n        cus_name,\r\n        address,\r\n        contact,\r\n        status,\r\n        phone,\r\n        user_id\r\n      );\r\n      this.setState({ loading: true, isInsertCustomers: true });\r\n        console.log('---data-----', data)\r\n      this.props.requestInsertCustomers(data, token);\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onCloseModalFormUpdate = () => {\r\n    const { t } = this.props;\r\n    const { cus_id, cus_Name,Address,Contact,status, Phone, user_id, token } =\r\n      this.state;\r\n    if (\r\n      cus_id &&\r\n      cus_Name &&\r\n      Address&&\r\n      Contact &&\r\n      status &&\r\n      Phone &&\r\n      user_id &&\r\n      token\r\n    ) {\r\n      let data = bodyUpdateCustomers(cus_id, cus_Name,Address,Contact,status, Phone, user_id);\r\n      this.props.requestUpdateCustomers(data, token);\r\n      this.setState({ loading: true, onCallUpdateCustomers: true });\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onPressDelete = (item) => {\r\n    this.setState({\r\n      showDelete: true,\r\n      cus_id: item.cus_id,\r\n    });\r\n  };\r\n  onCloseDelete = () => {\r\n    this.setState({ showDelete: false });\r\n  };\r\n  onCloseModalFormInsert = () => {\r\n    this.setState({ showForm: false });\r\n  };\r\n  onAddNew = () => {\r\n    this.setState({ showForm: true, statusModle: false });\r\n  };\r\n  onClickDelete = () => {\r\n    const { t } = this.props;\r\n    const { token } = this.state;\r\n    if (this.state.cus_id) {\r\n      this.setState({ loading: true, isDeleteCustomersById: true });\r\n      let data = bodyDeleteCustomers(this.state.cus_id);\r\n      this.props.requestDeleteCustomers(data, token);\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { t } = this.props;\r\n    const {\r\n      data,\r\n      cus_name,\r\n      errorcus_name,\r\n      showDelete,\r\n      showForm,\r\n      cus_Name,\r\n      Status,\r\n      errorcontact,\r\n      contact,\r\n      Contact,\r\n      status,\r\n      errorstatus,\r\n      statusModle,\r\n      address,\r\n      Address,\r\n      erroraddress,\r\n      phone,\r\n      Phone,\r\n      errorphone,\r\n      loading,\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        {loading ? <LoadingComponet /> : null}\r\n        <div className=\"content-wrapper body\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h1>{t(\"CustomersInformation\")}</h1>\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                  <ol className=\"breadcrumb float-sm-right\">\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a className=\"newEvent\" onClick={() => this.onRefresh()}>\r\n                        <i class=\"fas fa-sync-alt\"></i> {t(\"Refresh\")}\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a className=\"newEvent\" onClick={() => this.onAddNew()}>\r\n                        <i class=\"fas fa-user\"></i> {t(\"AddNewInformation\")}\r\n                      </a>\r\n                    </li>\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h3 className=\"card-title\">{t(\"Description\")}</h3>\r\n                      <div className=\"card-tools\">\r\n                        \r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"card-body table-responsive p-0\">\r\n                      <table className=\"table table-hover text-nowrap\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>{t(\"Level\")}</th>\r\n                            <th>{t(\"cus_id\")}</th>\r\n                            <th>{t(\"cus_name\")}</th>\r\n                            <th>{t(\"address\")}</th>\r\n                            <th>{t(\"contact\")}</th>\r\n                            <th>{t(\"status\")}</th>\r\n                            <th>{t(\"phone\")}</th>\r\n                            <th>{t(\"createdAt\")}</th>\r\n                            <th>{t(\"updatedAt\")}</th>\r\n                            <th>{t(\"username\")}</th>\r\n                            <th>{t(\"option\")}</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {data\r\n                            ? data.map((item, i) => (\r\n                                <tr key={i}>\r\n                                  <td>{i + 1}</td>\r\n                                  <td>{item.cus_id}</td>\r\n                                  <td>{item.cus_name}</td>\r\n                                  <td>{item.address}</td>\r\n                                  <td>{item.contact}</td>\r\n                                  <td>{item.status == 1 ? 'ຍັງເປັນລູກຄ້າເຮົາຢູ່' : 'ຍົກເລີກການເປັນຄ້າແລ້ວ'}</td>\r\n                                  <td>{item.phone}</td>\r\n                                  \r\n                                  <td>\r\n                                  <Moment format=\"YYYY/MM/DD\">{item.createdAt}</Moment>\r\n                                </td>\r\n                                <td>\r\n                                  <Moment format=\"YYYY/MM/DD\">{item.updatedAt}</Moment>\r\n                                </td>\r\n                                  <td>{item.username}</td>\r\n                                  <td>\r\n                                    <div class=\"btn-group\">\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        class=\"btn btn-success btn-xs\"\r\n                                        onClick={() => this.onPressEdit(item)}\r\n                                      >\r\n                                        <i className=\"fas fa-edit\" />\r\n                                      </button>\r\n\r\n                                      <button\r\n                                        type=\"button\"\r\n                                        class=\"btn btn-danger btn-xs\"\r\n                                        onClick={() => this.onPressDelete(item)}\r\n                                      >\r\n                                        <i className=\"fas fa-trash\" />\r\n                                      </button>\r\n                                    </div>\r\n                                  </td>\r\n                                </tr>\r\n                              ))\r\n                            : null}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <Modal\r\n              className=\"modal\"\r\n              show={showForm}\r\n              animation={true}\r\n              onHide={() => this.onCloseModalFormInsert()}\r\n            >\r\n              <Modal.Header>\r\n                <Modal.Title>\r\n                  {statusModle\r\n                    ? t(\"formUpdateInformation\")\r\n                    : t(\"formAddInformation\")}\r\n                </Modal.Title>\r\n                <Modal.Title>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    onClick={() => this.onCloseModalFormInsert()}\r\n                  >\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div class=\"modal-body\">\r\n                  <div className=\"form-row\">\r\n                    <div className=\"col-md-6 mb-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"cus_name\")}</label>\r\n                        <input\r\n                          name=\"cus_name\"\r\n                          value={statusModle ? cus_Name : cus_name}\r\n                          type=\"text\"\r\n                          className={\r\n                            errorcus_name === undefined\r\n                              ? \"form-control\"\r\n                              : errorcus_name\r\n                              ? \"form-control is-invalid\"\r\n                              : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"cus_name\")}\r\n                          onChange={(text) => this.onChangeTextcus_name(text)}\r\n                        />\r\n                        {errorcus_name ? (\r\n                          <p class=\"text-danger\">{errorcus_name}</p>\r\n                        ) : null}\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"contact\")}</label>\r\n                        <input\r\n                          name=\"contact\"\r\n                          value={statusModle ? Contact : contact}\r\n                          type=\"text\"\r\n                          className={\r\n                            errorcontact === undefined\r\n                              ? \"form-control\"\r\n                              : errorcontact\r\n                              ? \"form-control is-invalid\"\r\n                              : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"contact\")}\r\n                          onChange={(text) => this.onChangeTextcontact(text)}\r\n                        />\r\n                        {errorcontact ? (\r\n                          <p class=\"text-danger\">{errorcontact}</p>\r\n                        ) : null}\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"phone\")}</label>\r\n                        <input\r\n                          name=\"phone\"\r\n                          value={statusModle ? Phone : phone}\r\n                          type=\"text\"\r\n                          className={\r\n                            errorphone === undefined\r\n                              ? \"form-control\"\r\n                              : errorphone\r\n                              ? \"form-control is-invalid\"\r\n                              : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"phone\")}\r\n                          onChange={(text) => this.onChangeTextphone(text)}\r\n                        />\r\n                        {errorphone ? (\r\n                          <p class=\"text-danger\">{errorphone}</p>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 mb-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"address\")}</label>\r\n                        <input\r\n                          name=\"address\"\r\n                          value={statusModle ? Address : address}\r\n                          type=\"text\"\r\n                          className={\r\n                            erroraddress === undefined\r\n                              ? \"form-control\"\r\n                              : erroraddress\r\n                              ? \"form-control is-invalid\"\r\n                              : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"address\")}\r\n                          onChange={(text) => this.onChangeTextaddress(text)}\r\n                        />\r\n                        {erroraddress ? (\r\n                          <p class=\"text-danger\">{erroraddress}</p>\r\n                        ) : null}\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n\r\n                      <div class=\"form-group\">\r\n                      <label>{t(\"status\")}</label>\r\n                      <Form.Control\r\n                        as=\"select\"\r\n                        onChange={(text) => this.onChangeTextstatus(text)}\r\n                      >\r\n                        <option></option>\r\n                        <option value=\"0\">ຍົກເລີກການເປັນຄ້າແລ້ວ</option>\r\n                        <option value=\"1\">ຍັງເປັນລູກຄ້າເຮົາຢູ່</option>\r\n                      </Form.Control>\r\n                    </div>\r\n\r\n\r\n\r\n                        {/* <label>{t(\"status\")}</label>\r\n                        <input\r\n                          name=\"status\"\r\n                          value={statusModle ? Status : status}\r\n                          type=\"text\"\r\n                          className={\r\n                            errorstatus === undefined\r\n                              ? \"form-control\"\r\n                              : errorstatus\r\n                              ? \"form-control is-invalid\"\r\n                              : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"status\")}\r\n                          onChange={(text) => this.onChangeTextstatus(text)}\r\n                        />\r\n                        {errorstatus ? (\r\n                          <p class=\"text-danger\">{errorstatus}</p>\r\n                        ) : null} */}\r\n\r\n\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                {statusModle ? (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.onCloseModalFormUpdate()}\r\n                    class=\"btn btn-success\"\r\n                    className={\r\n                      !cus_name ||\r\n                      errorcus_name ||\r\n                      !contact ||\r\n                      errorcontact ||\r\n                      !address ||\r\n                      erroraddress ||\r\n                      !phone ||\r\n                      errorphone\r\n                        ? \"btn btn-secondary disabled\"\r\n                        : \"btn btn-success\"\r\n                    }\r\n                  >\r\n                    {t(\"Confirm\")}\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.onCloseModalForm()}\r\n                    class=\"btn btn-primary\"\r\n                    className={\r\n                      !cus_name ||\r\n                      errorcus_name ||\r\n                      !contact ||\r\n                      errorcontact ||\r\n                      !status ||\r\n                      errorstatus ||\r\n                      !address ||\r\n                      erroraddress ||\r\n                      !phone ||\r\n                      errorphone\r\n                        ? \"btn btn-secondary disabled\"\r\n                        : \"btn btn-primary\"\r\n                    }\r\n                  >\r\n                    {t(\"Confirm\")}\r\n                  </button>\r\n                )}\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-default\"\r\n                  onClick={() => this.onCloseModalFormInsert()}\r\n                >\r\n                  {t(\"cancel\")}\r\n                </button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal\r\n              className=\"modal\"\r\n              show={showDelete}\r\n              size=\"sm\"\r\n              onHide={() => this.onCloseDelete()}\r\n            >\r\n              <Modal.Header>\r\n                <Modal.Title>{t(\"Confirm\")}</Modal.Title>\r\n                <Modal.Title>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    onClick={() => this.onCloseDelete()}\r\n                  >\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>{t(\"DoYouReallyWantDeleteData\")}</Modal.Body>\r\n              <Modal.Footer>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default\"\r\n                  onClick={() => this.onCloseDelete()}\r\n                >\r\n                  {t(\"clase\")}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => this.onClickDelete()}\r\n                >\r\n                  {t(\"Confirm\")}\r\n                </button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dataResultCustomers: state.customerReducer.dataResultCustomers,\r\n    actionType: state.customerReducer.actionType,\r\n    responseCode: state.customerReducer.responseCode,\r\n    message: state.customerReducer.message,\r\n    dataResultCustomersNew: state.customerReducer.dataResultCustomersNew,\r\n    dataResultCustomersDelete: state.customerReducer.dataResultCustomersDelete,\r\n    dataResultCustomersUpdate: state.customerReducer.dataResultCustomersUpdate,\r\n    userInfo: state.loginReduce.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    requestGetAllCustomers: (data) => dispatch(requestGetAllCustomers(data)),\r\n    requestDeleteCustomers: (data, token) =>\r\n      dispatch(requestDeleteCustomers(data, token)),\r\n    requestInsertCustomers: (data, token) =>\r\n      dispatch(requestInsertCustomers(data, token)),\r\n    requestUpdateCustomers: (data, token) =>\r\n      dispatch(requestUpdateCustomers(data, token)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation()(componentName));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport {\r\n  requestBodyCreateNewUsers,\r\n  bodyUpdateUsers,\r\n  bodyDeleteUsers,\r\n} from \"../../api/bodyReq\";\r\nimport { Modal, Form } from \"react-bootstrap\";\r\nimport {\r\n  requestGetAllUsers,\r\n  requestDeleteUsers,\r\n  requestInsertUsers,\r\n  requestUpdateUsers,\r\n} from \"../../actions/userAction\";\r\nimport {\r\n  GET_ALL_USERS_FAILED,\r\n  GET_ALL_USERS_SUCCESS,\r\n  INSRT_NEW_USERS_SUCCESS,\r\n  INSRT_NEW_USERS_FAILED,\r\n  DELETE_BY_ID_USERS_FAILED,\r\n  DELETE_BY_ID_USERS_SUCCESS,\r\n  UPDATE_USERS_FAILED,\r\n  UPDATE_USERS_SUCCESS,\r\n} from \"../../utils/commonType\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Cookie from \"js-cookie\";\r\nimport { LoadingComponet } from \"../../components\";\r\nimport Moment from 'react-moment';\r\nconst MySwal = withReactContent(Swal);\r\nclass componentName extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      showDelete: false,\r\n      loading: false,\r\n      showForm: false,\r\n      statusModle: false,\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const userInfo = Cookie.getJSON(\"userInfo\") || null;\r\n    let token = userInfo ? userInfo.token : null;\r\n    let CreatedBy = userInfo.auth[0].user_id;\r\n    this.loadData(token);\r\n    this.setState({ token, CreatedBy });\r\n  }\r\n  loadData(token) {\r\n    this.setState({ loading: true, onGetInfo: true });\r\n    this.props.requestGetAllUsers(token);\r\n  }\r\n  onAddNewInformation = () => {\r\n    alert(\"ok\");\r\n  };\r\n  onRefresh() { }\r\n  componentWillReceiveProps(nextProps) {\r\n    const { t } = this.props;\r\n    const {\r\n      onGetInfo,\r\n      isInsertUsers,\r\n      isDeleteUsersById,\r\n      onCallUpdateUsers,\r\n      token,\r\n    } = this.state;\r\n    console.log(\"nextProps car:\", nextProps);\r\n    if (onGetInfo) {\r\n      if (nextProps.dataResultUsers) {\r\n        switch (nextProps.actionType) {\r\n          case GET_ALL_USERS_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                let data = nextProps.dataResultUsers;\r\n                this.setState({ onGetInfo: false, loading: false, data });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouLevelDeveloper\")}</a>`,\r\n                });\r\n                this.setState({ onGetInfo: false, loading: false });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case GET_ALL_USERS_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouLevelDeveloper\")}</a>`,\r\n            });\r\n            this.setState({ onGetInfo: false, loading: false });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isInsertUsers) {\r\n      if (nextProps.dataResultUsersNew) {\r\n        switch (nextProps.actionType) {\r\n          case INSRT_NEW_USERS_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouLevelDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/UserScreen\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  isInsertUsers: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouLevelDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  isInsertUsers: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n            break;\r\n          case INSRT_NEW_USERS_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouLevelDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              isInsertUsers: false,\r\n              loading: false,\r\n              showForm: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isDeleteUsersById) {\r\n      if (nextProps.dataResultUsersDelete) {\r\n        switch (nextProps.actionType) {\r\n          case DELETE_BY_ID_USERS_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouLevelDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/UserScreen\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  isDeleteUsersById: false,\r\n                  loading: false,\r\n                  showDelete: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouLevelDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  isDeleteUsersById: false,\r\n                  loading: false,\r\n                  showDelete: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n            break;\r\n          case DELETE_BY_ID_USERS_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouLevelDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              isDeleteUsersById: false,\r\n              loading: false,\r\n              showDelete: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (onCallUpdateUsers) {\r\n      if (nextProps.dataResultUsersUpdate) {\r\n        switch (nextProps.actionType) {\r\n          case UPDATE_USERS_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouLevelDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/UserScreen\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  onCallUpdateUsers: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouLevelDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  onCallUpdateUsers: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case UPDATE_USERS_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouLevelDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              onCallUpdateUsers: false,\r\n              loading: false,\r\n              showForm: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onPressEdit = (item) => {\r\n    const { t } = this.props;\r\n    console.log(\"---item----\", item);\r\n    if (item) {\r\n      let user_id = item.user_id;\r\n      let userName = item.username;\r\n      let Role = item.role;\r\n      let Prasswold = item.prasswold;\r\n      let Level = item.level;\r\n      this.setState({\r\n        user_id,\r\n        userName,\r\n        Role,\r\n        Prasswold,\r\n        Level,\r\n        statusModle: true,\r\n        showForm: true,\r\n      });\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouLevelDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onChangeTextusername = (text) => {\r\n    const value = text.target.value;\r\n    const errorusername =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({\r\n      username: value,\r\n      errorusername,\r\n      userName: value,\r\n    });\r\n  };\r\n  onChangeTextrole = (text) => {\r\n    const value = text.target.value;\r\n    const errorrole =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({\r\n      role: value,\r\n      errorrole,\r\n      Role: value,\r\n    });\r\n  };\r\n\r\n  onChangeTextlevel = (text) => {\r\n    const value = text.target.value;\r\n    const errorlevel =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({\r\n      level: value,\r\n      errorlevel,\r\n      Level: value,\r\n    });\r\n  };\r\n  onChangeTextprasswold = (text) => {\r\n    const value = text.target.value;\r\n    const errorprasswold =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({\r\n      prasswold: value,\r\n      errorprasswold,\r\n      Prasswold: value,\r\n    });\r\n  };\r\n  onCloseModalForm = () => {\r\n    const { t } = this.props;\r\n    const { username, role, level, prasswold, token, CreatedBy } = this.state;\r\n    if (username && role && level && prasswold && token && CreatedBy) {\r\n      this.setState({ loading: true, isInsertUsers: true });\r\n      let data = requestBodyCreateNewUsers(\r\n        null,\r\n        username,\r\n        prasswold,\r\n        role,\r\n        level,\r\n        CreatedBy\r\n      );\r\n\r\n      this.props.requestInsertUsers(data, token);\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouLevelDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onCloseModalFormUpdate = () => {\r\n    const { t } = this.props;\r\n    const { user_id, userName, Level, Prasswold, Role, token, CreatedBy } =\r\n      this.state;\r\n    if (\r\n      user_id &&\r\n      userName &&\r\n      Prasswold &&\r\n      Role &&\r\n      Level &&\r\n      token\r\n    ) {\r\n      let data = bodyUpdateUsers(\r\n        user_id,\r\n        userName,\r\n        Prasswold,\r\n        Role,\r\n        Level,\r\n        CreatedBy\r\n      );\r\n      this.props.requestUpdateUsers(data, token);\r\n      this.setState({ loading: true, onCallUpdateUsers: true });\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouLevelDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onPressDelete = (item) => {\r\n    this.setState({\r\n      showDelete: true,\r\n      user_id: item.user_id,\r\n    });\r\n  };\r\n  onCloseDelete = () => {\r\n    this.setState({ showDelete: false });\r\n  };\r\n  onCloseModalFormInsert = () => {\r\n    this.setState({ showForm: false });\r\n  };\r\n  onAddNew = () => {\r\n    this.setState({ showForm: true, statusModle: false });\r\n  };\r\n  onClickDelete = () => {\r\n    const { t } = this.props;\r\n    const { token } = this.state;\r\n    if (this.state.user_id) {\r\n      this.setState({ loading: true, isDeleteUsersById: true });\r\n      let data = bodyDeleteUsers(this.state.user_id);\r\n      this.props.requestDeleteUsers(data, token);\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouLevelDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  render() {\r\n    const { t } = this.props;\r\n    const {\r\n      data,\r\n      username,\r\n      errorusername,\r\n      showDelete,\r\n      showForm,\r\n      userName,\r\n      Prasswold,\r\n      errorlevel,\r\n      level,\r\n      Level,\r\n      prasswold,\r\n      errorprasswold,\r\n      statusModle,\r\n      role,\r\n      Role,\r\n      errorrole,\r\n      loading,\r\n    } = this.state;\r\n    return (\r\n      <div>\r\n        {loading ? <LoadingComponet /> : null}\r\n        <div className=\"content-wrapper body\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h1>{t(\"UsersInformation\")}</h1>\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                  <ol className=\"breadcrumb float-sm-right\">\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a className=\"newEvent\" onClick={() => this.onRefresh()}>\r\n                        <i class=\"fas fa-sync-alt\"></i> {t(\"Refresh\")}\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a className=\"newEvent\" onClick={() => this.onAddNew()}>\r\n                        <i class=\"fas fa-user\"></i> {t(\"AddNewInformation\")}\r\n                      </a>\r\n                    </li>\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h3 className=\"card-title\">{t(\"Description\")}</h3>\r\n                      <div className=\"card-tools\">\r\n                        \r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"card-body table-responsive p-0\">\r\n                      <table className=\"table table-hover text-nowrap\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>{t(\"Level\")}</th>\r\n                            <th>{t(\"user_id\")}</th>\r\n                            <th>{t(\"username\")}</th>\r\n                            <th>{t(\"role\")}</th>\r\n                            <th>{t(\"level\")}</th>\r\n                            <th>{t(\"createdAt\")}</th>\r\n                            <th>{t(\"updatedAt\")}</th>\r\n\r\n                            <th>{t(\"option\")}</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {data\r\n                            ? data.map((item, i) => (\r\n                              <tr key={i}>\r\n                                <td>{i + 1}</td>\r\n                                <td>{item.user_id}</td>\r\n                                <td>{item.username}</td>\r\n\r\n                                <td>{item.role == 1 ? 'admin' : 'Employee'}</td>\r\n                                <td>{item.level}</td>\r\n\r\n                                <td>\r\n                                  <Moment format=\"YYYY/MM/DD\">{item.createdAt}</Moment>\r\n                                </td>\r\n                                <td>\r\n                                  <Moment format=\"YYYY/MM/DD\">{item.updatedAt}</Moment>\r\n                                </td>\r\n\r\n                                <td>\r\n                                  <div class=\"btn-group\">\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"btn btn-success btn-xs\"\r\n                                      onClick={() => this.onPressEdit(item)}\r\n                                    >\r\n                                      <i className=\"fas fa-edit\" />\r\n                                    </button>\r\n\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"btn btn-danger btn-xs\"\r\n                                      onClick={() => this.onPressDelete(item)}\r\n                                    >\r\n                                      <i className=\"fas fa-trash\" />\r\n                                    </button>\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n                            ))\r\n                            : null}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <Modal\r\n              className=\"modal\"\r\n              show={showForm}\r\n              animation={true}\r\n              onHide={() => this.onCloseModalFormInsert()}\r\n            >\r\n              <Modal.Header>\r\n                <Modal.Title>\r\n                  {statusModle\r\n                    ? t(\"formUpdateInformation\")\r\n                    : t(\"formAddInformation\")}\r\n                </Modal.Title>\r\n                <Modal.Title>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    onClick={() => this.onCloseModalFormInsert()}\r\n                  >\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div class=\"modal-body\">\r\n                  <div className=\"form-row\">\r\n                    <div className=\"col-md-6 mb-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"username\")}</label>\r\n                        <input\r\n                          name=\"username\"\r\n                          value={statusModle ? userName : username}\r\n                          type=\"text\"\r\n                          className={\r\n                            errorusername === undefined\r\n                              ? \"form-control\"\r\n                              : errorusername\r\n                                ? \"form-control is-invalid\"\r\n                                : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"username\")}\r\n                          onChange={(text) => this.onChangeTextusername(text)}\r\n                        />\r\n                        {errorusername ? (\r\n                          <p class=\"text-danger\">{errorusername}</p>\r\n                        ) : null}\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                          <label>{t(\"level\")}</label>\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            onChange={(text) => this.onChangeTextlevel(text)}\r\n                          >\r\n                            <option></option>\r\n                            <option value=\"1\">admin</option>\r\n                            <option value=\"2\">Employee</option>\r\n                          </Form.Control>\r\n                        </div>\r\n\r\n\r\n\r\n                      </div>\r\n\r\n                      <div className=\"col-md-6 mb-6\">\r\n\r\n                        <div class=\"form-group\">\r\n                          <label>{t(\"role\")}</label>\r\n                          <Form.Control\r\n                            as=\"select\"\r\n                            onChange={(text) => this.onChangeTextrole(text)}\r\n                          >\r\n                            <option></option>\r\n                            <option value=\"1\">admin</option>\r\n                            <option value=\"2\">Employee</option>\r\n                          </Form.Control>\r\n                        </div>\r\n                        <div class=\"form-group\">\r\n                          <label>{t(\"prasswold\")}</label>\r\n                          <input\r\n                            name=\"prasswold\"\r\n                            value={statusModle ? Prasswold : prasswold}\r\n                            type=\"text\"\r\n                            className={\r\n                              errorprasswold === undefined\r\n                                ? \"form-control\"\r\n                                : errorprasswold\r\n                                  ? \"form-control is-invalid\"\r\n                                  : \"form-control is-valid\"\r\n                            }\r\n                            placeholder={t(\"prasswold\")}\r\n                            onChange={(text) => this.onChangeTextprasswold(text)}\r\n                          />\r\n                          {errorprasswold ? (\r\n                            <p class=\"text-danger\">{errorprasswold}</p>\r\n                          ) : null}\r\n                        </div>\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n              </Modal.Body>\r\n                <Modal.Footer>\r\n                  {statusModle ? (\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => this.onCloseModalFormUpdate()}\r\n                      class=\"btn btn-success\"\r\n                      className={\r\n                        !username ||\r\n                          errorusername ||\r\n                          !level ||\r\n                          errorlevel ||\r\n                          !prasswold ||\r\n                          errorprasswold\r\n                          ? \"btn btn-secondary disabled\"\r\n                          : \"btn btn-success\"\r\n                      }\r\n                    >\r\n                      {t(\"Confirm\")}\r\n                    </button>\r\n                  ) : (\r\n                    <button\r\n                      type=\"button\"\r\n                      onClick={() => this.onCloseModalForm()}\r\n                      class=\"btn btn-primary\"\r\n                      className={\r\n                        !username ||\r\n                          errorusername ||\r\n                          !level ||\r\n                          errorlevel ||\r\n                          !prasswold ||\r\n                          errorprasswold ||\r\n                          !role ||\r\n                          errorrole\r\n                          ? \"btn btn-secondary disabled\"\r\n                          : \"btn btn-primary\"\r\n                      }\r\n                    >\r\n                      {t(\"Confirm\")}\r\n                    </button>\r\n                  )}\r\n\r\n                  <button\r\n                    type=\"button\"\r\n                    class=\"btn btn-default\"\r\n                    onClick={() => this.onCloseModalFormInsert()}\r\n                  >\r\n                    {t(\"cancel\")}\r\n                  </button>\r\n                </Modal.Footer>\r\n            </Modal>\r\n\r\n              <Modal\r\n                className=\"modal\"\r\n                show={showDelete}\r\n                size=\"sm\"\r\n                onHide={() => this.onCloseDelete()}\r\n              >\r\n                <Modal.Header>\r\n                  <Modal.Title>{t(\"Confirm\")}</Modal.Title>\r\n                  <Modal.Title>\r\n                    <button\r\n                      type=\"button\"\r\n                      className=\"close\"\r\n                      onClick={() => this.onCloseDelete()}\r\n                    >\r\n                      <span aria-hidden=\"true\">×</span>\r\n                    </button>\r\n                  </Modal.Title>\r\n                </Modal.Header>\r\n                <Modal.Body>{t(\"DoYouReallyWantDeleteData\")}</Modal.Body>\r\n                <Modal.Footer>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-default\"\r\n                    onClick={() => this.onCloseDelete()}\r\n                  >\r\n                    {t(\"clase\")}\r\n                  </button>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"btn btn-primary\"\r\n                    onClick={() => this.onClickDelete()}\r\n                  >\r\n                    {t(\"Confirm\")}\r\n                  </button>\r\n                </Modal.Footer>\r\n              </Modal>\r\n          </section>\r\n        </div>\r\n        </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n          dataResultUsers: state.userReducer.dataResultUsers,\r\n    actionType: state.userReducer.actionType,\r\n    responseCode: state.userReducer.responseCode,\r\n    message: state.userReducer.message,\r\n    dataResultUsersNew: state.userReducer.dataResultUsersNew,\r\n    dataResultUsersDelete: state.userReducer.dataResultUsersDelete,\r\n    dataResultUsersUpdate: state.userReducer.dataResultUsersUpdate,\r\n    userInfo: state.loginReduce.userInfo,\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n          requestGetAllUsers: (data) => dispatch(requestGetAllUsers(data)),\r\n    requestDeleteUsers: (data, token) =>\r\n      dispatch(requestDeleteUsers(data, token)),\r\n    requestInsertUsers: (data, token) =>\r\n      dispatch(requestInsertUsers(data, token)),\r\n    requestUpdateUsers: (data, token) =>\r\n      dispatch(requestUpdateUsers(data, token)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation()(componentName));\r\n","import {\r\n    GET_ALL_USERS,\r\n    DELETE_BY_ID_USERS,\r\n    INSRT_NEW_USERS,\r\n    UPDATE_USERS\r\n  } from \"../utils/commonType\";\r\n  \r\n  export const requestGetAllUsers = (data) => {\r\n    return {\r\n      type: GET_ALL_USERS,\r\n      data,\r\n    };\r\n  };\r\n  export const requestDeleteUsers = (data, token) => {\r\n    return {\r\n      type: DELETE_BY_ID_USERS,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  \r\n  export const requestInsertUsers = (data, token) => {\r\n    return {\r\n      type: INSRT_NEW_USERS,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  export const requestUpdateUsers = (data, token) => {\r\n    return {\r\n      type: UPDATE_USERS,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  ","import {\r\n    GET_ALL_DOCUMENT,\r\n    DELETE_BY_ID_DOCUMENT,\r\n    INSRT_NEW_DOCUMENT,\r\n    UPDATE_DOCUMENT,\r\n    GET_ALL_DOCUMENT_BY_ID\r\n  } from \"../utils/commonType\";\r\n  \r\n  export const requestGetAllDocument = (data) => {\r\n    return {\r\n      type: GET_ALL_DOCUMENT,\r\n      data,\r\n    };\r\n  };\r\n  export const requestDeleteDocument = (data, token) => {\r\n    return {\r\n      type: DELETE_BY_ID_DOCUMENT,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  \r\n  export const requestInsertDocument = (data, token) => {\r\n    return {\r\n      type: INSRT_NEW_DOCUMENT,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  export const requestUpdateDocument = (data, token) => {\r\n    return {\r\n      type: UPDATE_DOCUMENT,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n\r\n  export const requestGetByIdDocument = (data,token) => {\r\n    return {\r\n      type: GET_ALL_DOCUMENT_BY_ID,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  ","import {\r\n    GET_ALL_ORDER,\r\n    DELETE_BY_ID_ORDER,\r\n    INSRT_NEW_ORDER,\r\n    UPDATE_ORDER,\r\n    GET_MAX_ID_ORDER,\r\n    INSRT_NEW_ORDER_DETAIL,\r\n    GET_SEARCH_ORDER,\r\n    GET_PRINT_ORDER\r\n  } from \"../utils/commonType\";\r\n  \r\n  export const requestGetAllOrder = (data) => {\r\n    return {\r\n      type: GET_ALL_ORDER,\r\n      data,\r\n    };\r\n  };\r\n  export const requestDeleteOrder = (data, token) => {\r\n    return {\r\n      type: DELETE_BY_ID_ORDER,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  \r\n  export const requestInsertOrder = (data, token) => {\r\n    return {\r\n      type: INSRT_NEW_ORDER,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  export const requestUpdateOrder = (data, token) => {\r\n    return {\r\n      type: UPDATE_ORDER,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n\r\n  export const requestGetMaxIdOrder = (data) => {\r\n    return {\r\n      type: GET_MAX_ID_ORDER,\r\n      data,\r\n    };\r\n  };\r\n\r\n  export const requestInsertOrderDetail = (data, token) => {\r\n    return {\r\n      type: INSRT_NEW_ORDER_DETAIL,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  \r\n  export const requestGetSearchOrder = (data, token) => {\r\n    return {\r\n      type: GET_SEARCH_ORDER,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n\r\n\r\n  export const requestGetPrintOrder = (data, token) => {\r\n    return {\r\n      type: GET_PRINT_ORDER,\r\n      data,\r\n      token,\r\n    };\r\n  };","import {\n    GET_MAX_ID_SELL,\n    INSRT_NEW_SELL,\n    INSRT_NEW_SELL_DETAIL,\n    GET_ALL_SELL,\n    GET_PRINT_SELL\n  } from \"../utils/commonType\";  \n  export const requestInsertOrder = (data, token) => {\n    return {\n      type: INSRT_NEW_SELL,\n      data,\n      token,\n    };\n  };\n\n  export const requestMaxIdSell = (data) => {\n    return {\n      type: GET_MAX_ID_SELL,\n      data,\n    };\n  };\n\n  export const requestInsertSellDetail = (data, token) => {\n    return {\n      type: INSRT_NEW_SELL_DETAIL,\n      data,\n      token,\n    };\n  };\n\n  export const requestGetAllSell = (data) => {\n    return {\n      type: GET_ALL_SELL,\n      data,\n    };\n  };\n\n\n  export const requestGetPrintSell = (data, token) => {\n    return {\n      type: GET_PRINT_SELL,\n      data,\n      token,\n    };\n  };\n  ","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport {\r\n  bodyDeleteDocument,\r\n  requestBodyCreateNewDocument,\r\n  bodyUpdateDocument,\r\n} from \"../../api/bodyReq\";\r\nimport { Modal, Form } from \"react-bootstrap\";\r\nimport {\r\n  requestGetAllDocument,\r\n  requestDeleteDocument,\r\n  requestInsertDocument,\r\n  requestUpdateDocument,\r\n  requestGetByIdDocument\r\n} from \"../../actions/documentAction\";\r\nimport { requestGetAllOrder } from \"../../actions/order\";\r\nimport {\r\n  GET_ALL_DOCUMENT_FAILED,\r\n  GET_ALL_DOCUMENT_SUCCESS,\r\n  INSRT_NEW_DOCUMENT_SUCCESS,\r\n  INSRT_NEW_DOCUMENT_FAILED,\r\n  DELETE_BY_ID_DOCUMENT_FAILED,\r\n  DELETE_BY_ID_DOCUMENT_SUCCESS,\r\n  UPDATE_DOCUMENT_FAILED,\r\n  UPDATE_DOCUMENT_SUCCESS,\r\n  GET_ALL_ORDER_SUCCESS,\r\n  GET_ALL_ORDER_FAILED,\r\n  GET_ALL_CUSTOMERS_FAILED,\r\n  GET_ALL_CUSTOMERS_SUCCESS,\r\n  GET_ALL_EMPLOYEE_SUCCESS,\r\n  GET_ALL_EMPLOYEE_FAILED,\r\n  GET_ALL_SELL_FAILED,\r\n  GET_ALL_SELL_SUCCESS,\r\n  GET_ALL_DOCUMENT_BY_ID_SUCCESS,\r\n  GET_ALL_DOCUMENT_BY_ID_FAILED\r\n} from \"../../utils/commonType\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Cookie from \"js-cookie\";\r\nimport { LoadingComponet } from \"../../components\";\r\n\r\nimport {\r\n  requestGetAllCustomers\r\n} from \"../../actions/customerAction\";\r\nimport {\r\n  requestGetAllEmployee\r\n} from \"../../actions/employeeAction\";\r\n\r\nimport { requestGetAllSell } from '../../actions/sellAction'\r\n\r\nimport { formatNumber } from '../../utils/Formater'\r\nimport Moment from 'react-moment';\r\nimport logo from '../../img/11_PTT.png';\r\nimport ReactToPrint from \"react-to-print\";\r\n\r\nconst MySwal = withReactContent(Swal);\r\nclass componentName extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      showDelete: false,\r\n      loading: false,\r\n      showForm: false,\r\n      status: false,\r\n      alertModelPrint: false,\r\n      dataPrint: []\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const userInfo = Cookie.getJSON(\"userInfo\") || null;\r\n    let token = userInfo ? userInfo.token : null;\r\n    let user_id = userInfo.auth[0].user_id;\r\n    this.loadData(token);\r\n    this.callCustomer(token)\r\n    this.callEmployee(token)\r\n    this.callSell(token)\r\n    this.setState({ token, user_id });\r\n  }\r\n  loadData(token) {\r\n    this.setState({ loading: true, onGetInfo: true });\r\n    this.props.requestGetAllDocument(token);\r\n  }\r\n  callCustomer = (token) => {\r\n    this.setState({ loading: true, onGetInfoCustomer: true });\r\n    this.props.requestGetAllCustomers(token);\r\n  }\r\n  callEmployee = (token) => {\r\n    this.setState({ loading: true, onGetInfoEmployee: true });\r\n    this.props.requestGetAllEmployee(token);\r\n  }\r\n  onAddNewInformation = () => {\r\n    alert(\"ok\");\r\n  };\r\n\r\n  callSell = (token) => {\r\n    this.setState({ loading: true, onGetInfoSell: true });\r\n    this.props.requestGetAllSell(token);\r\n  }\r\n\r\n\r\n  onRefresh() { }\r\n  componentWillReceiveProps(nextProps) {\r\n    const { t } = this.props;\r\n    const {\r\n      onGetInfo,\r\n      isInsertDocument,\r\n      isDeleteDocumentById,\r\n      onCallUpdateDocument,\r\n      token,\r\n      isCallGetOrder,\r\n      onGetInfoCustomer,\r\n      onGetInfoEmployee,\r\n      onGetInfoSell,\r\n      onGetBillDocByID\r\n    } = this.state;\r\n    console.log(\"nextProps car:\", nextProps);\r\n    if (onGetInfo) {\r\n      if (nextProps.dataResultDocument) {\r\n        switch (nextProps.actionType) {\r\n          case GET_ALL_DOCUMENT_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                let data = nextProps.dataResultDocument;\r\n                this.setState({ onGetInfo: false, loading: false, data });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({ onGetInfo: false, loading: false });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case GET_ALL_DOCUMENT_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({ onGetInfo: false, loading: false });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isInsertDocument) {\r\n      if (nextProps.dataResultDocumentNew) {\r\n        switch (nextProps.actionType) {\r\n          case INSRT_NEW_DOCUMENT_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/FuelDeliveryDocument\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  isInsertDocument: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  isInsertDocument: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n            break;\r\n          case INSRT_NEW_DOCUMENT_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              isInsertDocument: false,\r\n              loading: false,\r\n              showForm: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isDeleteDocumentById) {\r\n      if (nextProps.dataResultDocumentDelete) {\r\n        switch (nextProps.actionType) {\r\n          case DELETE_BY_ID_DOCUMENT_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/FuelDeliveryDocument\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  isDeleteDocumentById: false,\r\n                  loading: false,\r\n                  showDelete: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  isDeleteDocumentById: false,\r\n                  loading: false,\r\n                  showDelete: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n            break;\r\n          case DELETE_BY_ID_DOCUMENT_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              isDeleteDocumentById: false,\r\n              loading: false,\r\n              showDelete: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (onCallUpdateDocument) {\r\n      if (nextProps.dataResultDocumentUpdate) {\r\n        switch (nextProps.actionType) {\r\n          case UPDATE_DOCUMENT_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/FuelDeliveryDocument\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  onCallUpdateDocument: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  onCallUpdateDocument: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case UPDATE_DOCUMENT_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              onCallUpdateDocument: false,\r\n              loading: false,\r\n              showForm: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isCallGetOrder) {\r\n      console.log(\"dataResultOrder:\", nextProps.dataResultOrder);\r\n      console.log(\"nextProps.actionTypeOrder:\", nextProps.actionTypeOrder);\r\n      if (nextProps.dataResultOrder) {\r\n        switch (nextProps.actionTypeOrder) {\r\n          case GET_ALL_ORDER_SUCCESS:\r\n            this.setState({\r\n              isCallGetOrder: false,\r\n              dataOrder: nextProps.dataResultOrder,\r\n            });\r\n            break;\r\n          case GET_ALL_ORDER_FAILED:\r\n            this.setState({ isCallGetOrder: false });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (onGetInfoCustomer) {\r\n      if (nextProps.dataResultCustomers) {\r\n        switch (nextProps.actionTypeCustomer) {\r\n          case GET_ALL_CUSTOMERS_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                let dataCustomer = nextProps.dataResultCustomers;\r\n                this.setState({ onGetInfoCustomer: false, loading: false, dataCustomer });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({ onGetInfoCustomer: false, loading: false });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case GET_ALL_CUSTOMERS_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({ onGetInfoCustomer: false, loading: false });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (onGetInfoEmployee) {\r\n      if (nextProps.dataResultEmployee) {\r\n        switch (nextProps.actionTypeEmployee) {\r\n          case GET_ALL_EMPLOYEE_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                let dataEmp = nextProps.dataResultEmployee;\r\n                this.setState({ onGetInfoEmployee: false, loading: false, dataEmp });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({ onGetInfoEmployee: false, loading: false });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case GET_ALL_EMPLOYEE_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({ onGetInfoEmployee: false, loading: false });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n\r\n    if (onGetInfoSell) {\r\n      if (nextProps.dataResultGetSell) {\r\n        switch (nextProps.actionTypeGetSell) {\r\n          case GET_ALL_SELL_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                let dataSell = nextProps.dataResultGetSell;\r\n                this.setState({ onGetInfoSell: false, loading: false, dataSell });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({ onGetInfoSell: false, loading: false });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case GET_ALL_SELL_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({ onGetInfoSell: false, loading: false });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (onGetBillDocByID) {\r\n      if (nextProps.dataResultDocumentById) {\r\n        switch (nextProps.dataResultDocumentByIdActionType) {\r\n          case GET_ALL_DOCUMENT_BY_ID_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                let dataView = nextProps.dataResultDocumentById;\r\n                console.log('dataView:', dataView)\r\n                this.setState({ onGetBillDocByID: false, loading: false, dataPrint: dataView, alertModelPrint: true });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({ onGetBillDocByID: false, loading: false });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case GET_ALL_DOCUMENT_BY_ID_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({ onGetInfoSell: false, loading: false });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onPressView = (item) => {\r\n    const { t } = this.props;\r\n    const { token } = this.state\r\n    if (item) {\r\n      let id_Documents = item.id_documents;\r\n      console.log('id_Documents:', id_Documents)\r\n      this.props.requestGetByIdDocument(id_Documents, token)\r\n      this.setState({ loading: true, onGetBillDocByID: true })\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  }\r\n\r\n  onPressEdit = (item) => {\r\n    const { t } = this.props;\r\n    if (item) {\r\n      let id_Documents = item.id_documents;\r\n      let Address = item.address;\r\n      let Orders_Id = item.orders_id;\r\n      let Contact = item.contact;\r\n      let Traid = item.traid;\r\n      let Date = item.date;\r\n      let Company = item.company;\r\n      let Dimention = item.dimention;\r\n      let Phone = item.phone;\r\n      let Service = item.service;\r\n      let Price = item.price;\r\n      let User_id = item.user_id;\r\n      let Username = item.username;\r\n\r\n      this.setState({\r\n        id_Documents,\r\n        Address,\r\n        Orders_Id,\r\n        Contact,\r\n        Traid,\r\n        Date,\r\n        Company,\r\n        Dimention,\r\n        Phone,\r\n        Service,\r\n        Price,\r\n        User_id,\r\n        Username,\r\n        status: true,\r\n        showForm: true,\r\n      });\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onChangeTextaddress = (text) => {\r\n    const value = text.target.value;\r\n    const erroraddress =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({ address: value, erroraddress, Address: value });\r\n  };\r\n  onChangeTextorders_id = (text) => {\r\n    const value = text.target.value;\r\n    const textSplit = value.split(\"|\");\r\n    const orders_id = textSplit[0];\r\n    const total = textSplit[1];\r\n    const errororders_id =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({ orders_id: orders_id, errororders_id, Orders_Id: orders_id, price: total, Price: total });\r\n  };\r\n\r\n  onChangeTextcontact = (text) => {\r\n    const value = text.target.value;\r\n    const errorcontact =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({ contact: value, errorcontact, Contact: value });\r\n  };\r\n  onChangeTexttraid = (text) => {\r\n    const value = text.target.value;\r\n    const errortraid =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({ traid: value, errortraid, Traid: value });\r\n  };\r\n  onChangeTextdate = (text) => {\r\n    const value = text.target.value;\r\n    const errordate =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({ date: value, errordate, Date: value });\r\n  };\r\n  onChangeTextcompany = (text) => {\r\n    const value = text.target.value;\r\n    const textSplit = value.split(\"|\");\r\n    const cus_id = 'ບໍລິສັດ PTT Public Company Limited';\r\n    const address = textSplit[1];\r\n    const contact = textSplit[2];\r\n    const phone = textSplit[3];\r\n    const errorcompany =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({\r\n      company: cus_id, errorcompany, Company: cus_id, phone: phone,\r\n      Phone: phone, contact: contact, Contact: contact, address: address, Address: address\r\n    });\r\n  };\r\n  onChangeTextdimention = (text) => {\r\n    const value = text.target.value;\r\n    const errordimention =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({ dimention: value, errordimention, Dimention: value });\r\n  };\r\n  onChangeTextphone = (text) => {\r\n    const value = text.target.value;\r\n    const errorphone =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({ phone: value, errorphone, Phone: value });\r\n  };\r\n  onChangeTextservice = (text) => {\r\n    const value = text.target.value;\r\n    const errorservice =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({ service: value, errorservice, Service: value });\r\n  };\r\n  onChangeTextprice = (text) => {\r\n    const value = text.target.value;\r\n    const errorprice =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({ price: value, errorprice, Price: value });\r\n  };\r\n  //onChangeTextdate\r\n  onChangeTextdate = (text) => {\r\n    const value = text.target.value;\r\n    const errordate =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({ date: value, errordate, Date: value });\r\n  };\r\n  onCloseModalForm = () => {\r\n    const { t } = this.props;\r\n    const {\r\n      id_documents,\r\n      address,\r\n      orders_id,\r\n      contact,\r\n      traid,\r\n      date,\r\n      company,\r\n      dimention,\r\n      phone,\r\n      service,\r\n      price,\r\n      user_id,\r\n      token,\r\n    } = this.state;\r\n    if (address && orders_id && contact && traid && date && company && dimention && phone && service && price) {\r\n      this.setState({ loading: true, isInsertDocument: true });\r\n      let data = requestBodyCreateNewDocument(\r\n        id_documents,\r\n        address,\r\n        orders_id,\r\n        contact,\r\n        traid,\r\n        date,\r\n        company,\r\n        dimention,\r\n        phone,\r\n        service,\r\n        price,\r\n        user_id\r\n      );\r\n      console.log(\"data insert:\", data);\r\n      this.props.requestInsertDocument(data, token);\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onCloseModalFormUpdate = () => {\r\n    const { t } = this.props;\r\n    const {\r\n      id_Documents,\r\n      Address,\r\n      Orders_Id,\r\n      Contact,\r\n      Traid,\r\n      Date,\r\n      company,\r\n      Dimention,\r\n      Phone,\r\n      Service,\r\n      Price,\r\n      user_id,\r\n      token,\r\n    } = this.state;\r\n    if (\r\n      id_Documents &&\r\n      Address &&\r\n      Orders_Id &&\r\n      Contact &&\r\n      Traid &&\r\n      Date &&\r\n      company &&\r\n      Dimention &&\r\n      Phone &&\r\n      Service &&\r\n      Price &&\r\n      user_id\r\n    ) {\r\n      let data = bodyUpdateDocument(\r\n        Address,\r\n        Orders_Id,\r\n        Contact,\r\n        Traid,\r\n        Date,\r\n        company,\r\n        Dimention,\r\n        Phone,\r\n        Service,\r\n        Price,\r\n        user_id\r\n      );\r\n      console.log(\"data update:\", data);\r\n      this.props.requestUpdateDocument(data, token);\r\n      this.setState({ loading: true, onCallUpdateDocument: true });\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onPressDelete = (item) => {\r\n    this.setState({\r\n      showDelete: true,\r\n      id_documents: item.id_documents,\r\n    });\r\n  };\r\n  onCloseDelete = () => {\r\n    this.setState({ showDelete: false });\r\n  };\r\n  onCloseModalFormInsert = () => {\r\n    this.setState({ showForm: false });\r\n  };\r\n  onAddNew = () => {\r\n    const { token } = this.state;\r\n    this.props.requestGetAllOrder(token);\r\n    this.setState({ showForm: true, status: false, isCallGetOrder: true });\r\n  };\r\n  onClickDelete = () => {\r\n    const { t } = this.props;\r\n    const { token } = this.state;\r\n    if (this.state.id_documents) {\r\n      this.setState({ loading: true, isDeleteDocumentById: true });\r\n      let data = bodyDeleteDocument(this.state.id_documents);\r\n      this.props.requestDeleteDocument(data, token);\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onCloseAlertBill = () => {\r\n    this.setState({ alertModelPrint: false })\r\n  }\r\n  render() {\r\n    const { t } = this.props;\r\n    const {\r\n      data,\r\n      address,\r\n      erroraddress,\r\n      orders_id,\r\n      errororders_id,\r\n      showDelete,\r\n      showForm,\r\n      Orders_Id,\r\n      status,\r\n      loading,\r\n      Address,\r\n      Contact,\r\n      Traid,\r\n      Date,\r\n      Company,\r\n      Dimention,\r\n      Phone,\r\n      Service,\r\n      Price,\r\n\r\n      errorcontact,\r\n      errortraid,\r\n      errordate,\r\n      errorcompany,\r\n      errordimention,\r\n      errorphone,\r\n      errorservice,\r\n      errorprice,\r\n\r\n      contact,\r\n      traid,\r\n      date,\r\n      company,\r\n      dimention,\r\n      phone,\r\n      service,\r\n      price,\r\n      dataOrder,\r\n      dataEmp,\r\n      dataCustomer,\r\n      dataSell,\r\n      alertModelPrint,\r\n      dataPrint\r\n    } = this.state;\r\n    console.log('phone1:', this.state.phone1)\r\n    console.log('Phone:', this.state.Phone)\r\n    //Phone\r\n    return (\r\n      <div>\r\n        {loading ? <LoadingComponet /> : null}\r\n        <div className=\"content-wrapper body\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h1>{t(\"DocumentInformation\")}</h1>\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                  <ol className=\"breadcrumb float-sm-right\">\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a className=\"newEvent\" onClick={() => this.onRefresh()}>\r\n                        <i class=\"fas fa-sync-alt\"></i> {t(\"Refresh\")}\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a className=\"newEvent\" onClick={() => this.onAddNew()}>\r\n                        <i class=\"fas fa-user\"></i> {t(\"AddNewInformation\")}\r\n                      </a>\r\n                    </li>\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h3 className=\"card-title\">{t(\"Description\")}</h3>\r\n                      <div className=\"card-tools\">\r\n\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"card-body table-responsive p-0\">\r\n                      <table className=\"table table-hover text-nowrap\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>{t(\"Level\")}</th>\r\n                            <th>{t(\"id_documents\")}</th>\r\n                            <th>{t(\"address\")}</th>\r\n                            <th>{t(\"orders_id\")}</th>\r\n                            <th>{t(\"employeename\")}</th>\r\n                            <th>{t(\"contact\")}</th>\r\n                            <th>{t(\"employeename\")}</th>\r\n                            <th>{t(\"date\")}</th>\r\n                            <th>{t(\"company\")}</th>\r\n                            <th>{t(\"dimention\")}</th>\r\n                            <th>{t(\"phone\")}</th>\r\n                            <th>{t(\"service\")}</th>\r\n                            <th>{t(\"price\")}</th>\r\n                            <th>{t(\"createdAt\")}</th>\r\n                            <th>{t(\"updatedAt\")}</th>\r\n                            <th>{t(\"user_id\")}</th>\r\n                            <th>{t(\"option\")}</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {data\r\n                            ? data.map((item, i) => (\r\n                              <tr key={i}>\r\n                                <td>{i + 1}</td>\r\n                                <td>{item.id_documents}</td>\r\n                                <td>{item.address}</td>\r\n                                <td>{item.sales_id}</td>\r\n                                <td>{item.employeename}</td>\r\n                                <td>{item.contact}</td>\r\n                                <td>{item.employeename}</td>\r\n                                <td>\r\n                                  <Moment format=\"YYYY/MM/DD\">{item.date}</Moment>\r\n                                </td>\r\n                                <td>{item.company}</td>\r\n                                <td>{item.dimention}</td>\r\n                                <td>{item.phone}</td>\r\n                                <td>{item.service}</td>\r\n                                <td>{item.price}</td>\r\n                                <td>\r\n                                  <Moment format=\"YYYY/MM/DD\">{item.createdAt}</Moment>\r\n                                </td>\r\n                                <td>\r\n                                  <Moment format=\"YYYY/MM/DD\">{item.updatedAt}</Moment>\r\n                                </td>\r\n                                <td>{item.username}</td>\r\n                                <td>\r\n                                  <div class=\"btn-group\">\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"btn btn-info btn-xs\"\r\n                                      onClick={() => this.onPressView(item)}\r\n                                    >\r\n                                     <i class=\"fas fa-print\"></i>\r\n                                    </button>\r\n\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"btn btn-danger btn-xs\"\r\n                                      onClick={() => this.onPressDelete(item)}\r\n                                    >\r\n                                      <i className=\"fas fa-trash\" />\r\n                                    </button>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"btn btn-success btn-xs\"\r\n                                      onClick={() => this.onPressEdit(item)}\r\n                                    >\r\n                                      <i className=\"fas fa-edit\" />\r\n                                    </button>\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n                            ))\r\n                            : null}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <Modal\r\n              className=\"modal\"\r\n              show={showForm}\r\n              animation={true}\r\n              size=\"lg\"\r\n              onHide={() => this.onCloseModalFormInsert()}\r\n            >\r\n              <Modal.Header>\r\n                <Modal.Title>\r\n                  {status\r\n                    ? t(\"formUpdateInformation\")\r\n                    : t(\"formAddInformation1\")}\r\n                </Modal.Title>\r\n                <Modal.Title>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    onClick={() => this.onCloseModalFormInsert()}\r\n                  >\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div class=\"modal-body\">\r\n                  <div className=\"form-row\">\r\n                    <div className=\"col-md-6 mb-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"orders_id\")}</label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          onChange={(text) => this.onChangeTextorders_id(text)}\r\n                        >\r\n                          <option>-------ກະລຸນາເລືອກໃບບິນທີ່ຕ້ອງການຈັດສົ່ງ-----</option>\r\n                          {dataSell ? dataSell.map((item, i) => (\r\n                            item.status_sell == 1 ?\r\n                              <option value={item.sales_id + '|' + item.total}>{item.sales_id} - {item.cus_name} - {formatNumber(item.total + '')}</option> : null\r\n                          )) : null}\r\n                        </Form.Control>\r\n                      </div>\r\n\r\n\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"date\")}</label>\r\n                        <input\r\n                          name=\"date\"\r\n                          value={status ? Date : date}\r\n                          type=\"date\"\r\n                          className={\r\n                            errordate === undefined\r\n                              ? \"form-control\"\r\n                              : errordate\r\n                                ? \"form-control is-invalid\"\r\n                                : \"form-control is-valid\"\r\n                          }\r\n                          onChange={(text) => this.onChangeTextdate(text)}\r\n                        />\r\n                        {errordate ? (\r\n                          <p class=\"text-danger\">{errordate}</p>\r\n                        ) : null}\r\n                      </div>\r\n\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>{t('employeename')}</label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          onChange={(text) => this.onChangeTexttraid(text)}\r\n                        >\r\n                          <option>-------ກະລຸນາເລືອກພະນັກງານ-----</option>\r\n                          {dataEmp ? dataEmp.map((item, i) => (\r\n                            <option value={item.employee_id}>{item.employee_id} - {item.employeename}</option>\r\n                          )) : null}\r\n                        </Form.Control>\r\n                      </div>\r\n\r\n\r\n\r\n\r\n\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"dimention\")}</label>\r\n                        <input\r\n                          name=\"dimention\"\r\n                          value={status ? Dimention : dimention}\r\n                          type=\"text\"\r\n                          className={\r\n                            errordimention === undefined\r\n                              ? \"form-control\"\r\n                              : errordimention\r\n                                ? \"form-control is-invalid\"\r\n                                : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"dimention\")}\r\n                          onChange={(text) => this.onChangeTextdimention(text)}\r\n                        />\r\n                        {errordimention ? (\r\n                          <p class=\"text-danger\">{errordimention}</p>\r\n                        ) : null}\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"service\")}</label>\r\n                        <input\r\n                          name=\"service\"\r\n                          value={status ? Service : service}\r\n                          type=\"text\"\r\n                          className={\r\n                            errorservice === undefined\r\n                              ? \"form-control\"\r\n                              : errorservice\r\n                                ? \"form-control is-invalid\"\r\n                                : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"service\")}\r\n                          onChange={(text) => this.onChangeTextservice(text)}\r\n                        />\r\n                        {errorservice ? (\r\n                          <p class=\"text-danger\">{errorservice}</p>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 mb-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>{t('cus_name')}</label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          onChange={(text) => this.onChangeTextcompany(text)}\r\n                        >\r\n                          <option>-------ກະລຸນາເລືອກລູກຄ້າ-----</option>\r\n                          {dataCustomer ? dataCustomer.map((item, i) => (\r\n                            item.status == 1 ?\r\n                              <option value={item.cus_id + '|' + item.address + '|' + item.contact + '|' + item.phone}>{item.cus_id} - {item.cus_name}</option>\r\n                              : null\r\n                          )) : null}\r\n                        </Form.Control>\r\n                      </div>\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"address\")}</label>\r\n                        <input\r\n                          name=\"address\"\r\n                          value={status ? Address : address}\r\n                          type=\"text\"\r\n                          disabled\r\n                          className={\r\n                            erroraddress === undefined\r\n                              ? \"form-control\"\r\n                              : erroraddress\r\n                                ? \"form-control is-invalid\"\r\n                                : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"address\")}\r\n                          onChange={(text) => this.onChangeTextaddress(text)}\r\n                        />\r\n                        {erroraddress ? (\r\n                          <p class=\"text-danger\">{erroraddress}</p>\r\n                        ) : null}\r\n                      </div>\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"contact\")}</label>\r\n                        <input\r\n                          name=\"contact\"\r\n                          value={status ? Contact : contact}\r\n                          type=\"text\"\r\n                          disabled\r\n                          className={\r\n                            errorcontact === undefined\r\n                              ? \"form-control\"\r\n                              : errorcontact\r\n                                ? \"form-control is-invalid\"\r\n                                : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"contact\")}\r\n                          onChange={(text) => this.onChangeTextcontact(text)}\r\n                        />\r\n                        {errorcontact ? (\r\n                          <p class=\"text-danger\">{errorcontact}</p>\r\n                        ) : null}\r\n                      </div>\r\n\r\n\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"phone\")}</label>\r\n                        <input\r\n                          name=\"phone\"\r\n                          value={status ? Phone : phone}\r\n                          type=\"text\"\r\n                          disabled\r\n                          className={\r\n                            errorphone === undefined\r\n                              ? \"form-control\"\r\n                              : errorphone\r\n                                ? \"form-control is-invalid\"\r\n                                : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"phone\")}\r\n                          onChange={(text) => this.onChangeTextphone(text)}\r\n                        />\r\n                        {errorphone ? (\r\n                          <p class=\"text-danger\">{errorphone}</p>\r\n                        ) : null}\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"price\")}</label>\r\n                        <input\r\n                          name=\"price\"\r\n                          disabled\r\n                          value={status ? Price : price}\r\n                          type=\"number\"\r\n                          disabled\r\n                          className={\r\n                            errorprice === undefined\r\n                              ? \"form-control\"\r\n                              : errorprice\r\n                                ? \"form-control is-invalid\"\r\n                                : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"price\")}\r\n                          onChange={(text) => this.onChangeTextprice(text)}\r\n                        />\r\n                        {errorprice ? (\r\n                          <p class=\"text-danger\">{errorprice}</p>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                {status ? (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.onCloseModalFormUpdate()}\r\n                    class=\"btn btn-success\"\r\n                    className={\r\n                      !orders_id ||\r\n                        errororders_id ||\r\n                        !service ||\r\n                        errorservice ||\r\n\r\n\r\n\r\n                        !dimention ||\r\n                        errordimention\r\n                        ? \"btn btn-secondary disabled\"\r\n                        : \"btn btn-success\"\r\n                    }\r\n                  >\r\n                    {t(\"Confirm\")}\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.onCloseModalForm()}\r\n                    class=\"btn btn-primary\"\r\n                    className={\r\n\r\n                      !orders_id ||\r\n                        errororders_id ||\r\n                        !service ||\r\n                        errorservice ||\r\n\r\n\r\n\r\n                        !dimention ||\r\n                        errordimention\r\n\r\n                        ? \"btn btn-secondary disabled\"\r\n                        : \"btn btn-primary\"\r\n                    }\r\n                  >\r\n                    {t(\"Confirm\")}\r\n                  </button>\r\n                )}\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-default\"\r\n                  onClick={() => this.onCloseModalFormInsert()}\r\n                >\r\n                  {t(\"cancel\")}\r\n                </button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal\r\n              className=\"modal\"\r\n              show={showDelete}\r\n              size=\"sm\"\r\n              onHide={() => this.onCloseDelete()}\r\n            >\r\n              <Modal.Header>\r\n                <Modal.Title>{t(\"Confirm\")}</Modal.Title>\r\n                <Modal.Title>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    onClick={() => this.onCloseDelete()}\r\n                  >\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>{t(\"DoYouReallyWantDeleteData\")}</Modal.Body>\r\n              <Modal.Footer>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default\"\r\n                  onClick={() => this.onCloseDelete()}\r\n                >\r\n                  {t(\"clase\")}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => this.onClickDelete()}\r\n                >\r\n                  {t(\"Confirm\")}\r\n                </button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n\r\n            <Modal\r\n              className=\"modal\"\r\n              show={alertModelPrint}\r\n              size=\"lg\"\r\n              onHide={() => this.onCloseAlertBill()}\r\n            >\r\n              <Modal.Header>\r\n              {/* Description */}\r\n                <Modal.Title>{t(\"Description\")}</Modal.Title>\r\n                <Modal.Title>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    onClick={() => this.onCloseAlertBill()}\r\n                  >\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div className=\"form\" ref={el => (this.componentRef = el)}>\r\n                  <div>\r\n                    <p className=\"text-center\">{t('textHeader')}</p>\r\n                    <p className=\"text-center\">{t('textDetail')}</p>\r\n                    <h4 className=\"text-center\">{t('DocumentInformation')}</h4>\r\n                    <h4 className=\"text-center\">-----------------</h4>\r\n                    {/* <p className=\"text-center\"><Moment format='MMMM Do YYYY, h:mm:ss a'>{new Date()}</Moment></p> */}\r\n                    <p className=\"text-center\">{dataPrint.length > 0 ? dataPrint[0].username : null}</p>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <img\r\n                        src={logo}\r\n                        className=\"img-circle\"\r\n                        style={{ width: 100, height: 50 }}\r\n                      />\r\n                      <p>{t('companyaName')}:{dataPrint.length > 0 ? dataPrint[0].company : null}</p>\r\n                      <p>{t('ContactInfo')}</p>\r\n                      <p>{t('location')}</p>\r\n                      <p className=\"text\">{t('service')}: {dataPrint.length > 0 ? dataPrint[0].service : null}</p>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                      <br />\r\n                      <br />\r\n                      <p className=\"text\">{t('id_documents')}: {dataPrint.length > 0 ? dataPrint[0].id_documents : null}</p>\r\n                      <p className=\"text\">{t('contact')}: {dataPrint.length > 0 ? dataPrint[0].contact : null}</p>\r\n                      <p className=\"text\">{t('address')}: {dataPrint.length > 0 ? dataPrint[0].address : null}</p>\r\n                      <p className=\"text\">{t('order_id')}: {dataPrint.length > 0 ? dataPrint[0].order_id : null}</p>\r\n                      <p className=\"text\">{t('phone')}: {dataPrint.length > 0 ? dataPrint[0].phone : null}</p>\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12 table-responsive\">\r\n                      <div className=\"table-responsive\">\r\n                        <table className=\"table table-hover table-bordered\">\r\n\r\n                          <thead>\r\n                            <tr>\r\n                              <th>{t('oils_id')}</th>\r\n                              <th>{t('Oil')}</th>\r\n                              <th>{t('qty')}</th>\r\n                              <th>{t('Amount')}</th>\r\n                              <th>{t('Total')}</th>\r\n\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {dataPrint ?\r\n                              dataPrint.map((item, i) => (\r\n                                <tr>\r\n                                  <td>{item.oils_id}</td>\r\n                                  <td>{item.oil_name}</td>\r\n                                  <td>{formatNumber(item.Qty + \"\")}</td>\r\n                                  <td>{formatNumber(item.Price + \"\")}</td>\r\n                                  <td>{formatNumber(item.Qty * item.Price + \"\")}</td>\r\n                                </tr>\r\n                              )) : null}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      {\r\n                        dataPrint.length > 0 ?\r\n                          <div className=\"row\">\r\n                            <div className=\"col-3\">\r\n                            </div>\r\n                            <div className=\"col-9\">\r\n                              <div className=\"table-responsive\">\r\n                                <table className=\"table\">\r\n                                  <tbody>\r\n                                    <tr>\r\n                                      <th>ລວມຈຳນວນ</th>\r\n                                      <td>{formatNumber(dataPrint.reduce((a, v) => a = a + parseInt(v.Qty), 0) + \"\")}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <th>{t('Total')}</th>\r\n                                      <td>{formatNumber(dataPrint.reduce((a, v) => a = a + v.Qty * v.Price, 0) + \"\")}</td>\r\n                                    </tr>\r\n                                  </tbody></table>\r\n                              </div>\r\n                            </div>\r\n                          </div> : null\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <ReactToPrint\r\n                  trigger={() => <button type=\"submit\" className=\"btn btn-success btn-xs\">\r\n                    <i class=\"fas fa-print\"></i>{t(\"print\")}\r\n                  </button>}\r\n                  content={() => this.componentRef}\r\n                />\r\n\r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n\r\n\r\n\r\n\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dataResultDocument: state.documentReducer.dataResultDocument,\r\n    actionType: state.documentReducer.actionType,\r\n    responseCode: state.documentReducer.responseCode,\r\n    message: state.documentReducer.message,\r\n    dataResultDocumentNew: state.documentReducer.dataResultDocumentNew,\r\n    dataResultDocumentDelete: state.documentReducer.dataResultDocumentDelete,\r\n    dataResultDocumentUpdate: state.documentReducer.dataResultDocumentUpdate,\r\n\r\n    dataResultOrder: state.orderReducer.dataResultOrder,\r\n    actionTypeOrder: state.orderReducer.actionType,\r\n\r\n    userInfo: state.loginReduce.userInfo,\r\n\r\n    dataResultCustomers: state.customerReducer.dataResultCustomers,\r\n    actionTypeCustomer: state.customerReducer.actionType,\r\n\r\n    dataResultEmployee: state.employeeReducer.dataResultEmployee,\r\n    actionTypeEmployee: state.employeeReducer.actionType,\r\n\r\n    dataResultGetSell: state.sellReducer.dataResultGetSell,\r\n    actionTypeGetSell: state.sellReducer.actionType,\r\n\r\n\r\n    dataResultDocumentById: state.documentReducer.dataResultDocumentById,\r\n    dataResultDocumentByIdActionType: state.documentReducer.actionType,\r\n\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    requestGetAllDocument: (data) => dispatch(requestGetAllDocument(data)),\r\n    requestGetAllOrder: (data) => dispatch(requestGetAllOrder(data)),\r\n    requestDeleteDocument: (data, token) =>\r\n      dispatch(requestDeleteDocument(data, token)),\r\n    requestInsertDocument: (data, token) =>\r\n      dispatch(requestInsertDocument(data, token)),\r\n    requestUpdateDocument: (data, token) =>\r\n      dispatch(requestUpdateDocument(data, token)),\r\n    requestGetAllCustomers: (data) => dispatch(requestGetAllCustomers(data)),\r\n    requestGetAllEmployee: (data) => dispatch(requestGetAllEmployee(data)),\r\n    requestGetAllSell: (data) => dispatch(requestGetAllSell(data)),\r\n    requestGetByIdDocument: (data, token) => dispatch(requestGetByIdDocument(data, token)),\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation()(componentName));\r\n","import React, { Component } from \"react\";\r\nimport { connect } from \"react-redux\";\r\nimport { withTranslation } from \"react-i18next\";\r\nimport {\r\n  bodyDeleteTransports,\r\n  requestBodyCreateNewTransports,\r\n  bodyUpdateTransports,\r\n} from \"../../api/bodyReq\";\r\nimport { Modal, Form } from \"react-bootstrap\";\r\nimport {\r\n  requestGetAllTransports,\r\n  requestDeleteTransports,\r\n  requestInsertTransports,\r\n  requestUpdateTransports,\r\n  requestGetByIdTransports\r\n} from \"../../actions/transportsAction\";\r\n\r\nimport { requestGetAllSupplier } from \"../../actions/supplierAction\";\r\nimport { requestGetAllCar } from \"../../actions/carAction\";\r\nimport { requestGetAllOil } from \"../../actions/oilAction\";\r\nimport { requestGetAllOrder } from \"../../actions/order\";\r\nimport { requestGetAllDocument } from \"../../actions/documentAction\";\r\n\r\nimport {\r\n  GET_ALL_TRANSPORTS_FAILED,\r\n  GET_ALL_TRANSPORTS_SUCCESS,\r\n  INSRT_NEW_TRANSPORTS_SUCCESS,\r\n  INSRT_NEW_TRANSPORTS_FAILED,\r\n  DELETE_BY_ID_TRANSPORTS_FAILED,\r\n  DELETE_BY_ID_TRANSPORTS_SUCCESS,\r\n  UPDATE_TRANSPORTS_FAILED,\r\n  UPDATE_TRANSPORTS_SUCCESS,\r\n  GET_ALL_SUPPLIER_SUCCESS,\r\n  GET_ALL_SUPPLIER_FAILED,\r\n  GET_ALL_CAR_SUCCESS,\r\n  GET_ALL_CAR_FAILED,\r\n  GET_ALL_OIL_SUCCESS,\r\n  GET_ALL_OIL_FAILED,\r\n  GET_ALL_ORDER_SUCCESS,\r\n  GET_ALL_ORDER_FAILED,\r\n  GET_ALL_DOCUMENT_SUCCESS,\r\n  GET_ALL_DOCUMENT_FAILED,\r\n  GET_ALL_SELL_FAILED,\r\n  GET_ALL_SELL_SUCCESS,\r\n  GET_ALL_TRANSPORTS_BY_ID_FAILED,\r\n  GET_ALL_TRANSPORTS_BY_ID_SUCCESS\r\n\r\n} from \"../../utils/commonType\";\r\nimport Swal from \"sweetalert2\";\r\nimport withReactContent from \"sweetalert2-react-content\";\r\nimport Cookie from \"js-cookie\";\r\nimport { LoadingComponet } from \"../../components\";\r\nimport { requestGetAllSell } from '../../actions/sellAction';\r\nimport { formatNumber } from '../../utils/Formater'\r\nimport Moment from 'react-moment';\r\nimport logo from '../../img/11_PTT.png';\r\nimport ReactToPrint from \"react-to-print\";\r\nconst MySwal = withReactContent(Swal);\r\nclass componentName extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.state = {\r\n      show: false,\r\n      showDelete: false,\r\n      loading: false,\r\n      showForm: false,\r\n      status: false,\r\n      alertModelPrint: false,\r\n      dataPrint: [],\r\n      dataSell:[]\r\n    };\r\n  }\r\n  componentDidMount() {\r\n    const userInfo = Cookie.getJSON(\"userInfo\") || null;\r\n    let token = userInfo ? userInfo.token : null;\r\n    let user_id = userInfo.auth[0].user_id;\r\n    this.loadData(token);\r\n    // this.callSell(token)\r\n    this.setState({ token, user_id });\r\n  }\r\n  loadData(token) {\r\n    this.setState({ loading: true, onGetInfo: true });\r\n    this.props.requestGetAllTransports(token);\r\n  }\r\n  onAddNewInformation = () => {\r\n    alert(\"ok\");\r\n  };\r\n  callSell = (token) => {\r\n    this.setState({ loading: true, onGetInfoSell: true });\r\n    this.props.requestGetAllSell(token);\r\n  }\r\n  onRefresh() { }\r\n  componentWillReceiveProps(nextProps) {\r\n    const { t } = this.props;\r\n    const {\r\n      onGetInfo,\r\n      isInsertTransports,\r\n      isDeleteTransportsById,\r\n      onCallUpdateTransports,\r\n      token,\r\n      isCallGetAllDataSupplier,\r\n      isCallGetAllDataCar,\r\n      isCallGetAllDataOil,\r\n      isCallGetOrder,\r\n      isCallGetAllDataDocment,\r\n      onGetInfoSell,\r\n      onGetBillTranspostByID\r\n    } = this.state;\r\n    console.log(\"nextProps car:\", nextProps);\r\n    if (onGetInfo) {\r\n      if (nextProps.dataResultTransports) {\r\n        switch (nextProps.actionType) {\r\n          case GET_ALL_TRANSPORTS_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                let data = nextProps.dataResultTransports;\r\n                this.setState({ onGetInfo: false, loading: false, data });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({ onGetInfo: false, loading: false });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case GET_ALL_TRANSPORTS_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({ onGetInfo: false, loading: false });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isInsertTransports) {\r\n      if (nextProps.dataResultTransportsNew) {\r\n        switch (nextProps.actionType) {\r\n          case INSRT_NEW_TRANSPORTS_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/FuelDelivery\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  isInsertTransports: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  isInsertTransports: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n            break;\r\n          case INSRT_NEW_TRANSPORTS_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              isInsertTransports: false,\r\n              loading: false,\r\n              showForm: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isDeleteTransportsById) {\r\n      if (nextProps.dataResultTransportsDelete) {\r\n        switch (nextProps.actionType) {\r\n          case DELETE_BY_ID_TRANSPORTS_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/FuelDelivery\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  isDeleteTransportsById: false,\r\n                  loading: false,\r\n                  showDelete: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  isDeleteTransportsById: false,\r\n                  loading: false,\r\n                  showDelete: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n            break;\r\n          case DELETE_BY_ID_TRANSPORTS_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              isDeleteTransportsById: false,\r\n              loading: false,\r\n              showDelete: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (onCallUpdateTransports) {\r\n      if (nextProps.dataResultTransportsUpdate) {\r\n        switch (nextProps.actionType) {\r\n          case UPDATE_TRANSPORTS_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                MySwal.fire({\r\n                  icon: \"success\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                }).then((result) => {\r\n                  if (result.isConfirmed) {\r\n                    window.location.href = \"/FuelDelivery\";\r\n                  }\r\n                });\r\n\r\n                this.setState({\r\n                  onCallUpdateTransports: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({\r\n                  onCallUpdateTransports: false,\r\n                  loading: false,\r\n                  showForm: false,\r\n                });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case UPDATE_TRANSPORTS_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({\r\n              onCallUpdateTransports: false,\r\n              loading: false,\r\n              showForm: false,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isCallGetAllDataSupplier) {\r\n      console.log(\"dataResultSupplier:\", nextProps.dataResultSupplier);\r\n      console.log(\"actionTypeSupplier:\", nextProps.actionTypeSupplier);\r\n      if (nextProps.dataResultSupplier) {\r\n        switch (nextProps.actionTypeSupplier) {\r\n          case GET_ALL_SUPPLIER_SUCCESS:\r\n            this.setState({\r\n              isCallGetAllDataSupplier: false,\r\n              dataComboSupplier: nextProps.dataResultSupplier,\r\n            });\r\n            break;\r\n          case GET_ALL_SUPPLIER_FAILED:\r\n            this.setState({\r\n              isCallGetAllDataSupplier: false,\r\n              dataComboSupplier: null,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isCallGetAllDataCar) {\r\n      console.log(\"dataResultCar:\", nextProps.dataResultCar);\r\n      console.log(\"actionTypeCar:\", nextProps.actionTypeCar);\r\n      if (nextProps.dataResultCar) {\r\n        switch (nextProps.actionTypeCar) {\r\n          case GET_ALL_CAR_SUCCESS:\r\n            this.setState({\r\n              isCallGetAllDataCar: false,\r\n              dataComboCar: nextProps.dataResultCar,\r\n            });\r\n            break;\r\n          case GET_ALL_CAR_FAILED:\r\n            this.setState({\r\n              isCallGetAllDataCar: false,\r\n              dataComboCar: null,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isCallGetAllDataOil) {\r\n      console.log(\"dataResultOil:\", nextProps.dataResultOil);\r\n      console.log(\"actionTypeOil:\", nextProps.actionTypeOil);\r\n      if (nextProps.dataResultOil) {\r\n        switch (nextProps.actionTypeOil) {\r\n          case GET_ALL_OIL_SUCCESS:\r\n            this.setState({\r\n              isCallGetAllDataOil: false,\r\n              dataComboOil: nextProps.dataResultOil,\r\n            });\r\n            break;\r\n          case GET_ALL_OIL_FAILED:\r\n            this.setState({\r\n              isCallGetAllDataOil: false,\r\n              dataComboOil: null,\r\n            });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isCallGetOrder) {\r\n      console.log(\"dataResultOrder:\", nextProps.dataResultOrder);\r\n      console.log(\"nextProps.actionTypeOrder:\", nextProps.actionTypeOrder);\r\n      if (nextProps.dataResultOrder) {\r\n        switch (nextProps.actionTypeOrder) {\r\n          case GET_ALL_ORDER_SUCCESS:\r\n            this.setState({\r\n              isCallGetOrder: false,\r\n              dataOrder: nextProps.dataResultOrder,\r\n            });\r\n            break;\r\n          case GET_ALL_ORDER_FAILED:\r\n            this.setState({ isCallGetOrder: false });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (isCallGetAllDataDocment) {\r\n      if (nextProps.dataResultDocument) {\r\n        switch (nextProps.actionTypeDocument) {\r\n          case GET_ALL_DOCUMENT_SUCCESS:\r\n            this.setState({\r\n              isCallGetAllDataDocment: false,\r\n              dataDocument: nextProps.dataResultDocument,\r\n            });\r\n            break;\r\n          case GET_ALL_DOCUMENT_FAILED:\r\n            this.setState({ isCallGetAllDataDocment: false });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (onGetInfoSell) {\r\n      if (nextProps.dataResultGetSell) {\r\n        switch (nextProps.actionTypeGetSell) {\r\n          case GET_ALL_SELL_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                let data1 = nextProps.dataResultGetSell;\r\n                console.log('dataSell:--------', data1)\r\n                this.setState({ onGetInfoSell: false, loading: false, dataSell: data1 });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({ onGetInfoSell: false, loading: false });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case GET_ALL_SELL_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({ onGetInfoSell: false, loading: false });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n    if (onGetBillTranspostByID) {\r\n      if (nextProps.dataResultTransportsById) {\r\n        switch (nextProps.actionTypeGetTransport) {\r\n          case GET_ALL_TRANSPORTS_BY_ID_SUCCESS:\r\n            switch (nextProps.responseCode) {\r\n              case \"00000\":\r\n                let dataTransport = nextProps.dataResultTransportsById;\r\n                this.setState({ onGetBillTranspostByID: false, loading: false, dataPrint: dataTransport, alertModelPrint: true });\r\n                break;\r\n              case nextProps.responseCode:\r\n                MySwal.fire({\r\n                  icon: \"error\",\r\n                  title: t(\"info\"),\r\n                  text: nextProps.message,\r\n                  footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n                });\r\n                this.setState({ onGetBillTranspostByID: false, loading: false });\r\n                break;\r\n\r\n              default:\r\n                break;\r\n            }\r\n            break;\r\n          case GET_ALL_TRANSPORTS_BY_ID_FAILED:\r\n            MySwal.fire({\r\n              icon: \"error\",\r\n              title: t(\"info\"),\r\n              text: nextProps.message,\r\n              footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n            });\r\n            this.setState({ onGetBillTranspostByID: false, loading: false });\r\n            break;\r\n\r\n          default:\r\n            break;\r\n        }\r\n      }\r\n    }\r\n  }\r\n\r\n  onPressEdit = (item) => {\r\n    const { t } = this.props;\r\n    // console.log(\"---item----\", item);\r\n    if (item) {\r\n      let Transport_id = item.transport_id;\r\n      let Id_documents = item.id_documents;\r\n      let Dimention = item.dimention;\r\n      let Order_id = item.order_id;\r\n      let Oil_id = item.oil_id;\r\n      let Company = item.company;\r\n      let Supplier_id = item.supplier_id;\r\n      let Car_id = item.car_id;\r\n      this.setState({\r\n        Transport_id,\r\n        Id_documents,\r\n        Dimention,\r\n        Order_id,\r\n        Oil_id,\r\n        Company,\r\n        Supplier_id,\r\n        Car_id,\r\n        status: true,\r\n        showForm: true,\r\n      });\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onChangeTextcompany = (text) => {\r\n    const value = text.target.value;\r\n    const errorcompany =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({ company: value, errorcompany, Company: value });\r\n  };\r\n  onChangeTextdimention = (text) => {\r\n    const value = text.target.value;\r\n    const errordimention =\r\n      !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\r\n    this.setState({ dimention: value, errordimention, Dimention: value });\r\n  };\r\n\r\n  onCloseModalForm = () => {\r\n    const { t } = this.props;\r\n    const {\r\n      transport_id,\r\n      id_documents,\r\n      dimention,\r\n      order_id,\r\n      oil_id,\r\n      company,\r\n      supplier_id,\r\n      car_id,\r\n      user_id,\r\n      token,\r\n    } = this.state;\r\n    if (\r\n      id_documents &&\r\n      dimention &&\r\n      order_id &&\r\n      oil_id &&\r\n      company &&\r\n      supplier_id &&\r\n      car_id &&\r\n      user_id\r\n    ) {\r\n      // transport_id\tid_documents\tdimention\torder_id\toil_id\tcompany\tsupplier_id\tcar_id\tuser_id\r\n      let data = requestBodyCreateNewTransports(\r\n        transport_id,\r\n        id_documents,\r\n        dimention,\r\n        order_id,\r\n        oil_id,\r\n        company,\r\n        supplier_id,\r\n        car_id,\r\n        user_id\r\n      );\r\n      console.log(\"---\", data);\r\n      this.props.requestInsertTransports(data, token);\r\n      this.setState({ loading: true, isInsertTransports: true });\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onCloseModalFormUpdate = () => {\r\n    const { t } = this.props;\r\n    const {\r\n      Transport_id,\r\n      Id_documents,\r\n      Dimention,\r\n      Order_id,\r\n      Oil_id,\r\n      Company,\r\n      Supplier_id,\r\n      Car_id,\r\n      user_id,\r\n      token,\r\n    } = this.state;\r\n    if (\r\n      Transport_id &&\r\n      Id_documents &&\r\n      Dimention &&\r\n      Order_id &&\r\n      Oil_id &&\r\n      Company &&\r\n      Supplier_id &&\r\n      Car_id &&\r\n      user_id &&\r\n      token\r\n    ) {\r\n      let data = bodyUpdateTransports(\r\n        Transport_id,\r\n        Id_documents,\r\n        Dimention,\r\n        Order_id,\r\n        Oil_id,\r\n        Company,\r\n        Supplier_id,\r\n        Car_id,\r\n        user_id\r\n      );\r\n      this.props.requestUpdateTransports(data, token);\r\n      this.setState({ loading: true, onCallUpdateTransports: true });\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n  onPressView = (item) => {\r\n    const { t } = this.props;\r\n    const { token } = this.state\r\n    if (item) {\r\n      let transport_id = item.transport_id;\r\n      console.log('transport_id:', transport_id)\r\n      this.props.requestGetByIdTransports(transport_id, token)\r\n      this.setState({ loading: true, onGetBillTranspostByID: true })\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  }\r\n  onPressDelete = (item) => {\r\n    this.setState({\r\n      showDelete: true,\r\n      transport_id: item.transport_id,\r\n    });\r\n  };\r\n  onCloseDelete = () => {\r\n    this.setState({ showDelete: false });\r\n  };\r\n  onCloseModalFormInsert = () => {\r\n    this.setState({ showForm: false });\r\n  };\r\n  onAddNew = () => {\r\n    this.onLoadingDataCombobox();\r\n    this.setState({ showForm: true, status: false });\r\n  };\r\n  onClickDelete = () => {\r\n    const { t } = this.props;\r\n    const { token } = this.state;\r\n    if (this.state.transport_id) {\r\n      this.setState({ loading: true, isDeleteTransportsById: true });\r\n      let data = bodyDeleteTransports(this.state.transport_id);\r\n      this.props.requestDeleteTransports(data, token);\r\n    } else {\r\n      MySwal.fire({\r\n        icon: \"error\",\r\n        title: t(\"info\"),\r\n        text: t(\"InformationOncomplete\"),\r\n        footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\r\n      });\r\n    }\r\n  };\r\n\r\n  onSelectId_documents = (text) => {\r\n    const value = text.target.value;\r\n    this.setState({\r\n      id_documents: value,\r\n      Id_documents: value,\r\n    });\r\n  };\r\n\r\n  onSelectOrder_id = (text) => {\r\n    const value = text.target.value;\r\n    this.setState({\r\n      order_id: value,\r\n      Order_id: value,\r\n    });\r\n  };\r\n\r\n  onSelectOil_id = (text) => {\r\n    const value = text.target.value;\r\n    this.setState({\r\n      oil_id: value,\r\n      Oil_id: value,\r\n    });\r\n  };\r\n\r\n  onSelectSupplier_id = (text) => {\r\n    const value = text.target.value;\r\n    this.setState({\r\n      supplier_id: value,\r\n      Supplier_id: value,\r\n    });\r\n  };\r\n\r\n  onSelectCar_id = (text) => {\r\n    const value = text.target.value;\r\n    this.setState({\r\n      car_id: value,\r\n      Car_id: value,\r\n    });\r\n  };\r\n  onLoadingDataCombobox = () => {\r\n    const { token } = this.state;\r\n    this.props.requestGetAllSupplier(token);\r\n    this.props.requestGetAllCar(token);\r\n    this.props.requestGetAllOil(token);\r\n    this.props.requestGetAllOrder(token);\r\n    this.props.requestGetAllDocument(token);\r\n    this.props.requestGetAllSell(token);\r\n    this.setState({\r\n      isCallGetAllDataSupplier: true,\r\n      isCallGetAllDataCar: true,\r\n      isCallGetAllDataOil: true,\r\n      isCallGetOrder: true,\r\n      isCallGetAllDataDocment: true,\r\n      onGetInfoSell: true \r\n    });\r\n  };\r\n  onCloseAlertBill = () => {\r\n    this.setState({ alertModelPrint: false })\r\n  }\r\n  render() {\r\n    const { t } = this.props;\r\n    const {\r\n      data,\r\n      company,\r\n      errorcompany,\r\n      dimention,\r\n      errordimention,\r\n      showDelete,\r\n      showForm,\r\n      Company,\r\n      Dimention,\r\n      status,\r\n      loading,\r\n      dataComboSupplier,\r\n      dataComboCar,\r\n      dataComboOil,\r\n      dataOrder,\r\n      dataDocument,\r\n      dataSell,\r\n      alertModelPrint,\r\n      dataPrint\r\n    } = this.state;\r\n    console.log('dataSell:-----22222---', dataSell)\r\n    return (\r\n      <div>\r\n        {loading ? <LoadingComponet /> : null}\r\n        <div className=\"content-wrapper body\">\r\n          <section className=\"content-header\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row mb-2\">\r\n                <div className=\"col-sm-6\">\r\n                  <h1>{t(\"TransportsInformation\")}</h1>\r\n                </div>\r\n                <div className=\"col-sm-6\">\r\n                  <ol className=\"breadcrumb float-sm-right\">\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a className=\"newEvent\" onClick={() => this.onRefresh()}>\r\n                        <i class=\"fas fa-sync-alt\"></i> {t(\"Refresh\")}\r\n                      </a>\r\n                    </li>\r\n                    <li className=\"breadcrumb-item\">\r\n                      <a className=\"newEvent\" onClick={() => this.onAddNew()}>\r\n                        <i class=\"fas fa-user\"></i> {t(\"AddNewInformation\")}\r\n                      </a>\r\n                    </li>\r\n                  </ol>\r\n                </div>\r\n              </div>\r\n            </div>\r\n          </section>\r\n          <section className=\"content\">\r\n            <div className=\"container-fluid\">\r\n              <div className=\"row\">\r\n                <div className=\"col-12\">\r\n                  <div className=\"card\">\r\n                    <div className=\"card-header\">\r\n                      <h3 className=\"card-title\">{t(\"Description\")}</h3>\r\n                      <div className=\"card-tools\">\r\n\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"card-body table-responsive p-0\">\r\n                      <table className=\"table table-hover text-nowrap\">\r\n                        <thead>\r\n                          <tr>\r\n                            <th>{t(\"Level\")}</th>\r\n                            <th>{t(\"transport_id\")}</th>\r\n                            <th>{t(\"id_documents\")}</th>\r\n                            <th>{t(\"address\")}</th>\r\n                            <th>{t(\"dimention\")}</th>\r\n                            <th>{t(\"orders_id\")}</th>\r\n                            <th>{t(\"service\")}</th>\r\n                            <th>{t(\"employee_id\")}</th>\r\n                            <th>{t(\"oil_name\")}</th>\r\n                            <th>{t(\"company\")}</th>\r\n                            <th>{t(\"supplier_id\")}</th>\r\n                            <th>{t(\"supplier_name\")}</th>\r\n                            <th>{t(\"createdAt\")}</th>\r\n                            <th>{t(\"updatedAt\")}</th>\r\n                            <th>{t(\"company\")}</th>\r\n                            <th>{t(\"username\")}</th>\r\n                            <th>{t(\"option\")}</th>\r\n                          </tr>\r\n                        </thead>\r\n                        <tbody>\r\n                          {data\r\n                            ? data.map((item, i) => (\r\n                              <tr key={i}>\r\n                                <td>{i + 1}</td>\r\n                                <td>{item.transport_id}</td>\r\n                                <td>{item.id_documents}</td>\r\n                                <td>{item.address}</td>\r\n                                <td>{item.dimention}</td>\r\n                                <td>{item.orders_id}</td>\r\n                                <td>{item.service}</td>\r\n                                <td>{item.employee_id}</td>\r\n                                <td>{item.oil_name}</td>\r\n                                <td>{item.company}</td>\r\n                                <td>{item.supplier_id}</td>\r\n                                <td>{item.supplier_name}</td>\r\n\r\n                                <td>\r\n                                  <Moment format=\"YYYY/MM/DD\">{item.createdAt}</Moment>\r\n                                </td>\r\n                                <td>\r\n                                  <Moment format=\"YYYY/MM/DD\">{item.updatedAt}</Moment>\r\n                                </td>\r\n                                <td>{item.company}</td>\r\n                                <td>{item.username}</td>\r\n                                <td>\r\n                                  <div class=\"btn-group\">\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"btn btn-info btn-xs\"\r\n                                      onClick={() => this.onPressView(item)}\r\n                                    >\r\n                                     <i class=\"fas fa-print\"></i>\r\n                                    </button>\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"btn btn-success btn-xs\"\r\n                                      onClick={() => this.onPressEdit(item)}\r\n                                    >\r\n                                      <i className=\"fas fa-edit\" />\r\n                                    </button>\r\n\r\n                                    <button\r\n                                      type=\"button\"\r\n                                      class=\"btn btn-danger btn-xs\"\r\n                                      onClick={() => this.onPressDelete(item)}\r\n                                    >\r\n                                      <i className=\"fas fa-trash\" />\r\n                                    </button>\r\n                                  </div>\r\n                                </td>\r\n                              </tr>\r\n                            ))\r\n                            : null}\r\n                        </tbody>\r\n                      </table>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </div>\r\n            </div>\r\n\r\n            <Modal\r\n              className=\"modal\"\r\n              show={showForm}\r\n              animation={true}\r\n              onHide={() => this.onCloseModalFormInsert()}\r\n            >\r\n              <Modal.Header>\r\n                <Modal.Title>\r\n                  {status\r\n                    ? t(\"formUpdateInformation\")\r\n                    : t(\"formAddInformation2\")}\r\n                </Modal.Title>\r\n                <Modal.Title>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    onClick={() => this.onCloseModalFormInsert()}\r\n                  >\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div class=\"modal-body\">\r\n                  <div className=\"form-row\">\r\n                    <div className=\"col-md-6 mb-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"id_documents\")}</label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          onChange={(text) => this.onSelectId_documents(text)}\r\n                        >\r\n                          <option></option>\r\n                          {dataDocument\r\n                            ? dataDocument.map((item, i) => (\r\n                              <option value={item.id_documents}>\r\n                                {item.id_documents} - {item.company} - {item.address} - {item.contact}\r\n                              </option>\r\n                            ))\r\n                            : null}\r\n                        </Form.Control>\r\n                      </div>\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"order_id\")}</label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          onChange={(text) => this.onSelectOrder_id(text)}\r\n                        >\r\n                          <option></option>\r\n                          <option>-------ກະລຸນາເລືອກໃບບິນທີ່ຕ້ອງການຈັດສົ່ງ-----</option>\r\n                          {dataSell ? dataSell.map((item, i) => (\r\n                           <option value={item.sales_id}>{item.sales_id} - {item.cus_name} - {formatNumber(item.total + '')}</option>\r\n                          )) : null}\r\n                        </Form.Control>\r\n                      </div>\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>ຢີຫໍ້ລົດ</label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          onChange={(text) => this.onSelectCar_id(text)}\r\n                        >\r\n                          <option></option>\r\n                          {dataComboCar\r\n                            ? dataComboCar.map((item, i) => (\r\n                              <option value={item.car_id}>\r\n                                {item.car_id} - {item.car_name}\r\n                              </option>\r\n                            ))\r\n                            : null}\r\n                        </Form.Control>\r\n                      </div>\r\n\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"company\")}</label>\r\n                        <input\r\n                          name=\"company\"\r\n                          value={status ? Company : company}\r\n                          type=\"text\"\r\n                          className={\r\n                            errorcompany === undefined\r\n                              ? \"form-control\"\r\n                              : errorcompany\r\n                                ? \"form-control is-invalid\"\r\n                                : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"company\")}\r\n                          onChange={(text) => this.onChangeTextcompany(text)}\r\n                        />\r\n                        {errorcompany ? (\r\n                          <p class=\"text-danger\">{errorcompany}</p>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6 mb-6\">\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"oil_id\")}</label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          onChange={(text) => this.onSelectOil_id(text)}\r\n                        >\r\n                          <option></option>\r\n                          {dataComboOil\r\n                            ? dataComboOil.map((item, i) => (\r\n                              <option value={item.oils_id}>\r\n                                {item.oils_id} - {item.oil_name}\r\n                              </option>\r\n                            ))\r\n                            : null}\r\n                        </Form.Control>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"supplier_id\")}</label>\r\n                        <Form.Control\r\n                          as=\"select\"\r\n                          onChange={(text) => this.onSelectSupplier_id(text)}\r\n                        >\r\n                          <option></option>\r\n                          {dataComboSupplier\r\n                            ? dataComboSupplier.map((item, i) => (\r\n                              <option value={item.supplier_id}>\r\n                                {item.supplier_id} - {item.supplier_name}\r\n                              </option>\r\n                            ))\r\n                            : null}\r\n                        </Form.Control>\r\n                      </div>\r\n                      <div class=\"form-group\">\r\n                        <label>{t(\"dimention\")}</label>\r\n                        <input\r\n                          name=\"dimention\"\r\n                          value={status ? Dimention : dimention}\r\n                          type=\"text\"\r\n                          className={\r\n                            errordimention === undefined\r\n                              ? \"form-control\"\r\n                              : errordimention\r\n                                ? \"form-control is-invalid\"\r\n                                : \"form-control is-valid\"\r\n                          }\r\n                          placeholder={t(\"dimention\")}\r\n                          onChange={(text) => this.onChangeTextdimention(text)}\r\n                        />\r\n                        {errordimention ? (\r\n                          <p class=\"text-danger\">{errordimention}</p>\r\n                        ) : null}\r\n                      </div>\r\n                    </div>\r\n                  </div>\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                {status ? (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.onCloseModalFormUpdate()}\r\n                    class=\"btn btn-success\"\r\n                    className={\r\n                      !company || errorcompany || !dimention || errordimention\r\n                        ? \"btn btn-secondary disabled\"\r\n                        : \"btn btn-success\"\r\n                    }\r\n                  >\r\n                    {t(\"Confirm\")}\r\n                  </button>\r\n                ) : (\r\n                  <button\r\n                    type=\"button\"\r\n                    onClick={() => this.onCloseModalForm()}\r\n                    class=\"btn btn-primary\"\r\n                    className={\r\n                      !company || errorcompany || !dimention || errordimention\r\n                        ? \"btn btn-secondary disabled\"\r\n                        : \"btn btn-primary\"\r\n                    }\r\n                  >\r\n                    {t(\"Confirm\")}\r\n                  </button>\r\n                )}\r\n\r\n                <button\r\n                  type=\"button\"\r\n                  class=\"btn btn-default\"\r\n                  onClick={() => this.onCloseModalFormInsert()}\r\n                >\r\n                  {t(\"cancel\")}\r\n                </button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n            <Modal\r\n              className=\"modal\"\r\n              show={showDelete}\r\n              size=\"sm\"\r\n              onHide={() => this.onCloseDelete()}\r\n            >\r\n              <Modal.Header>\r\n                <Modal.Title>{t(\"Confirm\")}</Modal.Title>\r\n                <Modal.Title>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    onClick={() => this.onCloseDelete()}\r\n                  >\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>{t(\"DoYouReallyWantDeleteData\")}</Modal.Body>\r\n              <Modal.Footer>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-default\"\r\n                  onClick={() => this.onCloseDelete()}\r\n                >\r\n                  {t(\"clase\")}\r\n                </button>\r\n                <button\r\n                  type=\"button\"\r\n                  className=\"btn btn-primary\"\r\n                  onClick={() => this.onClickDelete()}\r\n                >\r\n                  {t(\"Confirm\")}\r\n                </button>\r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n            <Modal\r\n              className=\"modal\"\r\n              show={alertModelPrint}\r\n              size=\"lg\"\r\n              onHide={() => this.onCloseAlertBill()}\r\n            >\r\n              <Modal.Header>\r\n                <Modal.Title>{t(\"Description\")}</Modal.Title>\r\n                <Modal.Title>\r\n                  <button\r\n                    type=\"button\"\r\n                    className=\"close\"\r\n                    onClick={() => this.onCloseAlertBill()}\r\n                  >\r\n                    <span aria-hidden=\"true\">×</span>\r\n                  </button>\r\n                </Modal.Title>\r\n              </Modal.Header>\r\n              <Modal.Body>\r\n                <div className=\"form\" ref={el => (this.componentRef = el)}>\r\n                  <div>\r\n                    <p className=\"text-center\">{t('textHeader')}</p>\r\n                    <p className=\"text-center\">{t('textDetail')}</p>\r\n                    <h4 className=\"text-center\">{t('TransportsInformation')}</h4>\r\n                    <h4 className=\"text-center\">-----------------</h4>\r\n                    {/* <p className=\"text-center\"><Moment format='MMMM Do YYYY, h:mm:ss a'>{new Date()}</Moment></p> */}\r\n                    <p className=\"text-center\">{dataPrint.length > 0 ? dataPrint[0].username : null}</p>\r\n                  </div>\r\n                  <div className=\"row\">\r\n                    <div className=\"col-md-6\">\r\n                      <img\r\n                        src={logo}\r\n                        className=\"img-circle\"\r\n                        style={{ width: 100, height: 50 }}\r\n                      />\r\n                      <p>{t('companyaName')}:{dataPrint.length > 0 ? dataPrint[0].company : null}</p>\r\n                      <p>{t('ContactInfo')}</p>\r\n                      <p>{t('location')}</p>\r\n                      <p className=\"text\">{t('transport_id')}: {dataPrint.length > 0 ? dataPrint[0].transport_id : null}</p>\r\n                      <p className=\"text\">{t('service')}: {dataPrint.length > 0 ? dataPrint[0].service : null}</p>\r\n                      <p className=\"text\">{t('dimention')}: {dataPrint.length > 0 ? dataPrint[0].dimention : null}</p>\r\n                    </div>\r\n\r\n                    <div className=\"col-md-6\">\r\n                      <br />\r\n                      <br />\r\n                      <p className=\"text\">{t('id_documents')}: {dataPrint.length > 0 ? dataPrint[0].id_documents : null}</p>\r\n                      <p className=\"text\">{t('contact')}: {dataPrint.length > 0 ? dataPrint[0].contact : null}</p>\r\n                      <p className=\"text\">{t('address')}: {dataPrint.length > 0 ? dataPrint[0].address : null}</p>\r\n                      <p className=\"text\">{t('supplier_name')}: {dataPrint.length > 0 ? dataPrint[0].supplier_name : null}</p>\r\n                      <p className=\"text\">{t('car_name')}: {dataPrint.length > 0 ? dataPrint[0].car_name : null}</p>\r\n\r\n                    </div>\r\n                  </div>\r\n\r\n\r\n                  <div className=\"row\">\r\n                    <div className=\"col-12 table-responsive\">\r\n                      <div className=\"table-responsive\">\r\n                        <table className=\"table table-hover table-bordered\">\r\n\r\n                          <thead>\r\n                            <tr>\r\n                              <th>{t('oils_id')}</th>\r\n                              <th>{t('Oil')}</th>\r\n                              <th>{t('qty')}</th>\r\n                              <th>{t('Amount')}</th>\r\n                              <th>{t('Total')}</th>\r\n\r\n                            </tr>\r\n                          </thead>\r\n                          <tbody>\r\n                            {dataPrint ?\r\n                              dataPrint.map((item, i) => (\r\n                                <tr>\r\n                                  <td>{item.oils_id}</td>\r\n                                  <td>{item.oil_name}</td>\r\n                                  <td>{formatNumber(item.Qty + \"\")}</td>\r\n                                  <td>{formatNumber(item.Price + \"\")}</td>\r\n                                  <td>{formatNumber(item.Qty * item.Price + \"\")}</td>\r\n                                </tr>\r\n                              )) : null}\r\n                          </tbody>\r\n                        </table>\r\n                      </div>\r\n                      {\r\n                        dataPrint.length > 0 ?\r\n                          <div className=\"row\">\r\n                            <div className=\"col-3\">\r\n                            </div>\r\n                            <div className=\"col-9\">\r\n                              <div className=\"table-responsive\">\r\n                                <table className=\"table\">\r\n                                  <tbody>\r\n                                    <tr>\r\n                                      <th>ລວມຈຳນວນ</th>\r\n                                      <td>{formatNumber(dataPrint.reduce((a, v) => a = a + parseInt(v.Qty), 0) + \"\")}</td>\r\n                                    </tr>\r\n                                    <tr>\r\n                                      <th>{t('Total')}</th>\r\n                                      <td>{formatNumber(dataPrint.reduce((a, v) => a = a + v.Qty * v.Price, 0) + \"\")}</td>\r\n                                    </tr>\r\n                                  </tbody></table>\r\n                              </div>\r\n                            </div>\r\n                          </div> : null\r\n                      }\r\n                    </div>\r\n                  </div>\r\n\r\n                </div>\r\n              </Modal.Body>\r\n              <Modal.Footer>\r\n                <ReactToPrint\r\n                  trigger={() => <button type=\"submit\" className=\"btn btn-success btn-xs\">\r\n                    <i class=\"fas fa-print\"></i>{t(\"print\")}\r\n                  </button>}\r\n                  content={() => this.componentRef}\r\n                />\r\n\r\n              </Modal.Footer>\r\n            </Modal>\r\n\r\n\r\n          </section>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\nconst mapStateToProps = (state) => {\r\n  return {\r\n    dataResultTransports: state.transportsReducer.dataResultTransports,\r\n    actionType: state.transportsReducer.actionType,\r\n    responseCode: state.transportsReducer.responseCode,\r\n    message: state.transportsReducer.message,\r\n    dataResultTransportsNew: state.transportsReducer.dataResultTransportsNew,\r\n    dataResultTransportsDelete:\r\n      state.transportsReducer.dataResultTransportsDelete,\r\n    dataResultTransportsUpdate:\r\n      state.transportsReducer.dataResultTransportsUpdate,\r\n    userInfo: state.loginReduce.userInfo,\r\n\r\n    dataResultSupplier: state.supplierReducer.dataResultSupplier,\r\n    actionTypeSupplier: state.supplierReducer.actionType,\r\n\r\n    dataResultCar: state.carReducer.dataResultCar,\r\n    actionTypeCar: state.carReducer.actionType,\r\n\r\n    dataResultOil: state.oilReducer.dataResultOil,\r\n    actionTypeOil: state.oilReducer.actionType,\r\n\r\n    dataResultOrder: state.orderReducer.dataResultOrder,\r\n    actionTypeOrder: state.orderReducer.actionType,\r\n\r\n    dataResultDocument: state.documentReducer.dataResultDocument,\r\n    actionTypeDocument: state.documentReducer.actionType,\r\n\r\n    dataResultGetSell: state.sellReducer.dataResultGetSell,\r\n    actionTypeGetSell: state.sellReducer.actionType,\r\n\r\n    dataResultTransportsById: state.transportsReducer.dataResultTransportsById,\r\n    actionTypeGetTransport: state.transportsReducer.actionType,\r\n\r\n  };\r\n};\r\n\r\nconst mapDispatchToProps = (dispatch) => {\r\n  return {\r\n    requestGetAllTransports: (data) => dispatch(requestGetAllTransports(data)),\r\n    requestGetAllSupplier: (data) => dispatch(requestGetAllSupplier(data)),\r\n    requestGetAllCar: (data) => dispatch(requestGetAllCar(data)),\r\n    requestGetAllOil: (data) => dispatch(requestGetAllOil(data)),\r\n    requestGetAllOrder: (data) => dispatch(requestGetAllOrder(data)),\r\n    requestGetAllDocument: (data) => dispatch(requestGetAllDocument(data)),\r\n    requestDeleteTransports: (data, token) =>\r\n      dispatch(requestDeleteTransports(data, token)),\r\n    requestInsertTransports: (data, token) =>\r\n      dispatch(requestInsertTransports(data, token)),\r\n    requestUpdateTransports: (data, token) =>\r\n      dispatch(requestUpdateTransports(data, token)),\r\n    requestGetAllSell: (data) => dispatch(requestGetAllSell(data)),\r\n    requestGetByIdTransports: (data, token) => dispatch(requestGetByIdTransports(data, token)),\r\n\r\n  };\r\n};\r\nexport default connect(\r\n  mapStateToProps,\r\n  mapDispatchToProps\r\n)(withTranslation()(componentName));\r\n","import {\r\n    GET_ALL_TRANSPORTS,\r\n    DELETE_BY_ID_TRANSPORTS,\r\n    INSRT_NEW_TRANSPORTS,\r\n    UPDATE_TRANSPORTS,\r\n    GET_ALL_TRANSPORTS_BY_ID\r\n  } from \"../utils/commonType\";\r\n  \r\n  export const requestGetAllTransports = (data) => {\r\n    return {\r\n      type: GET_ALL_TRANSPORTS,\r\n      data,\r\n    };\r\n  };\r\n  export const requestDeleteTransports = (data, token) => {\r\n    return {\r\n      type: DELETE_BY_ID_TRANSPORTS,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  \r\n  export const requestInsertTransports = (data, token) => {\r\n    return {\r\n      type: INSRT_NEW_TRANSPORTS,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  export const requestUpdateTransports = (data, token) => {\r\n    return {\r\n      type: UPDATE_TRANSPORTS,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n\r\n  export const requestGetByIdTransports = (data, token) => {\r\n    return {\r\n      type: GET_ALL_TRANSPORTS_BY_ID,\r\n      data,\r\n      token,\r\n    };\r\n  };\r\n  ","\nimport React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { withTranslation } from \"react-i18next\";\nimport { LoadingComponet } from \"../../components\";\nimport {\n    requestGetAllOil,\n    requestGetAllOilByIdSupplier\n} from \"../../actions/oilAction\";\nimport {\n    requestGetAllCustomers\n} from \"../../actions/customerAction\";\nimport {\n    requestGetAllSupplier\n} from \"../../actions/supplierAction\";\nimport { requestInsertOrder, requestMaxIdSell, requestInsertSellDetail, requestGetPrintSell } from \"../../actions/sellAction\"\nimport { bodyInsertSell, bodyInsertSellDetail } from '../../api/bodyReq'\nimport Cookie from \"js-cookie\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport {\n    GET_ALL_OIL_FAILED,\n    GET_ALL_OIL_SUCCESS,\n    GET_ALL_SUPPLIER_FAILED,\n    GET_ALL_SUPPLIER_SUCCESS,\n    GET_ALL_OIL_BY_ID_SUPPLIER_SUCCESS,\n    GET_ALL_OIL_BY_ID_SUPPLIER_FAILED,\n    GET_ALL_CUSTOMERS_FAILED,\n    GET_ALL_CUSTOMERS_SUCCESS,\n    INSRT_NEW_SELL_FAILED,\n    INSRT_NEW_SELL_SUCCESS,\n\n    GET_MAX_ID_SELL_SUCCESS,\n    GET_MAX_ID_SELL_FAILED,\n\n    INSRT_NEW_SELL_DETAIL_SUCCESS,\n    INSRT_NEW_SELL_DETAIL_FAILED,\n\n    GET_PRINT_SELL_SUCCESS,\n    GET_PRINT_SELL_FAILED\n\n} from \"../../utils/commonType\";\nimport { Modal, Form } from \"react-bootstrap\";\nimport { formatNumber } from '../../utils/Formater'\nimport Moment from 'react-moment';\nimport logo from '../../img/11_PTT.png';\nimport ReactToPrint from \"react-to-print\";\n\nconst MySwal = withReactContent(Swal);\nclass SellSrceen extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            showQty: false,\n            listDataBuy: [],\n            modelInsert: false,\n            dataPrint: [],\n            alertModelPrint: false\n        };\n    }\n    componentDidMount() {\n        const userInfo = Cookie.getJSON(\"userInfo\") || null;\n        let token = userInfo ? userInfo.token : null;\n        let user_id = userInfo.auth[0].user_id;\n        this.loadData(token);\n        this.setState({ token, user_id });\n    }\n    loadData = (token) => {\n        this.setState({ onGetInfo: true, loading: true });\n        this.props.requestGetAllOil(token);\n    }\n    componentWillReceiveProps(nextProps) {\n        const { t } = this.props;\n        const { onGetInfo, showQty, isCallGetAllDataSupplier, onGetInfoByIdSupplier, onGetInfoCustomer, onInsertSell,\n            token, onGetMaxSell, cus_id, user_id, listDataBuy, onInsertSellDetail, status, onPrintSellDetail } = this.state;\n        let listData = [];\n        if (onGetInfo) {\n            if (nextProps.dataResultOil) {\n                switch (nextProps.actionType) {\n                    case GET_ALL_OIL_SUCCESS:\n                        switch (nextProps.responseCode) {\n                            case \"00000\":\n                                let data = nextProps.dataResultOil;\n                                this.setState({ onGetInfo: false, loading: false, data });\n                                break;\n                            case nextProps.responseCode:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onGetInfo: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case GET_ALL_OIL_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onGetInfo: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n        if (isCallGetAllDataSupplier) {\n            console.log(\"dataResultSupplier:\", nextProps.dataResultSupplier);\n            console.log(\"actionTypeSupplier:\", nextProps.actionTypeSupplier);\n            if (nextProps.dataResultSupplier) {\n                switch (nextProps.actionTypeSupplier) {\n                    case GET_ALL_SUPPLIER_SUCCESS:\n                        this.setState({\n                            isCallGetAllDataSupplier: false,\n                            dataComboSupplier: nextProps.dataResultSupplier,\n                        });\n                        break;\n                    case GET_ALL_SUPPLIER_FAILED:\n                        this.setState({\n                            isCallGetAllDataSupplier: false,\n                            dataComboSupplier: null,\n                        });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n        if (onGetInfoByIdSupplier) {\n            if (nextProps.dataResultOilByIdSupplier) {\n                switch (nextProps.actionType) {\n                    case GET_ALL_OIL_BY_ID_SUPPLIER_SUCCESS:\n                        switch (nextProps.responseCode) {\n                            case \"00000\":\n                                let data = nextProps.dataResultOilByIdSupplier;\n                                this.setState({ onGetInfoByIdSupplier: false, loading: false, data });\n                                break;\n                            case nextProps.responseCode:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onGetInfoByIdSupplier: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case GET_ALL_OIL_BY_ID_SUPPLIER_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onGetInfoByIdSupplier: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n        if (onGetInfoCustomer) {\n            if (nextProps.dataResultCustomers) {\n                switch (nextProps.actionTypeCustomers) {\n                    case GET_ALL_CUSTOMERS_SUCCESS:\n                        switch (nextProps.responseCode) {\n                            case \"00000\":\n                                let dataCustomer = nextProps.dataResultCustomers;\n                                console.log('dataCustomer:', dataCustomer)\n                                this.setState({ onGetInfoCustomer: false, loading: false, dataCustomer });\n                                break;\n                            case nextProps.responseCode:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onGetInfoCustomer: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case GET_ALL_CUSTOMERS_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onGetInfoCustomer: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n        if (onInsertSell) {\n            if (nextProps.dataResultSellNew) {\n                switch (nextProps.actionTypeSellNew) {\n                    case INSRT_NEW_SELL_SUCCESS:\n                        switch (nextProps.responseCode) {\n                            case \"00000\":\n                                this.props.requestMaxIdSell(token)\n                                this.setState({ onInsertSell: false, onGetMaxSell: true, status: 'INSERT' });\n                                break;\n                            case nextProps.responseCode:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onInsertSell: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case INSRT_NEW_SELL_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onInsertSell: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n        if (onGetMaxSell) {\n            if (nextProps.dataResultMaxIdSell) {\n                switch (nextProps.actionTypeMaxIdSell) {\n                    case GET_MAX_ID_SELL_SUCCESS:\n                        switch (nextProps.responseCode) {\n                            case \"00000\":\n\n                                let maxId = nextProps.dataResultMaxIdSell.saleId\n                                if (status === 'INSERT') {\n                                    for (let i = 0; i < listDataBuy.length; i++) {\n                                        listData.push({\n                                            \"sales_id\": maxId,\n                                            \"Qty\": listDataBuy[i].qty_cus,\n                                            \"Price\": listDataBuy[i].price,\n                                            \"oil_id\": listDataBuy[i].oils_id,\n                                            \"total\": listDataBuy[i].total,\n                                            \"cus_id\": cus_id,\n                                            \"user_id\": user_id\n                                        })\n                                    }\n                                    let data = bodyInsertSellDetail(listData)\n                                    this.props.requestInsertSellDetail(data, token)\n                                    this.setState({ onGetMaxSell: false, onInsertSellDetail: true });\n                                } else if (status === 'PRINT') {\n                                    console.log('----ok-PRINT----')\n                                    this.props.requestGetPrintSell(maxId, token);\n                                    this.setState({ onGetMaxSell: false, onPrintSellDetail: true });\n                                }\n\n\n                                break;\n                            case nextProps.responseCode:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onGetMaxSell: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case GET_MAX_ID_SELL_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onGetMaxSell: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n        if (onInsertSellDetail) {\n            if (nextProps.dataResultSellDetailNew) {\n                switch (nextProps.actionTypeSellDetailNew) {\n                    case INSRT_NEW_SELL_DETAIL_SUCCESS:\n                        switch (nextProps.responseCode) {\n                            case \"00000\":\n                                MySwal.fire({\n                                    icon: \"success\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                }).then((result) => {\n                                    if (result.isConfirmed) {\n                                        this.onPrintBill(token);\n                                        this.loadData(token);\n                                    }\n                                });\n                                this.setState({ onInsertSellDetail: false, loading: false });\n                                break;\n                            case nextProps.responseCode:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onInsertSellDetail: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case INSRT_NEW_SELL_DETAIL_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onInsertSellDetail: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n        if (onPrintSellDetail) {\n            if (nextProps.dataResultGetPrintSell) {\n                switch (nextProps.actionTypeGetPrintSell) {\n                    case GET_PRINT_SELL_SUCCESS:\n                        switch (nextProps.responseCode) {\n                            case \"00000\":\n                                let datar = nextProps.dataResultGetPrintSell\n                                console.log('------dddd-----', datar)\n                                this.setState({ onPrintSellDetail: false, loading: false, alertModelPrint: true, dataPrint: datar });\n                                break;\n                            case nextProps.responseCode:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onPrintSellDetail: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case GET_PRINT_SELL_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onPrintSellDetail: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n\n    }\n    onPrintBill = (token) => {\n        this.props.requestMaxIdSell(token)\n        this.setState({ onGetMaxSell: true, status: 'PRINT' });\n    }\n    onClose = () => {\n        this.setState({ showQty: false });\n    };\n    onCloseInsert = () => {\n        this.setState({ modelInsert: false });\n    }\n    onConfrimInsert = () => {\n        try {\n            const { cus_id, listDataBuy, user_id, token } = this.state\n            if (listDataBuy.length > 0 && cus_id && user_id && token) {\n                let b = formatNumber(listDataBuy.reduce((a, v) => a = a + parseInt(v.qty_cus), 0) + \"\");\n                let a = formatNumber(listDataBuy.reduce((a, v) => a = a + v.total, 0) + \"\");\n                let total = parseInt(a.replace(/,/g, \"\"));\n                let qty = parseInt(b.replace(/,/g, \"\"))\n\n                let status_sell = 1\n                let sales_id = null\n                let data = bodyInsertSell(sales_id, qty, total, status_sell, cus_id, user_id);\n                this.props.requestInsertOrder(data, token)\n                this.setState({ loading: true, onInsertSell: true, cus_id, user_id, listDataBuy, modelInsert: false });\n            }\n        } catch (error) {\n            console.log('error:', error)\n        }\n    }\n    onConfrim = () => {\n        const { t } = this.props;\n        const { qty, item } = this.state\n        if (qty && qty > 0) {\n            this.setState({showQty: false})\n            let qtyOil = item.qty\n            if (qtyOil >= qty) {\n\n                let arrayItem = [...this.state.listDataBuy, {\n                    'id_bil': this.state.listDataBuy.length + 1,\n                    'oils_id': item.oils_id,\n                    'oil_name': item.oil_name,\n                    'qty_cus': qty,\n                    'price': item.price,\n                    'total': parseInt(item.price) * parseInt(qty)\n\n                }]\n                if (arrayItem.length == 1) {\n                    this.setState({\n                        listDataBuy: [...this.state.listDataBuy, {\n                            'id_bil': this.state.listDataBuy.length + 1,\n                            'oils_id': item.oils_id,\n                            'oil_name': item.oil_name,\n                            'qty_cus': qty,\n                            'price': item.price,\n                            'total': parseInt(item.price) * parseInt(qty)\n                        }]\n                    })\n                } else {\n                    let newData = this.state.listDataBuy.map(value => {\n                        if (value.oils_id === item.oils_id) {\n                            var qty_cus = parseInt(value.qty_cus) + parseInt(qty)\n                            var strOldAmount = value.price\n                            let sumTotal = parseInt(strOldAmount) * parseInt(qty_cus)\n                            value.qty_cus = parseInt(qty_cus)\n                            value.total = parseInt(sumTotal)\n                            return value;\n\n                        }\n                        return value;\n                    });\n                    let itm = this.state.listDataBuy.filter(data => data.oils_id === item.oils_id)\n                    if (itm.length > 0) {\n                        this.setState({ listDataBuy: newData })\n                    } else {\n                        this.setState({\n                            listDataBuy: [...this.state.listDataBuy, {\n                                'id_bil': this.state.listDataBuy.length + 1,\n                                'oils_id': item.oils_id,\n                                'oil_name': item.oil_name,\n                                'qty_cus': qty,\n                                'price': item.price,\n                                'total': parseInt(item.price) * parseInt(qty)\n                            }]\n                        })\n                    }\n                }\n                if (this.state.listDataBuy.length >= 0) {\n                    this.setState({ isDataBuy: true, oils_id: null, qty_cus: null, oil_name: null })\n                }\n\n            } else {\n                MySwal.fire({\n                    icon: \"error\",\n                    title: t(\"info\"),\n                    text: 'ຈຳນວນທີ່ຊື້ຄວນນ້ອຍກວ່າຫລືເທົ່າກັບຈຳນວນນໍ້າມັນທີ່ມີຢູ່',\n                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                });\n            }\n        } else {\n            MySwal.fire({\n                icon: \"error\",\n                title: t(\"info\"),\n                text: 'ກະລຸນາປ້ອນຈຳນວນທີ່ຕ້ອງການຊື້',\n                footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n            });\n        }\n    }\n    onAddCart = (item) => {\n        console.log('item:', item)\n        this.setState({ showQty: true, item })\n    }\n    onChangeTextqty = (text) => {\n        const value = text.target.value;\n        const errorqty =\n            !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\n        this.setState({\n            qty: value,\n            errorqty\n        });\n    }\n\n    onSelectCustomer = (text) => {\n        const value = text.target.value;\n        this.setState({\n            cus_id: value\n        });\n    };\n\n    onDeleteOrder = (text) => {\n        MySwal.fire({\n            title: 'Do you want to save the changes?',\n            confirmButtonText: 'Yes',\n            showDenyButton: true,\n            customClass: {\n                actions: 'my-actions',\n                cancelButton: 'order-1 right-gap',\n                confirmButton: 'order-2',\n            }\n        }).then((result) => {\n            if (result.isConfirmed) {\n                this.onConfrimDelete(text)\n            }\n        })\n    }\n    onConfrimDelete = (text) => {\n        const item = this.state.listDataBuy.filter(item => item.oils_id !== text)\n        let Array = [];\n        if (item != null) {\n            let i = 0;\n            item.forEach((value) => {\n                i++\n                Array.push({\n                    'id_bil': i,\n                    'oils_id': value.oils_id,\n                    'oil_name': value.oil_name,\n                    'qty_cus': value.qty_cus,\n                    'price': value.price,\n                    'total': value.price\n                })\n            })\n            if (Array.length == 0) { this.setState({ isDataBuy: false }) }\n            MySwal.fire('ລົບສຳເລັດ!', '', 'success')\n            this.setState({\n                listDataBuy: Array\n            })\n        }\n    }\n    onDeleteAll = () => {\n        let Array = [];\n        this.setState({\n            listDataBuy: Array\n        })\n    }\n    onSell = (listDataBuy) => {\n        const { t } = this.props;\n        if (listDataBuy.length > 0) {\n            this.callGetCustomerInfo()\n            let count = listDataBuy.reduce((a, v) => a = a + parseInt(v.qty_cus), 0)\n            let totalAmont = listDataBuy.reduce((a, v) => a = a + v.total, 0)\n            this.setState({ listDataBuy, count, totalAmont, modelInsert: true })\n\n        } else {\n            MySwal.fire({\n                icon: \"error\",\n                title: t(\"info\"),\n                text: 'ກະລຸນາປ້ອນຈຳນວນທີ່ຕ້ອງການຊື້',\n                footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n            });\n        }\n    }\n    onSearch = (item) => {\n        // const { token } = this.state\n        // let id_sup = item.supplier_id\n        // let nameSup = item.supplier_name\n        // this.onDeleteAll()\n        // this.setState({ loading: true, onGetInfoByIdSupplier: true, id_sup, nameSup });\n        // this.props.requestGetAllOilByIdSupplier(id_sup, token);\n    }\n    callGetCustomerInfo() {\n        const { token } = this.state\n        this.setState({ loading: true, onGetInfoCustomer: true });\n        this.props.requestGetAllCustomers(token);\n    }\n    onClickBill = () => {\n        this.setState({ alertModelPrint: false })\n    }\n    onCloseAlertBill = () => {\n        this.setState({ alertModelPrint: false })\n    }\n    render() {\n        const { t } = this.props;\n        const { loading, data, showQty, qty, errorqty, listDataBuy, isDataBuy,\n            modelInsert, dataComboSupplier, id_sup, nameSup, dataCustomer, cus_id, alertModelPrint, dataPrint } = this.state\n\n        return (\n            <div>\n                {loading ? <LoadingComponet /> : null}\n                <div className=\"content-wrapper\">\n                    <section className=\"content-header\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row mb-2\">\n                                <div className=\"col-sm-6\">\n                                    <h3>{t('sell')}</h3>\n                                </div>\n                                <div className=\"col-sm-6\">\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n\n                            <div className=\"row\">\n                                <div className=\"col-8\">\n                                    <div className=\"card card-solid\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">ລາຍການ</h3>\n                                        </div>\n                                        <div className=\"card-body pb-0\">\n                                            <div className=\"row\">\n                                                {\n                                                    data ? data.map((item, i) => (\n                                                        <div className=\"col-12 col-sm-6 col-md-3 d-flex align-items-stretch flex-column\">\n                                                            <div className=\"card d-flex flex-fill\">\n                                                                <div className=\"card-header text-center border-bottom-0\" />\n                                                                <div className=\"card-body pt-0\">\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-12 text-center\">\n\n                                                                        </div>\n                                                                    </div>\n                                                                </div>\n                                                                <div className=\"card-header text-center border-bottom-0\">\n                                                                    <h6>{item.oil_name}</h6>\n                                                                    <h6 className=\"text-danger\">{formatNumber(item.price + \"\")}</h6>\n                                                                    <a href=\"#\" className=\"btn btn-xs bg-teal\">\n                                                                        {formatNumber(item.qty + \"\")} / ລິດ </a>\n                                                                </div>\n                                                                <div className=\"card-footer\">\n                                                                    <div className=\"text-center\">\n                                                                        {item.qty > 0 ?\n                                                                            <button onClick={() => this.onAddCart(item)} className=\"btn btn-success btn-sm btn-flat\"><i className=\"fas fa-cart-plus fa-lg mr-2\" /> ເພີ່ມ</button>\n                                                                            : <h6 className=\"text-danger\">ສິນຄ້າຫມົດແລ້ວ</h6>}\n                                                                    </div>\n                                                                </div>\n                                                            </div>\n                                                        </div>\n                                                    )) : null\n                                                }\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-4\">\n                                    <div className=\"card\">\n                                        <div className=\"card-header\">\n                                            <h3 className=\"card-title\">{t('OrderList')}</h3>\n                                            <div className=\"card-tools\">\n                                                <div className=\"input-group input-group-sm\" style={{ width: 150 }}>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        <div className=\"card-body\">\n                                            <div className=\"row\">\n                                                <div className=\"col-12 table-responsive\">\n                                                    <div className=\"table-responsive\">\n                                                        <table className=\"table table-striped\">\n                                                            <thead>\n                                                                <tr>\n                                                                    <th>{t('Oil')}</th>\n                                                                    <th>{t('qty')}</th>\n                                                                    <th>{t('Amount')}</th>\n                                                                    <th>{t('Total')}</th>\n                                                                    <th>#</th>\n                                                                </tr>\n                                                            </thead>\n                                                            <tbody>\n                                                                {isDataBuy ?\n                                                                    listDataBuy.map((item, i) => (\n                                                                        <tr>\n                                                                            <td>{item.oil_name}</td>\n                                                                            <td>{formatNumber(item.qty_cus + \"\")}</td>\n                                                                            <td>{formatNumber(item.price + \"\")}</td>\n                                                                            <td>{formatNumber(item.total + \"\")}</td>\n                                                                            <td><button onClick={() => this.onDeleteOrder(item.oils_id)} className=\"badge bg-danger\">X</button></td>\n\n                                                                        </tr>\n                                                                    )) : null}\n                                                            </tbody>\n                                                        </table>\n                                                    </div>\n                                                    {\n                                                        listDataBuy.length > 0 ?\n                                                            <div className=\"row\">\n                                                                <div className=\"col-3\">\n                                                                </div>\n                                                                <div className=\"col-9\">\n                                                                    <div className=\"table-responsive\">\n                                                                        <table className=\"table\">\n                                                                            <tbody>\n                                                                                <tr>\n                                                                                    <th>ລວມຈຳນວນ</th>\n                                                                                    <td>{formatNumber(listDataBuy.reduce((a, v) => a = a + parseInt(v.qty_cus), 0) + \"\")}</td>\n                                                                                </tr>\n                                                                                <tr>\n                                                                                    <th>{t('Total')}</th>\n                                                                                    <td>{formatNumber(listDataBuy.reduce((a, v) => a = a + v.total, 0) + \"\")}</td>\n                                                                                </tr>\n                                                                            </tbody></table>\n                                                                    </div>\n\n                                                                </div>\n                                                                <div className=\"col-6\">\n                                                                </div>\n                                                                <div className=\"col-6\">\n                                                                    <div className=\"table-responsive\">\n                                                                        <table className=\"table\">\n                                                                            <tbody>\n                                                                                <tr>\n                                                                                    <td>\n                                                                                        <button className=\"btn btn-success btn-xs\" onClick={() => this.onSell(listDataBuy)}><i className=\"fas fa-cart-plus\" /> ຢືນຢັນການຂາຍ</button>\n                                                                                    </td>\n                                                                                </tr>\n                                                                            </tbody></table>\n                                                                    </div>\n\n                                                                </div>\n                                                            </div> : null\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n\n                        </div>\n\n\n                        <Modal\n                            className=\"modal\"\n                            show={showQty}\n                            size=\"sm\"\n                            onHide={() => this.onClose()}\n                        >\n                            <Modal.Header>\n                                <Modal.Title>{t(\"Confirm\")}</Modal.Title>\n                                <Modal.Title>\n                                    <button\n                                        type=\"button\"\n                                        className=\"close\"\n                                        onClick={() => this.onClose()}\n                                    >\n                                        <span aria-hidden=\"true\">×</span>\n                                    </button>\n                                </Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <div className=\"form-row\">\n                                    <div className=\"col-md-12\">\n                                        <div class=\"form-group\">\n                                            <label>ກະລຸນາປ້ອນຈຳນວນທີ່ຕ້ອງການຊື້ / ລິດ</label>\n                                            <input\n                                                name=\"qty\"\n                                                value={qty}\n                                                type=\"number\"\n                                                className={\n                                                    errorqty === undefined\n                                                        ? \"form-control\"\n                                                        : errorqty\n                                                            ? \"form-control is-invalid\"\n                                                            : \"form-control is-valid\"\n                                                }\n                                                placeholder={t(\"qty\")}\n                                                onChange={(text) => this.onChangeTextqty(text)}\n                                            />\n                                            {errorqty ? (\n                                                <p class=\"text-danger\">{errorqty}</p>\n                                            ) : null}\n                                        </div>\n                                    </div>\n                                </div>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-default\"\n                                    onClick={() => this.onClose()}\n                                >\n                                    {t(\"clase\")}\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-primary\"\n                                    onClick={() => this.onConfrim()}\n                                    className={\n                                        !qty || errorqty\n                                            ? \"btn btn-secondary disabled\"\n                                            : \"btn btn-primary\"\n                                    }\n                                >\n                                    ຢືນຢັນ\n                                </button>\n                            </Modal.Footer>\n                        </Modal>\n\n\n                        <Modal\n                            className=\"modal\"\n                            show={modelInsert}\n                            size=\"sm\"\n                            onHide={() => this.onCloseInsert()}\n                        >\n                            <Modal.Header>\n                                <Modal.Title>{t(\"Confirm\")}</Modal.Title>\n                                <Modal.Title>\n                                    <button\n                                        type=\"button\"\n                                        className=\"close\"\n                                        onClick={() => this.onCloseInsert()}\n                                    >\n                                        <span aria-hidden=\"true\">×</span>\n                                    </button>\n                                </Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <div className=\"form-row\">\n                                    <div className=\"col-md-12\">\n                                        <div class=\"form-group\">\n                                            <label>{t(\"car_id\")}</label>\n                                            <Form.Control\n                                                as=\"select\"\n                                                onChange={(text) => this.onSelectCustomer(text)}\n                                            >\n                                                <option></option>\n                                                {dataCustomer\n                                                    ? dataCustomer.map((item, i) => (\n                                                        item.status == 1 ? <option value={item.cus_id}>\n                                                            {item.cus_id} - {item.cus_name}\n                                                        </option> : null\n\n                                                    ))\n                                                    : null}\n                                            </Form.Control>\n                                        </div>\n                                    </div>\n                                </div>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-default\"\n                                    onClick={() => this.onCloseInsert()}\n                                >\n                                    {t(\"clase\")}\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-primary\"\n                                    onClick={() => this.onConfrimInsert()}\n                                    className={\n                                        !cus_id\n                                            ? \"btn btn-secondary disabled\"\n                                            : \"btn btn-primary\"\n                                    }\n                                >\n                                    {t(\"Confirm\")}\n                                </button>\n                            </Modal.Footer>\n                        </Modal>\n\n\n                        <Modal\n                            className=\"modal\"\n                            show={alertModelPrint}\n                            size=\"lg\"\n                            onHide={() => this.onCloseAlertBill()}\n                        >\n                            <Modal.Header>\n                                <Modal.Title>{t(\"Description\")}</Modal.Title>\n                                <Modal.Title>\n                                    <button\n                                        type=\"button\"\n                                        className=\"close\"\n                                        onClick={() => this.onCloseAlertBill()}\n                                    >\n                                        <span aria-hidden=\"true\">×</span>\n                                    </button>\n                                </Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <div className=\"form\" ref={el => (this.componentRef = el)}>\n                                    <div>\n                                        <p className=\"text-center\">{t('textHeader')}</p>\n                                        <p className=\"text-center\">{t('textDetail')}</p>\n                                        <h4 className=\"text-center\">{t('Bill')}</h4>\n                                        <h4 className=\"text-center\">-----------------</h4>\n                                        <p className=\"text-center\"><Moment format='MMMM Do YYYY, h:mm:ss a'>{new Date()}</Moment></p>\n                                        <p className=\"text-center\">{dataPrint.length > 0 ? dataPrint[0].username : null}</p>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6\">\n                                            <img\n                                                src={logo}\n                                                className=\"img-circle\"\n                                                style={{ width: 100, height: 50 }}\n                                            />\n                                            <p>{t('companyaName')}</p>\n                                            <p>{t('ContactInfo')}</p>\n                                            <p>{t('location')}</p>\n                                        </div>\n                                       \n                                        <div className=\"col-md-6\">\n                                            <br />\n                                            <br />\n                                            <p className=\"text\">{t('cus_name')}: { dataPrint.length > 0 ?  dataPrint[0].cus_name: null}</p>\n                                            <p className=\"text\">{t('address')}: {dataPrint.length > 0 ?  dataPrint[0].address:  null}</p>\n                                            <p className=\"text\">{t('phone')}: {dataPrint.length > 0 ?  dataPrint[0].phone: null}</p>\n                                        </div>\n                                    </div>\n\n\n                                    <div className=\"row\">\n                                        <div className=\"col-12 table-responsive\">\n                                            <div className=\"table-responsive\">\n                                                <table className=\"table table-hover table-bordered\">\n\n                                                    <thead>\n                                                        <tr>\n                                                            <th>{t('Oil')}</th>\n                                                            <th>{t('qty')}</th>\n                                                            <th>{t('Amount')}</th>\n                                                            <th>{t('Total')}</th>\n\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {dataPrint ?\n                                                            dataPrint.map((item, i) => (\n                                                                <tr>\n                                                                    <td>{item.oil_name}</td>\n                                                                    <td>{formatNumber(item.Qty + \"\")}</td>\n                                                                    <td>{formatNumber(item.Price + \"\")}</td>\n                                                                    <td>{formatNumber(item.Qty * item.Price + \"\")}</td>\n                                                                </tr>\n                                                            )) : null}\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                            {\n                                                dataPrint.length > 0 ?\n                                                    <div className=\"row\">\n                                                        <div className=\"col-3\">\n                                                        </div>\n                                                        <div className=\"col-9\">\n                                                            <div className=\"table-responsive\">\n                                                                <table className=\"table\">\n                                                                    <tbody>\n                                                                        <tr>\n                                                                            <th>ລວມຈຳນວນ</th>\n                                                                            <td>{formatNumber(dataPrint.reduce((a, v) => a = a + parseInt(v.Qty), 0) + \"\")}</td>\n                                                                        </tr>\n                                                                        <tr>\n                                                                            <th>{t('Total')}</th>\n                                                                            <td>{formatNumber(dataPrint.reduce((a, v) => a = a + v.Qty * v.Price, 0) + \"\")}</td>\n                                                                        </tr>\n                                                                    </tbody></table>\n                                                            </div>\n                                                        </div>\n                                                    </div> : null\n                                            }\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <ReactToPrint\n                                    trigger={() => <button type=\"submit\" className=\"btn btn-success btn-xs\">\n                                        <i className=\"fas fa-sync-alt\" />{t(\"print\")}\n                                    </button>}\n                                    content={() => this.componentRef}\n                                />\n\n                            </Modal.Footer>\n                        </Modal>\n\n\n\n                    </section>\n                </div>\n            </div>\n\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        dataResultOil: state.oilReducer.dataResultOil,\n        actionType: state.oilReducer.actionType,\n        responseCode: state.oilReducer.responseCode,\n        message: state.oilReducer.message,\n        dataResultSupplier: state.supplierReducer.dataResultSupplier,\n        actionTypeSupplier: state.supplierReducer.actionType,\n        dataResultOilByIdSupplier: state.oilReducer.dataResultOilByIdSupplier,\n        dataResultCustomers: state.customerReducer.dataResultCustomers,\n        actionTypeCustomers: state.customerReducer.actionType,\n\n        dataResultSellNew: state.sellReducer.dataResultSellNew,\n        actionTypeSellNew: state.sellReducer.actionType,\n\n        dataResultMaxIdSell: state.sellReducer.dataResultMaxIdSell,\n        actionTypeMaxIdSell: state.sellReducer.actionType,\n\n        dataResultSellDetailNew: state.sellReducer.dataResultSellDetailNew,\n        actionTypeSellDetailNew: state.sellReducer.actionType,\n\n        dataResultGetPrintSell: state.sellReducer.dataResultGetPrintSell,\n        actionTypeGetPrintSell: state.sellReducer.actionType,\n\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        requestGetAllCustomers: (data) => dispatch(requestGetAllCustomers(data)),\n        requestGetAllOil: (data) => dispatch(requestGetAllOil(data)),\n        requestMaxIdSell: (data) => dispatch(requestMaxIdSell(data)),\n        requestInsertSellDetail: (data, token) => dispatch(requestInsertSellDetail(data, token)),\n        requestGetPrintSell: (data, token) => dispatch(requestGetPrintSell(data, token)),\n        requestInsertOrder: (data, token) => dispatch(requestInsertOrder(data, token)),\n        requestGetAllOilByIdSupplier: (data, token) => dispatch(requestGetAllOilByIdSupplier(data, token)),\n        requestGetAllSupplier: (data) => dispatch(requestGetAllSupplier(data)),\n\n    };\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(SellSrceen));","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { withTranslation } from \"react-i18next\";\nimport { LoadingComponet } from \"../../components\";\nimport {\n    requestGetAllOil,\n    requestGetAllOilByIdSupplier\n} from \"../../actions/oilAction\";\nimport {\n    requestGetAllSupplier\n} from \"../../actions/supplierAction\";\nimport Cookie from \"js-cookie\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport {\n    GET_ALL_OIL_FAILED,\n    GET_ALL_OIL_SUCCESS,\n    GET_ALL_SUPPLIER_FAILED,\n    GET_ALL_SUPPLIER_SUCCESS,\n    GET_ALL_OIL_BY_ID_SUPPLIER_SUCCESS,\n    GET_ALL_OIL_BY_ID_SUPPLIER_FAILED,\n\n    INSRT_NEW_ORDER_FAILED,\n    INSRT_NEW_ORDER_SUCCESS,\n\n    GET_MAX_ID_ORDER_SUCCESS,\n    GET_MAX_ID_ORDER_FAILED,\n\n    INSRT_NEW_ORDER_DETAIL_SUCCESS,\n    INSRT_NEW_ORDER_DETAIL_FAILED,\n\n    GET_PRINT_ORDER_FAILED,\n    GET_PRINT_ORDER_SUCCESS\n\n} from \"../../utils/commonType\";\nimport { Modal } from \"react-bootstrap\";\nimport { formatNumber } from '../../utils/Formater'\nimport { bodyInsertOrder, bodyInsertOrderDetail } from '../../api/bodyReq'\nimport { requestInsertOrderDetail, requestInsertOrder, requestGetMaxIdOrder, requestGetPrintOrder } from '../../actions/order'\nimport Moment from 'react-moment';\nimport * as moment from 'moment'\nimport logo from '../../img/11_PTT.png';\nimport ReactToPrint from \"react-to-print\";\n\nconst MySwal = withReactContent(Swal);\nlet totalAmount = 0;\nclass SellSrceen extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            showQty: false,\n            listDataBuy: [],\n            modelInsert: false,\n            alertModelPrint: false,\n            dataPrint: []\n        };\n    }\n    componentDidMount() {\n        const userInfo = Cookie.getJSON(\"userInfo\") || null;\n        let token = userInfo ? userInfo.token : null;\n        let user_id = userInfo.auth[0].user_id;\n        this.loader(token);\n        this.setState({ token, user_id });\n\n    }\n    loader(token) {\n        this.setState({ isCallGetAllDataSupplier: true });\n        this.props.requestGetAllSupplier(token);\n    }\n    componentWillReceiveProps(nextProps) {\n        const { t } = this.props;\n        let listData = [];\n        const { onGetInfo, onGetMaxOrder, isCallGetAllDataSupplier, onGetInfoByIdSupplier, onInsertOrder, token, onInsertOrderDetail, listDataBuy, status, onPrintOrderDetail } = this.state;\n        if (onGetInfo) {\n            if (nextProps.dataResultOil) {\n                switch (nextProps.actionType) {\n                    case GET_ALL_OIL_SUCCESS:\n                        switch (nextProps.responseCode) {\n                            case \"00000\":\n                                let data = nextProps.dataResultOil;\n                                this.setState({ onGetInfo: false, loading: false, data });\n                                break;\n                            case nextProps.responseCode:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onGetInfo: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case GET_ALL_OIL_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onGetInfo: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n        if (isCallGetAllDataSupplier) {\n            console.log(\"dataResultSupplier:\", nextProps.dataResultSupplier);\n            console.log(\"actionTypeSupplier:\", nextProps.actionTypeSupplier);\n            if (nextProps.dataResultSupplier) {\n                switch (nextProps.actionTypeSupplier) {\n                    case GET_ALL_SUPPLIER_SUCCESS:\n                        this.setState({\n                            isCallGetAllDataSupplier: false,\n                            dataComboSupplier: nextProps.dataResultSupplier,\n                        });\n                        break;\n                    case GET_ALL_SUPPLIER_FAILED:\n                        this.setState({\n                            isCallGetAllDataSupplier: false,\n                            dataComboSupplier: null,\n                        });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n        if (onGetInfoByIdSupplier) {\n            if (nextProps.dataResultOilByIdSupplier) {\n                switch (nextProps.actionType) {\n                    case GET_ALL_OIL_BY_ID_SUPPLIER_SUCCESS:\n                        switch (nextProps.responseCode) {\n                            case \"00000\":\n                                let data = nextProps.dataResultOilByIdSupplier;\n                                this.setState({ onGetInfoByIdSupplier: false, loading: false, data });\n                                break;\n                            case nextProps.responseCode:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onGetInfoByIdSupplier: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case GET_ALL_OIL_BY_ID_SUPPLIER_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onGetInfoByIdSupplier: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n        if (onInsertOrder) {\n            if (nextProps.dataResultOrderNew) {\n                switch (nextProps.actionTypeOrderNew) {\n                    case INSRT_NEW_ORDER_SUCCESS:\n                        switch (nextProps.responseCode) {\n                            case \"00000\":\n                                this.props.requestGetMaxIdOrder(token)\n                                this.setState({ onInsertOrder: false, onGetMaxOrder: true, status: 'INSERT' });\n                                break;\n                            case nextProps.responseCode:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onInsertOrder: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case INSRT_NEW_ORDER_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onInsertOrder: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n        if (onGetMaxOrder) {\n            if (nextProps.dataResultMaxIdOrder) {\n                switch (nextProps.actionTypeMaxIdOrder) {\n                    case GET_MAX_ID_ORDER_SUCCESS:\n                        switch (nextProps.responseCode) {\n                            case \"00000\":\n                                console.log('nextProps.dataResultMaxIdOrder:', nextProps.dataResultMaxIdOrder)\n                                let maxId = nextProps.dataResultMaxIdOrder.orders_id\n                                if (status === 'INSERT') {\n                                    console.log('Max:', maxId)\n                                    for (let i = 0; i < listDataBuy.length; i++) {\n                                        listData.push({\n                                            \"Qty\": listDataBuy[i].qty_cus,\n                                            \"Price\": listDataBuy[i].price,\n                                            \"oils_id\": listDataBuy[i].oils_id,\n                                            \"orders_id\": maxId\n                                        })\n                                    }\n                                    let data = bodyInsertOrderDetail(listData)\n                                    this.props.requestInsertOrderDetail(data, token)\n                                    this.setState({ onGetMaxOrder: false, onInsertOrderDetail: true });\n                                } else if (status === 'PRINT') {\n                                    console.log('----ok-PRINT ORDER----')\n                                    this.props.requestGetPrintOrder(maxId, token);\n                                    this.setState({ onGetMaxOrder: false, onPrintOrderDetail: true });\n                                }\n\n                                break;\n                            case nextProps.responseCode:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onGetMaxOrder: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case GET_MAX_ID_ORDER_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onGetMaxSell: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n        if (onInsertOrderDetail) {\n            if (nextProps.dataResultOrderDetailNew) {\n                switch (nextProps.actionTypeOrderDetailNew) {\n                    case INSRT_NEW_ORDER_DETAIL_SUCCESS:\n                        switch (nextProps.responseCode) {\n                            case \"00000\":\n                                MySwal.fire({\n                                    icon: \"success\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                }).then((result) => {\n                                    if (result.isConfirmed) {\n                                        this.onPrintBill(token);\n                                    }\n                                });\n                                this.setState({ onInsertOrderDetail: false, loading: false });\n                                break;\n                            case nextProps.responseCode:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onInsertOrderDetail: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case INSRT_NEW_ORDER_DETAIL_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onInsertOrderDetail: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n        if (onPrintOrderDetail) {\n            if (nextProps.dataResultPrintOrder) {\n                switch (nextProps.actionTypeOrderPrint) {\n                    case GET_PRINT_ORDER_SUCCESS:\n                        switch (nextProps.responseCode) {\n                            case \"00000\":\n                                let datar = nextProps.dataResultPrintOrder\n                                console.log('------dcccc-----', datar)\n                                this.setState({ onPrintOrderDetail: false, loading: false, alertModelPrint: true, dataPrint: datar });\n                                break;\n                            case nextProps.responseCode:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onPrintOrderDetail: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case GET_PRINT_ORDER_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onPrintOrderDetail: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n\n\n\n    }\n    onPrintBill = (token) => {\n        this.props.requestGetMaxIdOrder(token)\n        this.setState({ onGetMaxOrder: true, status: 'PRINT' });\n    }\n    onClose = () => {\n        this.setState({ showQty: false });\n    };\n    onCloseInsert = () => {\n        this.setState({ modelInsert: false });\n    }\n    onConfrimInsert = () => {\n        try {\n            const { service, company, listDataBuy, user_id, token, id_sup } = this.state\n            if (listDataBuy.length > 0 && company && service && user_id && token) {\n                let b = formatNumber(listDataBuy.reduce((a, v) => a = a + parseInt(v.qty_cus), 0) + \"\");\n                let a = formatNumber(listDataBuy.reduce((a, v) => a = a + v.total, 0) + \"\");\n                let total = parseInt(a.replace(/,/g, \"\"));\n                let qty = parseInt(b.replace(/,/g, \"\"));\n                let status_order = 1\n                let orders_id = null\n                let date = moment(new Date()).format('YYYY-MM-DD')\n                let data = bodyInsertOrder(orders_id, service, total, company, date, qty, user_id, status_order, id_sup);\n                // console.log('---data----', data)\n                this.props.requestInsertOrder(data, token);\n                this.setState({ loading: true, onInsertOrder: true, user_id, listDataBuy, modelInsert: false });\n            }\n\n        } catch (error) {\n            console.log('error:', error)\n        }\n    }\n    onConfrim = () => {\n        const { t } = this.props;\n        const { qty, item } = this.state\n        if (qty) {\n            this.setState({showQty: false})\n            if (qty) {\n\n                let arrayItem = [...this.state.listDataBuy, {\n                    'id_bil': this.state.listDataBuy.length + 1,\n                    'oils_id': item.oils_id,\n                    'oil_name': item.oil_name,\n                    'qty_cus': qty,\n                    'price': item.price,\n                    'total': parseInt(item.price) * parseInt(qty)\n\n                }]\n                if (arrayItem.length == 1) {\n                    this.setState({\n                        listDataBuy: [...this.state.listDataBuy, {\n                            'id_bil': this.state.listDataBuy.length + 1,\n                            'oils_id': item.oils_id,\n                            'oil_name': item.oil_name,\n                            'qty_cus': qty,\n                            'price': item.price,\n                            'total': parseInt(item.price) * parseInt(qty)\n                        }]\n                    })\n                } else {\n                    let newData = this.state.listDataBuy.map(value => {\n                        if (value.oils_id === item.oils_id) {\n                            var qty_cus = parseInt(value.qty_cus) + parseInt(qty)\n                            var strOldAmount = value.price\n                            let sumTotal = parseInt(strOldAmount) * parseInt(qty_cus)\n                            value.qty_cus = parseInt(qty_cus)\n                            value.total = parseInt(sumTotal)\n                            return value;\n\n                        }\n                        return value;\n                    });\n                    let itm = this.state.listDataBuy.filter(data => data.oils_id === item.oils_id)\n                    if (itm.length > 0) {\n                        this.setState({ listDataBuy: newData })\n                    } else {\n                        this.setState({\n                            listDataBuy: [...this.state.listDataBuy, {\n                                'id_bil': this.state.listDataBuy.length + 1,\n                                'oils_id': item.oils_id,\n                                'oil_name': item.oil_name,\n                                'qty_cus': qty,\n                                'price': item.price,\n                                'total': parseInt(item.price) * parseInt(qty)\n                            }]\n                        })\n                    }\n                }\n                if (this.state.listDataBuy.length >= 0) {\n                    this.setState({ isDataBuy: true, oils_id: null, qty_cus: null, oil_name: null })\n                }\n\n            } else {\n                MySwal.fire({\n                    icon: \"error\",\n                    title: t(\"info\"),\n                    text: 'ຈຳນວນທີ່ຊື້ຄວນນ້ອຍກວ່າຫລືເທົ່າກັບຈຳນວນນໍ້າມັນທີ່ມີຢູ່',\n                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                });\n            }\n        } else {\n            MySwal.fire({\n                icon: \"error\",\n                title: t(\"info\"),\n                text: 'ກະລຸນາປ້ອນຈຳນວນທີ່ຕ້ອງການຊື້',\n                footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n            });\n        }\n    }\n    onAddCart = (item) => {\n        console.log('item:', item)\n        this.setState({ showQty: true, item })\n    }\n    onChangeTextqty = (text) => {\n        const value = text.target.value;\n        const errorqty =\n            !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\n        this.setState({\n            qty: value,\n            errorqty\n        });\n    }\n    onChangeTextservice = (text) => {\n        const value = text.target.value;\n        const errorservice =\n            !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\n        this.setState({\n            service: value,\n            errorservice\n        });\n    }\n    onChangeTextcompany = (text) => {\n        const value = text.target.value;\n        const errorcompany =\n            !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\n        this.setState({\n            company: value,\n            errorcompany\n        });\n    }\n    onDeleteOrder = (text) => {\n        MySwal.fire({\n            title: 'Do you want to save the changes?',\n            confirmButtonText: 'Yes',\n            showDenyButton: true,\n            customClass: {\n                actions: 'my-actions',\n                cancelButton: 'order-1 right-gap',\n                confirmButton: 'order-2',\n            }\n        }).then((result) => {\n            if (result.isConfirmed) {\n                this.onConfrimDelete(text)\n            }\n        })\n    }\n    onConfrimDelete = (text) => {\n        const item = this.state.listDataBuy.filter(item => item.oils_id !== text)\n        let Array = [];\n        if (item != null) {\n            let i = 0;\n            item.forEach((value) => {\n                i++\n                Array.push({\n                    'id_bil': i,\n                    'oils_id': value.oils_id,\n                    'oil_name': value.oil_name,\n                    'qty_cus': value.qty_cus,\n                    'price': value.price,\n                    'total': value.price\n                })\n            })\n            if (Array.length == 0) { this.setState({ isDataBuy: false }) }\n            MySwal.fire('ລົບສຳເລັດ!', '', 'success')\n            this.setState({\n                listDataBuy: Array\n            })\n        }\n    }\n    onDeleteAll = () => {\n        let Array = [];\n        this.setState({\n            listDataBuy: Array\n        })\n    }\n    onSell = (listDataBuy) => {\n        const { t } = this.props;\n        if (listDataBuy.length > 0) {\n\n            let count = listDataBuy.reduce((a, v) => a = a + parseInt(v.qty_cus), 0)\n            let totalAmont = listDataBuy.reduce((a, v) => a = a + v.total, 0)\n            this.setState({ listDataBuy, count, totalAmont, modelInsert: true })\n\n        } else {\n            MySwal.fire({\n                icon: \"error\",\n                title: t(\"info\"),\n                text: 'ລະກຸນາປ້ອນຈຳນວນທີ່ຕ້ອງການຊື້',\n                footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n            });\n        }\n    }\n    onSearch = (item) => {\n        const { token } = this.state\n        let id_sup = item.supplier_id\n        let nameSup = item.supplier_name\n        this.onDeleteAll()\n        this.setState({ loading: true, onGetInfoByIdSupplier: true, id_sup, nameSup });\n        this.props.requestGetAllOilByIdSupplier(id_sup, token);\n    }\n    onCloseAlertBill = () => {\n        this.setState({ alertModelPrint: false })\n    }\n    render() {\n        const { t } = this.props;\n        const { loading, data, showQty, qty, errorqty, listDataBuy, isDataBuy,\n            modelInsert, service, errorservice, company, errorcompany, dataComboSupplier, id_sup, nameSup, alertModelPrint, dataPrint } = this.state\n\n        return (\n            <div>\n                {loading ? <LoadingComponet /> : null}\n                <div className=\"content-wrapper\">\n                    <section className=\"content-header\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row mb-2\">\n                                <div className=\"col-sm-6\">\n                                    <h3>{t('OrderSreen')}</h3>\n                                </div>\n\n                            </div>\n                        </div>\n                    </section>\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                {dataComboSupplier ? dataComboSupplier.map((item, i) => (\n                                    <div className=\"col-12 col-sm-6 col-md-3\">\n                                        <div className=\"info-box\">\n                                            <span className=\"info-box-icon bg-info elevation-1\"><i className=\"fas fa-cog\" /></span>\n                                            <button className=\"info-box-content btn\" onClick={() => this.onSearch(item)}>\n                                                <span className=\"info-box-text\">{item.supplier_name}</span>\n                                            </button>\n                                        </div>\n                                    </div>\n                                )) : null}\n                            </div>\n                            {\n                                id_sup ?\n\n                                    <div className=\"row\">\n                                        <div className=\"col-8\">\n                                            <div className=\"card card-solid\">\n                                                <div className=\"card-header\">\n                                                    <h3 className=\"card-title\">ລາຍການລຸ່ມນີ້ເປັນຂອງຜູ້ສະຫນອງ:{id_sup ? id_sup : null} - {nameSup ? nameSup : null}</h3>\n                                                </div>\n                                                <div className=\"card-body\">\n                                                    <table className=\"table table-sm\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th>{t('Level')}</th>\n                                                                <th>{t('product')}</th>\n                                                                <th>{t('price')}</th>\n                                                                <th>{t('qty')}</th>\n                                                                <th>{t('option')}</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            {\n                                                                data ? data.map((item, i) => (\n                                                                    <tr>\n                                                                        <td>{i + 1}</td>\n                                                                        <td>{item.oil_name}</td>\n                                                                        <td>\n                                                                            <span className=\"badge bg-success\">\n                                                                                {formatNumber(item.price + \"\")}\n                                                                            </span>\n                                                                        </td>\n                                                                        <td>\n                                                                            <span className=\"badge bg-danger\">\n                                                                                {formatNumber(item.qty + \"\")} / ລິດ\n                                                                            </span>\n                                                                        </td>\n                                                                        <td>\n                                                                            <button onClick={() => this.onAddCart(item)} className=\"btn btn-info btn-xs\">{t('order')}</button>\n                                                                        </td>\n                                                                    </tr>\n                                                                )) : null\n                                                            }\n\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n\n\n                                            </div>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <div className=\"card\">\n                                                <div className=\"card-header\">\n                                                    <h3 className=\"card-title\">{t('OrderList')}</h3>\n                                                    <div className=\"card-tools\">\n                                                        <div className=\"input-group input-group-sm\" style={{ width: 150 }}>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"card-body\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-12 table-responsive\">\n                                                            <div className=\"table-responsive\">\n                                                                <table className=\"table table-striped\">\n                                                                    <thead>\n                                                                        <tr>\n                                                                            <th>{t('Oil')}</th>\n                                                                            <th>{t('qty')}</th>\n                                                                            <th>{t('Amount')}</th>\n                                                                            <th>{t('Total')}</th>\n                                                                            <th>#</th>\n                                                                        </tr>\n                                                                    </thead>\n                                                                    <tbody>\n                                                                        {isDataBuy ?\n                                                                            listDataBuy.map((item, i) => (\n                                                                                <tr>\n                                                                                    <td>{item.oil_name}</td>\n                                                                                    <td>{formatNumber(item.qty_cus + \"\")}</td>\n                                                                                    <td>{formatNumber(item.price + \"\")}</td>\n                                                                                    <td>{formatNumber(item.total + \"\")}</td>\n                                                                                    <td><button onClick={() => this.onDeleteOrder(item.oils_id)} className=\"badge bg-danger\">X</button></td>\n\n                                                                                </tr>\n                                                                            )) : null}\n                                                                    </tbody>\n                                                                </table>\n                                                            </div>\n                                                            {\n                                                                listDataBuy.length > 0 ?\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-3\">\n                                                                        </div>\n                                                                        <div className=\"col-9\">\n                                                                            <div className=\"table-responsive\">\n                                                                                <table className=\"table\">\n                                                                                    <tbody>\n                                                                                        <tr>\n                                                                                            <th>ລວມຈຳນວນ</th>\n                                                                                            <td>{formatNumber(listDataBuy.reduce((a, v) => a = a + parseInt(v.qty_cus), 0) + \"\")}</td>\n                                                                                        </tr>\n                                                                                        <tr>\n                                                                                            <th>{t('Total')}</th>\n                                                                                            <td>{formatNumber(listDataBuy.reduce((a, v) => a = a + v.total, 0) + \"\")}</td>\n                                                                                        </tr>\n                                                                                    </tbody></table>\n                                                                            </div>\n\n                                                                        </div>\n                                                                        <div className=\"col-6\">\n                                                                        </div>\n                                                                        <div className=\"col-6\">\n                                                                            <div className=\"table-responsive\">\n                                                                                <table className=\"table\">\n                                                                                    <tbody>\n                                                                                        <tr>\n                                                                                            <td>\n                                                                                                <button className=\"btn btn-success btn-xs\" onClick={() => this.onSell(listDataBuy)}><i className=\"fas fa-cart-plus\" />{t('Confirm')}</button>\n                                                                                            </td>\n                                                                                        </tr>\n                                                                                    </tbody></table>\n                                                                            </div>\n\n                                                                        </div>\n                                                                    </div> : null\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    : null\n                            }\n                        </div>\n\n\n                        <Modal\n                            className=\"modal\"\n                            show={showQty}\n                            size=\"sm\"\n                            onHide={() => this.onClose()}\n                        >\n                            <Modal.Header>\n                                <Modal.Title>{t(\"Confirm\")}</Modal.Title>\n                                <Modal.Title>\n                                    <button\n                                        type=\"button\"\n                                        className=\"close\"\n                                        onClick={() => this.onClose()}\n                                    >\n                                        <span aria-hidden=\"true\">×</span>\n                                    </button>\n                                </Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <div className=\"form-row\">\n                                    <div className=\"col-md-12\">\n                                        <div class=\"form-group\">\n                                            <label>ກະລຸນາປ້ອນຈຳນວນທີ່ຕ້ອງການຊື້ / ລິດ</label>\n                                            <input\n                                                name=\"qty\"\n                                                value={qty}\n                                                type=\"number\"\n                                                className={\n                                                    errorqty === undefined\n                                                        ? \"form-control\"\n                                                        : errorqty\n                                                            ? \"form-control is-invalid\"\n                                                            : \"form-control is-valid\"\n                                                }\n                                                placeholder={t(\"qty\")}\n                                                onChange={(text) => this.onChangeTextqty(text)}\n                                            />\n                                            {errorqty ? (\n                                                <p class=\"text-danger\">{errorqty}</p>\n                                            ) : null}\n                                        </div>\n                                    </div>\n                                </div>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-default\"\n                                    onClick={() => this.onClose()}\n                                >\n                                    {t(\"clase\")}\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-primary\"\n                                    onClick={() => this.onConfrim()}\n                                    className={\n                                        !qty || errorqty\n                                            ? \"btn btn-secondary disabled\"\n                                            : \"btn btn-primary\"\n                                    }\n                                >\n                                    {t(\"Confirm\")}\n                                </button>\n                            </Modal.Footer>\n                        </Modal>\n\n\n                        <Modal\n                            className=\"modal\"\n                            show={modelInsert}\n                            size=\"sm\"\n                            onHide={() => this.onCloseInsert()}\n                        >\n                            <Modal.Header>\n                                <Modal.Title>{t(\"Confirm\")}</Modal.Title>\n                                <Modal.Title>\n                                    <button\n                                        type=\"button\"\n                                        className=\"close\"\n                                        onClick={() => this.onCloseInsert()}\n                                    >\n                                        <span aria-hidden=\"true\">×</span>\n                                    </button>\n                                </Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <div className=\"form-row\">\n                                    <div className=\"col-md-12\">\n\n                                        <div class=\"form-group\">\n                                            <label>{t('service')}</label>\n                                            <input\n                                                name=\"service\"\n                                                value={service}\n                                                type=\"text\"\n                                                className={\n                                                    errorservice === undefined\n                                                        ? \"form-control\"\n                                                        : errorservice\n                                                            ? \"form-control is-invalid\"\n                                                            : \"form-control is-valid\"\n                                                }\n                                                placeholder={t(\"service\")}\n                                                onChange={(text) => this.onChangeTextservice(text)}\n                                            />\n                                            {errorservice ? (\n                                                <p class=\"text-danger\">{errorservice}</p>\n                                            ) : null}\n                                        </div>\n\n                                        <div class=\"form-group\">\n                                            <label>{t('company')}</label>\n                                            <input\n                                                name=\"company\"\n                                                value={company}\n                                                type=\"text\"\n                                                className={\n                                                    errorcompany === undefined\n                                                        ? \"form-control\"\n                                                        : errorcompany\n                                                            ? \"form-control is-invalid\"\n                                                            : \"form-control is-valid\"\n                                                }\n                                                placeholder={t(\"company\")}\n                                                onChange={(text) => this.onChangeTextcompany(text)}\n                                            />\n                                            {errorcompany ? (\n                                                <p class=\"text-danger\">{errorcompany}</p>\n                                            ) : null}\n                                        </div>\n                                    </div>\n                                </div>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-default\"\n                                    onClick={() => this.onCloseInsert()}\n                                >\n                                    {t(\"clase\")}\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-primary\"\n                                    onClick={() => this.onConfrimInsert()}\n                                    className={\n                                        !company || errorcompany || !service || errorservice\n                                            ? \"btn btn-secondary disabled\"\n                                            : \"btn btn-primary\"\n                                    }\n                                >\n                                    {t(\"Confirm\")}\n                                </button>\n                            </Modal.Footer>\n                        </Modal>\n\n\n\n\n                        <Modal\n                            className=\"modal\"\n                            show={alertModelPrint}\n                            size=\"lg\"\n                            onHide={() => this.onCloseAlertBill()}\n                        >\n                            <Modal.Header>\n                                <Modal.Title>{t(\"billOrderbySup\")}</Modal.Title>\n                                <Modal.Title>\n                                    <button\n                                        type=\"button\"\n                                        className=\"close\"\n                                        onClick={() => this.onCloseAlertBill()}\n                                    >\n                                        <span aria-hidden=\"true\">×</span>\n                                    </button>\n                                </Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <div className=\"form\" ref={el => (this.componentRef = el)}>\n                                    <div>\n                                        <p className=\"text-center\">{t('textHeader')}</p>\n                                        <p className=\"text-center\">{t('textDetail')}</p>\n                                        <h4 className=\"text-center\">{t('billOrderbySup')}</h4>\n                                        <h4 className=\"text-center\">-----------------</h4>\n                                        <p className=\"text-center\"><Moment format='MMMM Do YYYY, h:mm:ss a'>{new Date()}</Moment></p>\n                                        <p className=\"text-center\">{dataPrint.length > 0 ? dataPrint[0].username : null}</p>\n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6\">\n                                            <img\n                                                src={logo}\n                                                className=\"img-circle\"\n                                                style={{ width: 100, height: 50 }}\n                                            />\n                                            <p>{t('companyaName')}</p>\n                                            <p>{t('ContactInfo')}</p>\n                                            <p>{t('location')}</p>\n                                        </div>\n\n                                        <div className=\"col-md-6\">\n                                            <br />\n                                            <br />\n                                            <p className=\"text\">{t('supplier_name')}: {dataPrint.length > 0 ? dataPrint[0].supplier_name : null}</p>\n                                            <p className=\"text\">{t('date')}: {dataPrint.length > 0 ? dataPrint[0].date : null}</p>\n                                            <p className=\"text\">{t('company')}: {dataPrint.length > 0 ? dataPrint[0].company : null}</p>\n                                            <p className=\"text\">{t('service')}: {dataPrint.length > 0 ? dataPrint[0].service : null}</p>\n                                            \n                                        </div>\n                                    </div>\n\n\n                                    <div className=\"row\">\n                                        <div className=\"col-12 table-responsive\">\n                                            <div className=\"table-responsive\">\n                                                <table className=\"table table-hover table-bordered\">\n\n                                                    <thead>\n                                                        <tr>\n                                                            <th>{t('Oil')}</th>\n                                                            <th>{t('qty')}</th>\n                                                            <th>{t('Amount')}</th>\n                                                            <th>{t('Total')}</th>\n\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {dataPrint ?\n                                                            dataPrint.map((item, i) => (\n                                                                <tr>\n                                                                    <td>{item.oil_name}</td>\n                                                                    <td>{formatNumber(item.Qty + \"\")}</td>\n                                                                    <td>{formatNumber(item.Price + \"\")}</td>\n                                                                    <td>{formatNumber(item.Qty * item.Price + \"\")}</td>\n                                                                </tr>\n                                                            )) : null}\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                            {\n                                                dataPrint.length > 0 ?\n                                                    <div className=\"row\">\n                                                        <div className=\"col-3\">\n                                                        </div>\n                                                        <div className=\"col-9\">\n                                                            <div className=\"table-responsive\">\n                                                                <table className=\"table\">\n                                                                    <tbody>\n                                                                        <tr>\n                                                                            <th>ລວມຈຳນວນ</th>\n                                                                            <td>{formatNumber(dataPrint.reduce((a, v) => a = a + parseInt(v.Qty), 0) + \"\")}</td>\n                                                                        </tr>\n                                                                        <tr>\n                                                                            <th>{t('Total')}</th>\n                                                                            <td>{formatNumber(dataPrint.reduce((a, v) => a = a + v.Qty * v.Price, 0) + \"\")}</td>\n                                                                        </tr>\n                                                                    </tbody></table>\n                                                            </div>\n                                                        </div>\n                                                    </div> : null\n                                            }\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <ReactToPrint\n                                    trigger={() => <button type=\"submit\" className=\"btn btn-success btn-xs\">\n                                        <i className=\"fas fa-sync-alt\" />{t(\"print\")}\n                                    </button>}\n                                    content={() => this.componentRef}\n                                />\n\n                            </Modal.Footer>\n                        </Modal>\n\n\n\n\n\n                    </section>\n                </div>\n            </div>\n\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        dataResultOil: state.oilReducer.dataResultOil,\n        actionType: state.oilReducer.actionType,\n        responseCode: state.oilReducer.responseCode,\n        message: state.oilReducer.message,\n        dataResultSupplier: state.supplierReducer.dataResultSupplier,\n        actionTypeSupplier: state.supplierReducer.actionType,\n        dataResultOilByIdSupplier: state.oilReducer.dataResultOilByIdSupplier,\n\n\n        dataResultOrderNew: state.orderReducer.dataResultOrderNew,\n        actionTypeOrderNew: state.orderReducer.actionType,\n\n        dataResultMaxIdOrder: state.orderReducer.dataResultMaxIdOrder,\n        actionTypeMaxIdOrder: state.orderReducer.actionType,\n\n        dataResultOrderDetailNew: state.orderReducer.dataResultOrderDetailNew,\n        actionTypeOrderDetailNew: state.orderReducer.actionType,\n\n        dataResultPrintOrder: state.orderReducer.dataResultPrintOrder,\n        actionTypeOrderPrint: state.orderReducer.actionType,\n\n\n\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        requestGetAllOil: (data) => dispatch(requestGetAllOil(data)),\n        requestGetAllOilByIdSupplier: (data, token) => dispatch(requestGetAllOilByIdSupplier(data, token)),\n        requestInsertOrder: (data, token) => dispatch(requestInsertOrder(data, token)),\n        requestGetMaxIdOrder: (data, token) => dispatch(requestGetMaxIdOrder(data, token)),\n        requestInsertOrderDetail: (data, token) => dispatch(requestInsertOrderDetail(data, token)),\n        requestGetPrintOrder: (data, token) => dispatch(requestGetPrintOrder(data, token)),\n        requestGetAllSupplier: (data) => dispatch(requestGetAllSupplier(data)),\n\n    };\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(SellSrceen));","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { withTranslation } from \"react-i18next\";\nimport { LoadingComponet } from \"../../components\";\nimport {\n    requestGetAllOil,\n    requestGetAllOilByIdSupplier\n} from \"../../actions/oilAction\";\nimport {\n    requestGetAllSupplier\n} from \"../../actions/supplierAction\";\nimport Cookie from \"js-cookie\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport {\n    GET_ALL_OIL_FAILED,\n    GET_ALL_OIL_SUCCESS,\n\n    GET_ALL_OIL_BY_ID_SUPPLIER_SUCCESS,\n    GET_ALL_OIL_BY_ID_SUPPLIER_FAILED,\n\n    GET_ALL_ORDER_SUCCESS,\n    GET_ALL_ORDER_FAILED,\n\n    GET_SEARCH_ORDER_SUCCESS,\n    GET_SEARCH_ORDER_FAILED,\n\n    INSRT_NEW_IMPORT_SUCCESS,\n    INSRT_NEW_IMPORT_FAILED,\n\n    GET_MAX_ID_IMPORT_SUCCESS,\n    GET_MAX_ID_IMPORT_FAILED,\n\n    INSRT_NEW_IMPORT_DETAIL_FAILED,\n    INSRT_NEW_IMPORT_DETAIL_SUCCESS,\n\n    GET_PRINT_IMPORT_SUCCESS,\n    GET_PRINT_IMPORT_FAILED\n\n} from \"../../utils/commonType\";\nimport { Modal, Form } from \"react-bootstrap\";\nimport { formatNumber } from '../../utils/Formater'\nimport { bodyInsertImportDetail, bodyInsertImport } from '../../api/bodyReq'\nimport {\n    requestInsertOrderDetail, requestInsertOrder, requestGetAllOrder,\n    requestGetSearchOrder\n} from '../../actions/order'\n\nimport { requestInsertImport, requestGetMaxIdImport, requestInsertImportDetail, requestGetPrintImport } from '../../actions/importAction'\nimport Moment from 'react-moment';\nimport * as moment from 'moment'\nimport logo from '../../img/11_PTT.png';\nimport ReactToPrint from \"react-to-print\";\n\nconst MySwal = withReactContent(Swal);\nclass SellSrceen extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            showQty: false,\n            listDataBuy: [],\n            modelInsert: false,\n            alertModelPrint: false,\n            dataPrint: []\n        };\n    }\n    componentDidMount() {\n        const userInfo = Cookie.getJSON(\"userInfo\") || null;\n        let token = userInfo ? userInfo.token : null;\n        let user_id = userInfo.auth[0].user_id;\n        this.loaderOrder(token);\n        this.setState({ token, user_id });\n\n    }\n\n    loaderOrder(token) {\n        this.props.requestGetAllOrder(token);\n        this.setState({\n            isCallGetOrder: true,\n        });\n    }\n    componentWillReceiveProps(nextProps) {\n        const { t } = this.props;\n        let listData = [];\n        const { onGetInfo, isCallGetOrder, onGetMaxImport, isCallGetAllDataSupplier, onGetInfoByIdSupplier,\n            onInsertImport, token, onInsertImportDetail, listDataBuy, onCallGetOrderById, user_id, status, onPrintImport } = this.state;\n        if (onGetInfo) {\n            if (nextProps.dataResultOil) {\n                switch (nextProps.actionType) {\n                    case GET_ALL_OIL_SUCCESS:\n                        switch (nextProps.responseCode) {\n                            case \"00000\":\n                                let data = nextProps.dataResultOil;\n                                this.setState({ onGetInfo: false, loading: false, data });\n                                break;\n                            case nextProps.responseCode:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onGetInfo: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case GET_ALL_OIL_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onGetInfo: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n\n        if (onGetInfoByIdSupplier) {\n            if (nextProps.dataResultOilByIdSupplier) {\n                switch (nextProps.actionType) {\n                    case GET_ALL_OIL_BY_ID_SUPPLIER_SUCCESS:\n                        switch (nextProps.responseCode) {\n                            case \"00000\":\n                                let data = nextProps.dataResultOilByIdSupplier;\n                                this.setState({ onGetInfoByIdSupplier: false, loading: false, data });\n                                break;\n                            case nextProps.responseCode:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onGetInfoByIdSupplier: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case GET_ALL_OIL_BY_ID_SUPPLIER_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onGetInfoByIdSupplier: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n        if (onInsertImport) {\n            if (nextProps.dataResultImportNew) {\n                switch (nextProps.actionTypeImportNew) {\n                    case INSRT_NEW_IMPORT_SUCCESS:\n                        switch (nextProps.responseCodeImport) {\n                            case \"00000\":\n                                this.props.requestGetMaxIdImport(token)\n                                this.setState({ onInsertImport: false, onGetMaxImport: true, status: 'INSERT' });\n                                break;\n                            case nextProps.responseCodeImport:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onInsertImport: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case INSRT_NEW_IMPORT_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onInsertImport: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n        if (onGetMaxImport) {\n            if (nextProps.dataResultMaxIdImport) {\n                switch (nextProps.actionTypeMaxIdImport) {\n                    case GET_MAX_ID_IMPORT_SUCCESS:\n                        switch (nextProps.responseCodeImport) {\n                            case \"00000\":\n                                let maxId = nextProps.dataResultMaxIdImport.ImpID\n                                if (status === 'INSERT') {\n                                    for (let i = 0; i < listDataBuy.length; i++) {\n                                        listData.push({\n                                            \"ImpID\": maxId,\n                                            \"Qty\": listDataBuy[i].qty_cus,\n                                            \"Price\": listDataBuy[i].price,\n                                            \"oils_id\": listDataBuy[i].oils_id,\n                                            \"user_id\": user_id\n                                        })\n                                    }\n                                    let data = bodyInsertImportDetail(listData)\n                                    this.props.requestInsertImportDetail(data, token)\n                                    this.setState({ onGetMaxImport: false, onInsertImportDetail: true });\n                                } else if (status === 'PRINT') {\n                                    console.log('----ok-PRINT ORDER----')\n                                    this.props.requestGetPrintImport(maxId, token);\n                                    this.setState({ onInsertImport: false, onPrintImport: true });\n                                }\n\n                                break;\n                            case nextProps.responseCodeImport:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onGetMaxImport: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case GET_MAX_ID_IMPORT_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onGetMaxSell: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n        if (onInsertImportDetail) {\n            if (nextProps.dataResultImportDetailNew) {\n                switch (nextProps.actionTypeImportDetailNew) {\n                    case INSRT_NEW_IMPORT_DETAIL_SUCCESS:\n                        switch (nextProps.responseCodeImport) {\n                            case \"00000\":\n                                MySwal.fire({\n                                    icon: \"success\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                }).then((result) => {\n                                    if (result.isConfirmed) {\n                                        this.onPrintBill(token);\n                                        // this.loaderOrder(token);\n                                        // this.setState({listDataBuy: null})\n                                    }\n                                });\n                                this.setState({ onInsertImportDetail: false, loading: false });\n                                break;\n                            case nextProps.responseCodeImport:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onInsertImportDetail: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case INSRT_NEW_IMPORT_DETAIL_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onInsertImportDetail: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n        if (isCallGetOrder) {\n            if (nextProps.dataResultOrder) {\n                switch (nextProps.actionTypeOrder) {\n                    case GET_ALL_ORDER_SUCCESS:\n                        this.setState({\n                            isCallGetOrder: false,\n                            dataOrder: nextProps.dataResultOrder,\n                        });\n                        break;\n                    case GET_ALL_ORDER_FAILED:\n                        this.setState({ isCallGetOrder: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n\n        if (onCallGetOrderById) {\n            if (nextProps.dataResultGetSearchOrderNew) {\n                switch (nextProps.actionTypeGetSearchOrder) {\n                    case GET_SEARCH_ORDER_SUCCESS:\n                        this.setState({\n                            onCallGetOrderById: false,\n                            dataOrderSearch: nextProps.dataResultGetSearchOrderNew,\n                            loading: false\n                        });\n                        break;\n                    case GET_SEARCH_ORDER_FAILED:\n                        this.setState({ onCallGetOrderById: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n\n        if (onPrintImport) {\n            if (nextProps.dataResultGetPrintImport) {\n                switch (nextProps.actionTypeImportPrint) {\n                    case GET_PRINT_IMPORT_SUCCESS:\n                        switch (nextProps.responseCodeImport) {\n                            case \"00000\":\n                                let datar = nextProps.dataResultGetPrintImport\n                                console.log('------dcccc-----', datar)\n                                this.setState({ onPrintImport: false, loading: false, alertModelPrint: true, dataPrint: datar });\n                                break;\n                            case nextProps.responseCodeImport:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onPrintImport: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case GET_PRINT_IMPORT_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onPrintImport: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n\n\n\n    }\n    onPrintBill = (token) => {\n        this.props.requestGetMaxIdImport(token)\n        this.setState({ onGetMaxImport: true, status: 'PRINT' });\n    }\n    onClose = () => {\n        this.setState({ showQty: false });\n    };\n    onCloseInsert = () => {\n        this.setState({ modelInsert: false });\n    }\n    onConfrimInsert = () => {\n        try {\n            const { listDataBuy, user_id, token, id_sup, order_id } = this.state\n            if (listDataBuy.length > 0 && user_id && token) {\n                let b = formatNumber(listDataBuy.reduce((a, v) => a = a + parseInt(v.qty_cus), 0) + \"\");\n                let a = formatNumber(listDataBuy.reduce((a, v) => a = a + v.total, 0) + \"\");\n                let total = parseInt(a.replace(/,/g, \"\"));\n                let qty = parseInt(b.replace(/,/g, \"\"));\n                let ImpDate = moment(new Date()).format('YYYY-MM-DD')\n                let ImpID = null\n                let data = bodyInsertImport(ImpID, qty, total, ImpDate, order_id, id_sup);\n                this.props.requestInsertImport(data, token);\n                this.setState({ loading: true, onInsertImport: true, user_id, listDataBuy, modelInsert: false });\n            }\n\n        } catch (error) {\n            console.log('error:', error)\n        }\n    }\n    onConfrim = () => {\n        const { t } = this.props;\n        const { qty, item } = this.state\n        if (qty && qty > 0) {\n            this.setState({showQty: false})\n            let qtyOil = item.qty\n            if (qtyOil >= qty) {\n\n                let arrayItem = [...this.state.listDataBuy, {\n                    'id_bil': this.state.listDataBuy.length + 1,\n                    'oils_id': item.oils_id,\n                    'oil_name': item.oil_name,\n                    'qty_cus': qty,\n                    'price': item.price,\n                    'total': parseInt(item.price) * parseInt(qty)\n\n                }]\n                if (arrayItem.length == 1) {\n                    this.setState({\n                        listDataBuy: [...this.state.listDataBuy, {\n                            'id_bil': this.state.listDataBuy.length + 1,\n                            'oils_id': item.oils_id,\n                            'oil_name': item.oil_name,\n                            'qty_cus': qty,\n                            'price': item.price,\n                            'total': parseInt(item.price) * parseInt(qty)\n                        }]\n                    })\n                } else {\n                    let newData = this.state.listDataBuy.map(value => {\n                        if (value.oils_id === item.oils_id) {\n                            var qty_cus = parseInt(value.qty_cus) + parseInt(qty)\n                            var strOldAmount = value.price\n                            let sumTotal = parseInt(strOldAmount) * parseInt(qty_cus)\n                            value.qty_cus = parseInt(qty_cus)\n                            value.total = parseInt(sumTotal)\n                            return value;\n\n                        }\n                        return value;\n                    });\n                    let itm = this.state.listDataBuy.filter(data => data.oils_id === item.oils_id)\n                    if (itm.length > 0) {\n                        this.setState({ listDataBuy: newData })\n                    } else {\n                        this.setState({\n                            listDataBuy: [...this.state.listDataBuy, {\n                                'id_bil': this.state.listDataBuy.length + 1,\n                                'oils_id': item.oils_id,\n                                'oil_name': item.oil_name,\n                                'qty_cus': qty,\n                                'price': item.price,\n                                'total': parseInt(item.price) * parseInt(qty)\n                            }]\n                        })\n                    }\n                }\n                if (this.state.listDataBuy.length >= 0) {\n                    this.setState({ isDataBuy: true, oils_id: null, qty_cus: null, oil_name: null })\n                }\n\n            } else {\n                MySwal.fire({\n                    icon: \"error\",\n                    title: t(\"info\"),\n                    text: 'ຈຳນວນທີ່ຊື້ຄວາມນ້ອຍກວ່າຫລືເທົ່າກັບຈຳນວນນໍ້າມັນທີ່ມີຢູ່',\n                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                });\n            }\n        } else {\n            MySwal.fire({\n                icon: \"error\",\n                title: t(\"info\"),\n                text: 'ລະກຸນາປ້ອນຈຳນວນທີ່ຕ້ອງການຊື້',\n                footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n            });\n        }\n    }\n    onAddCart = (item) => {\n        this.setState({ showQty: true, item })\n    }\n    onChangeTextqty = (text) => {\n\n        const value = text.target.value;\n        const errorqty =\n            !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\n        this.setState({\n            qty: value,\n            errorqty\n        });\n    }\n    onChangeTextservice = (text) => {\n        const value = text.target.value;\n        const errorservice =\n            !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\n        this.setState({\n            service: value,\n            errorservice\n        });\n    }\n    onChangeTextcompany = (text) => {\n        const value = text.target.value;\n        const errorcompany =\n            !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\n        this.setState({\n            company: value,\n            errorcompany\n        });\n    }\n    onDeleteOrder = (text) => {\n        MySwal.fire({\n            title: 'Do you want to save the changes?',\n            confirmButtonText: 'Yes',\n            showDenyButton: true,\n            customClass: {\n                actions: 'my-actions',\n                cancelButton: 'order-1 right-gap',\n                confirmButton: 'order-2',\n            }\n        }).then((result) => {\n            if (result.isConfirmed) {\n                this.onConfrimDelete(text)\n            }\n        })\n    }\n    onConfrimDelete = (text) => {\n        const item = this.state.listDataBuy.filter(item => item.oils_id !== text)\n        let Array = [];\n        if (item != null) {\n            let i = 0;\n            item.forEach((value) => {\n                i++\n                Array.push({\n                    'id_bil': i,\n                    'oils_id': value.oils_id,\n                    'oil_name': value.oil_name,\n                    'qty_cus': value.qty_cus,\n                    'price': value.price,\n                    'total': value.price\n                })\n            })\n            if (Array.length == 0) { this.setState({ isDataBuy: false }) }\n            MySwal.fire('ລົບສຳເລັດ!', '', 'success')\n            this.setState({\n                listDataBuy: Array\n            })\n        }\n    }\n    onDeleteAll = () => {\n        let Array = [];\n        this.setState({\n            listDataBuy: Array\n        })\n    }\n    onSell = (listDataBuy) => {\n        const { t } = this.props;\n        if (listDataBuy.length > 0) {\n\n            let count = listDataBuy.reduce((a, v) => a = a + parseInt(v.qty_cus), 0)\n            let totalAmont = listDataBuy.reduce((a, v) => a = a + v.total, 0)\n            this.setState({ listDataBuy, count, totalAmont, modelInsert: true })\n\n        } else {\n            MySwal.fire({\n                icon: \"error\",\n                title: t(\"info\"),\n                text: 'ລະກຸນາປ້ອນຈຳນວນທີ່ຕ້ອງການຊື້',\n                footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n            });\n        }\n    }\n\n    onSelectOrder = (text) => {\n        const { token } = this.state\n        const data = text.target.value;\n        const textSplit = data.split(\"|\");\n        const id_sup = textSplit[1];\n        const value = textSplit[0];\n        const order_id = textSplit[0];\n        this.props.requestGetSearchOrder(value, token);\n        this.setState({ loading: true, onCallGetOrderById: true, id_sup, order_id })\n    }\n    onCloseAlertBill = () => {\n        this.setState({ alertModelPrint: false })\n    }\n    render() {\n        const { t } = this.props;\n        const { loading, data, showQty, qty, errorqty, listDataBuy, isDataBuy,\n            modelInsert, service, errorservice, company, errorcompany, dataComboSupplier,\n            id_sup, nameSup, dataOrder, dataOrderSearch, alertModelPrint, dataPrint } = this.state\n\n        return (\n            <div>\n                {loading ? <LoadingComponet /> : null}\n                <div className=\"content-wrapper\">\n                    <section className=\"content-header\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row mb-2\">\n                                <div className=\"col-sm-6\">\n                                    <h3>{t('import')}</h3>\n                                </div>\n                                <div className=\"col-sm-6\">\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-md-8\">\n                                    <div class=\"form-group\">\n                                        <label>{t(\"car_id\")}</label>\n                                        <Form.Control\n                                            as=\"select\"\n                                            onChange={(text) => this.onSelectOrder(text)}\n                                        >\n                                            <option>-------ກະລຸນາເລືອກອໍເດີ-------</option>\n                                            {dataOrder\n                                                ? dataOrder.map((item, i) => (\n                                                    <option value={item.orders_id + '|' + item.supplier_id}>\n                                                        {t('orders_id')}: {item.orders_id} - {t('service')}: {item.service} - {t('company')}: {item.company} - {t('total')}: {formatNumber(item.total + '')}\n                                                    </option>\n                                                ))\n                                                : null}\n                                        </Form.Control>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-4\"></div>\n                            </div>\n                            {\n                                dataOrderSearch ?\n\n                                    <div className=\"row\">\n                                        <div className=\"col-8\">\n                                            <div className=\"card card-solid\">\n                                                <div className=\"card-header\">\n                                                    <h3 className=\"card-title\">ລາຍການລຸ່ມນີ້ເປັນຂອງຜູ້ສະຫນອງ:{id_sup ? id_sup : null} - {nameSup ? nameSup : null}</h3>\n                                                </div>\n                                                <div className=\"card-body\">\n                                                    <table className=\"table table-sm\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th>{t('Level')}</th>\n                                                                <th>{t('product')}</th>\n                                                                <th>{t('price')}</th>\n                                                                <th>{t('qty')}</th>\n                                                                <th>{t('option')}</th>\n                                                            </tr>\n                                                        </thead>\n\n                                                        <tbody>\n                                                            {\n                                                                dataOrderSearch ? dataOrderSearch.map((item, i) => (\n                                                                    <tr>\n                                                                        <td>{i + 1}</td>\n                                                                        <td>{item.oil_name}</td>\n                                                                        <td>\n                                                                            <span className=\"badge bg-success\">\n                                                                                {formatNumber(item.price + \"\")}\n                                                                            </span>\n                                                                        </td>\n\n                                                                        <td>\n                                                                            <span className=\"badge bg-danger\">\n                                                                                {formatNumber(item.qty + \"\")} / ລິດ\n                                                                            </span>\n                                                                        </td>\n                                                                        <td>\n                                                                            <button onClick={() => this.onAddCart(item)} className=\"btn btn-info btn-xs\">{t('importConfrim')}</button>\n                                                                        </td>\n                                                                    </tr>\n                                                                )) : null\n                                                            }\n\n                                                        </tbody>\n                                                    </table>\n                                                </div>\n\n\n                                            </div>\n                                        </div>\n                                        <div className=\"col-4\">\n                                            <div className=\"card\">\n                                                <div className=\"card-header\">\n                                                    <h3 className=\"card-title\">{t('OrderList')}</h3>\n                                                    <div className=\"card-tools\">\n                                                        <div className=\"input-group input-group-sm\" style={{ width: 150 }}>\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                                <div className=\"card-body\">\n                                                    <div className=\"row\">\n                                                        <div className=\"col-12 table-responsive\">\n                                                            <div className=\"table-responsive\">\n                                                                <table className=\"table table-striped\">\n                                                                    <thead>\n                                                                        <tr>\n                                                                            <th>{t('Oil')}</th>\n                                                                            <th>{t('qty')}</th>\n                                                                            <th>{t('Amount')}</th>\n                                                                            <th>{t('Total')}</th>\n                                                                            <th>#</th>\n                                                                        </tr>\n                                                                    </thead>\n                                                                    <tbody>\n                                                                        {isDataBuy ?\n                                                                            listDataBuy.map((item, i) => (\n                                                                                <tr>\n                                                                                    <td>{item.oil_name}</td>\n                                                                                    <td>{formatNumber(item.qty_cus + \"\")}</td>\n                                                                                    <td>{formatNumber(item.price + \"\")}</td>\n                                                                                    <td>{formatNumber(item.total + \"\")}</td>\n                                                                                    <td><button onClick={() => this.onDeleteOrder(item.oils_id)} className=\"badge bg-danger\">X</button></td>\n\n                                                                                </tr>\n                                                                            )) : null}\n                                                                    </tbody>\n                                                                </table>\n                                                            </div>\n                                                            {\n                                                                listDataBuy.length > 0 ?\n                                                                    <div className=\"row\">\n                                                                        <div className=\"col-3\">\n                                                                        </div>\n                                                                        <div className=\"col-9\">\n                                                                            <div className=\"table-responsive\">\n                                                                                <table className=\"table\">\n                                                                                    <tbody>\n                                                                                        <tr>\n                                                                                            <th>ລວມຈຳນວນ</th>\n                                                                                            <td>{formatNumber(listDataBuy.reduce((a, v) => a = a + parseInt(v.qty_cus), 0) + \"\")}</td>\n                                                                                        </tr>\n                                                                                        <tr>\n                                                                                            <th>{t('Total')}</th>\n                                                                                            <td>{formatNumber(listDataBuy.reduce((a, v) => a = a + v.total, 0) + \"\")}</td>\n                                                                                        </tr>\n                                                                                    </tbody></table>\n                                                                            </div>\n\n                                                                        </div>\n                                                                        <div className=\"col-6\">\n                                                                        </div>\n                                                                        <div className=\"col-6\">\n                                                                            <div className=\"table-responsive\">\n                                                                                <table className=\"table\">\n                                                                                    <tbody>\n                                                                                        <tr>\n                                                                                            <td>\n                                                                                                <button className=\"btn btn-success btn-xs\" onClick={() => this.onSell(listDataBuy)}><i className=\"fas fa-cart-plus\" />{t('Confirm')}</button>\n                                                                                            </td>\n                                                                                        </tr>\n                                                                                    </tbody></table>\n                                                                            </div>\n\n                                                                        </div>\n                                                                    </div> : null\n                                                            }\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                    : null\n                            }\n                        </div>\n                        <Modal\n                            className=\"modal\"\n                            show={showQty}\n                            size=\"sm\"\n                            onHide={() => this.onClose()}\n                        >\n                            <Modal.Header>\n                                <Modal.Title>{t(\"Confirm\")}</Modal.Title>\n                                <Modal.Title>\n                                    <button\n                                        type=\"button\"\n                                        className=\"close\"\n                                        onClick={() => this.onClose()}\n                                    >\n                                        <span aria-hidden=\"true\">×</span>\n                                    </button>\n                                </Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                <div className=\"form-row\">\n                                    <div className=\"col-md-12\">\n                                        <div class=\"form-group\">\n                                            <label>ປ້ອນຈຳນວນຕົວຈິງທີ່ໄດ້ຮັບ / ລິດ</label>\n                                            <input\n                                                name=\"qty\"\n                                                value={qty}\n                                                type=\"number\"\n                                                className={\n                                                    errorqty === undefined\n                                                        ? \"form-control\"\n                                                        : errorqty\n                                                            ? \"form-control is-invalid\"\n                                                            : \"form-control is-valid\"\n                                                }\n                                                placeholder={t(\"qty\")}\n                                                onChange={(text) => this.onChangeTextqty(text)}\n                                            />\n                                            {errorqty ? (\n                                                <p class=\"text-danger\">{errorqty}</p>\n                                            ) : null}\n                                        </div>\n                                    </div>\n                                </div>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-default\"\n                                    onClick={() => this.onClose()}\n                                >\n                                    {t(\"clase\")}\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-primary\"\n                                    onClick={() => this.onConfrim()}\n                                    className={\n                                        !qty || errorqty\n                                            ? \"btn btn-secondary disabled\"\n                                            : \"btn btn-primary\"\n                                    }\n                                >\n                                    {t(\"Confirm\")}\n                                </button>\n                            </Modal.Footer>\n                        </Modal>\n\n\n                        <Modal\n                            className=\"modal\"\n                            show={modelInsert}\n                            size=\"sm\"\n                            onHide={() => this.onCloseInsert()}\n                        >\n                            <Modal.Header>\n                                <Modal.Title>{t(\"Confirm\")}</Modal.Title>\n                                <Modal.Title>\n                                    <button\n                                        type=\"button\"\n                                        className=\"close\"\n                                        onClick={() => this.onCloseInsert()}\n                                    >\n                                        <span aria-hidden=\"true\">×</span>\n                                    </button>\n                                </Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                                {/* <div className=\"form-row\">\n                                    <div className=\"col-md-12\">\n\n                                       \n                                    </div>\n                                </div> */}\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-default\"\n                                    onClick={() => this.onCloseInsert()}\n                                >\n                                    {t(\"clase\")}\n                                </button>\n                                <button\n                                    type=\"button\"\n                                    className=\"btn btn-primary\"\n                                    onClick={() => this.onConfrimInsert()}\n                                >\n                                    {t(\"Confirm\")}\n                                </button>\n                            </Modal.Footer>\n                        </Modal>\n\n\n                        <Modal\n                            className=\"modal\"\n                            show={alertModelPrint}\n                            size=\"lg\"\n                            onHide={() => this.onCloseAlertBill()}\n                        >\n                            <Modal.Header>\n                                <Modal.Title>{t(\"billImportbySup\")}</Modal.Title>\n                                <Modal.Title>\n                                    <button\n                                        type=\"button\"\n                                        className=\"close\"\n                                        onClick={() => this.onCloseAlertBill()}\n                                    >\n                                        <span aria-hidden=\"true\">×</span>\n                                    </button>\n                                </Modal.Title>\n                            </Modal.Header>\n                            <Modal.Body>\n                            {/* tp.ImpID, tpd.Qty,tpd.Price,tp.ImpDate,ts.supplier_name,tod.orders_id,tod.company,tos.oil_name */}\n                                <div className=\"form\" ref={el => (this.componentRef = el)}>\n                                    <div>\n                                        <p className=\"text-center\">{t('textHeader')}</p>\n                                        <p className=\"text-center\">{t('textDetail')}</p>\n                                        <h4 className=\"text-center\">{t('billImportbySup')}</h4>\n                                        <h4 className=\"text-center\">-----------------</h4>\n                                        <p className=\"text-center\"><Moment format='MMMM Do YYYY, h:mm:ss a'>{new Date()}</Moment></p>\n                                      \n                                    </div>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-6\">\n                                            <img\n                                                src={logo}\n                                                className=\"img-circle\"\n                                                style={{ width: 100, height: 50 }}\n                                            />\n                                            <p>{t('companyaName')}</p>\n                                            <p>{t('ContactInfo')}</p>\n                                            <p>{t('location')}</p>\n                                        </div>\n\n                                        <div className=\"col-md-6\">\n                                            <br />\n                                            <br />\n                                            <p className=\"text\">{t('supplier_name')}: {dataPrint.length > 0 ? dataPrint[0].supplier_name : null}</p>\n                                            <p className=\"text\">{t('address')}: {dataPrint.length > 0 ? dataPrint[0].ImpDate : null}</p>\n                                            <p className=\"text\">{t('date')}: {dataPrint.length > 0 ? dataPrint[0].company : null}</p>\n                                          \n\n                                        </div>\n                                    </div>\n\n\n                                    <div className=\"row\">\n                                        <div className=\"col-12 table-responsive\">\n                                            <div className=\"table-responsive\">\n                                                <table className=\"table table-hover table-bordered\">\n\n                                                    <thead>\n                                                        <tr>\n                                                            <th>{t('Oil')}</th>\n                                                            <th>{t('qty')}</th>\n                                                            <th>{t('Amount')}</th>\n                                                            <th>{t('Total')}</th>\n\n                                                        </tr>\n                                                    </thead>\n                                                    <tbody>\n                                                        {dataPrint ?\n                                                            dataPrint.map((item, i) => (\n                                                                <tr>\n                                                                    <td>{item.oil_name}</td>\n                                                                    <td>{formatNumber(item.Qty + \"\")}</td>\n                                                                    <td>{formatNumber(item.Price + \"\")}</td>\n                                                                    <td>{formatNumber(item.Qty * item.Price + \"\")}</td>\n                                                                </tr>\n                                                            )) : null}\n                                                    </tbody>\n                                                </table>\n                                            </div>\n                                            {\n                                                dataPrint.length > 0 ?\n                                                    <div className=\"row\">\n                                                        <div className=\"col-3\">\n                                                        </div>\n                                                        <div className=\"col-9\">\n                                                            <div className=\"table-responsive\">\n                                                                <table className=\"table\">\n                                                                    <tbody>\n                                                                        <tr>\n                                                                            <th>ລວມຈຳນວນ</th>\n                                                                            <td>{formatNumber(dataPrint.reduce((a, v) => a = a + parseInt(v.Qty), 0) + \"\")}</td>\n                                                                        </tr>\n                                                                        <tr>\n                                                                            <th>{t('Total')}</th>\n                                                                            <td>{formatNumber(dataPrint.reduce((a, v) => a = a + v.Qty * v.Price, 0) + \"\")}</td>\n                                                                        </tr>\n                                                                    </tbody></table>\n                                                            </div>\n                                                        </div>\n                                                    </div> : null\n                                            }\n                                        </div>\n                                    </div>\n\n                                </div>\n                            </Modal.Body>\n                            <Modal.Footer>\n                                <ReactToPrint\n                                    trigger={() => <button type=\"submit\" className=\"btn btn-success btn-xs\">\n                                        <i className=\"fas fa-sync-alt\" />{t(\"print\")}\n                                    </button>}\n                                    content={() => this.componentRef}\n                                />\n\n                            </Modal.Footer>\n                        </Modal>\n\n\n\n\n\n                    </section>\n                </div>\n            </div>\n\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n        dataResultOil: state.oilReducer.dataResultOil,\n        actionType: state.oilReducer.actionType,\n        responseCode: state.oilReducer.responseCode,\n        message: state.oilReducer.message,\n        // dataResultSupplier: state.supplierReducer.dataResultSupplier,\n        // actionTypeSupplier: state.supplierReducer.actionType,\n        dataResultOilByIdSupplier: state.oilReducer.dataResultOilByIdSupplier,\n\n\n        dataResultOrderNew: state.orderReducer.dataResultOrderNew,\n        actionTypeOrderNew: state.orderReducer.actionType,\n\n        dataResultMaxIdImport: state.importReducer.dataResultMaxIdImport,\n        actionTypeMaxIdImport: state.importReducer.actionType,\n\n        requestInsertImportDetail: state.orderReducer.requestInsertImportDetail,\n        actionTypeImportDetailNew: state.orderReducer.actionType,\n\n        dataResultOrder: state.orderReducer.dataResultOrder,\n        actionTypeOrder: state.orderReducer.actionType,\n\n        dataResultGetSearchOrderNew: state.orderReducer.dataResultGetSearchOrderNew,\n        actionTypeGetSearchOrder: state.orderReducer.actionType,\n\n        dataResultImportNew: state.importReducer.dataResultImportNew,\n        actionTypeImportNew: state.importReducer.actionType,\n\n        responseCodeImport: state.importReducer.responseCode,\n\n        dataResultImportDetailNew: state.importReducer.dataResultImportDetailNew,\n        actionTypeImportDetailNew: state.importReducer.actionType,\n\n        dataResultGetPrintImport: state.importReducer.dataResultGetPrintImport,\n        actionTypeImportPrint: state.importReducer.actionType,\n\n\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        requestGetAllOil: (data) => dispatch(requestGetAllOil(data)),\n        requestGetAllOilByIdSupplier: (data, token) => dispatch(requestGetAllOilByIdSupplier(data, token)),\n        requestInsertOrder: (data, token) => dispatch(requestInsertOrder(data, token)),\n        requestGetPrintImport: (data, token) => dispatch(requestGetPrintImport(data, token)),\n        requestGetMaxIdImport: (data, token) => dispatch(requestGetMaxIdImport(data, token)),\n        requestInsertOrderDetail: (data, token) => dispatch(requestInsertOrderDetail(data, token)),\n        requestGetAllSupplier: (data) => dispatch(requestGetAllSupplier(data)),\n        requestGetAllOrder: (data) => dispatch(requestGetAllOrder(data)),\n        requestGetSearchOrder: (data, token) => dispatch(requestGetSearchOrder(data, token)),\n        requestInsertImport: (data, token) => dispatch(requestInsertImport(data, token)),\n        requestInsertImportDetail: (data, token) => dispatch(requestInsertImportDetail(data, token)),\n\n    };\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(SellSrceen));","import {\n    INSRT_NEW_IMPORT,\n    GET_MAX_ID_IMPORT,\n    INSRT_NEW_IMPORT_DETAIL,\n    GET_PRINT_IMPORT\n  } from \"../utils/commonType\";\n\n  \n  export const requestInsertImport = (data, token) => {\n    return {\n      type: INSRT_NEW_IMPORT,\n      data,\n      token,\n    };\n  };\n  export const requestGetMaxIdImport = (data) => {\n    return {\n      type: GET_MAX_ID_IMPORT,\n      data,\n    };\n  };\n\n  export const requestInsertImportDetail = (data, token) => {\n    return {\n      type: INSRT_NEW_IMPORT_DETAIL,\n      data,\n      token,\n    };\n  };\n\n  export const requestGetPrintImport = (data, token) => {\n    return {\n      type: GET_PRINT_IMPORT,\n      data,\n      token,\n    };\n  };","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { withTranslation } from \"react-i18next\";\nimport { LoadingComponet } from \"../../components\";\nimport Cookie from \"js-cookie\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport {\n    GET_ALL_REPORT_FAILED,\n    GET_ALL_REPORT_SUCCESS,\n\n} from \"../../utils/commonType\";\nimport { formatNumber } from '../../utils/Formater'\nimport { requestGetReport } from '../../actions/reportAction'\nimport ReactToPrint from \"react-to-print\";\nimport logo from '../../img/11_PTT.png';\nimport Moment from 'react-moment';\n// import Lottie from \"lottie-web\";\n\nconst MySwal = withReactContent(Swal);\nclass SellSrceen extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            data: []\n        };\n    }\n    componentDidMount() {\n        const userInfo = Cookie.getJSON(\"userInfo\") || null;\n        let token = userInfo ? userInfo.token : null;\n        let user_id = userInfo.auth[0].user_id;\n        this.setState({ token, user_id });\n\n    }\n\n    loaderOrder(token) {\n        this.props.requestGetAllOrder(token);\n        this.setState({\n            isCallGetOrder: true,\n        });\n    }\n    componentWillReceiveProps(nextProps) {\n        const { t } = this.props;\n        const { onGetInfo } = this.state;\n        if (onGetInfo) {\n            if (nextProps.dataResultReport) {\n                switch (nextProps.actionType) {\n                    case GET_ALL_REPORT_SUCCESS:\n                        switch (nextProps.dataResultReport.responseCode) {\n                            case \"00000\":\n                                let a = nextProps.dataResultReport.reportValueSell;\n\n                                this.setState({ onGetInfo: false, loading: false, data: a });\n                                break;\n                            case nextProps.responseCode:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.dataResultReport.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onGetInfo: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case GET_ALL_REPORT_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onGetInfo: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    onChangeTextstartDate = (text) => {\n        const value = text.target.value;\n        const errorstartDate =\n            !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\n        this.setState({ startDate: value, errorstartDate, Date: value });\n    };\n\n    onChangeTextendDate = (text) => {\n        const value = text.target.value;\n        const errorendDate =\n            !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\n        this.setState({ endDate: value, errorendDate, Date: value });\n    };\n    onClickScrach = () => {\n        const { t } = this.props;\n        const { endDate, startDate, token } = this.state\n        if (endDate && startDate) {\n            let data = 'REPORT_SELL' + '&' + startDate + '&' + endDate\n            this.props.requestGetReport(data, token);\n            this.setState({ loading: true, onGetInfo: true })\n        } else {\n            MySwal.fire({\n                icon: \"error\",\n                title: t(\"info\"),\n                text: t(\"InformationOncomplete\"),\n                footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n            });\n        }\n    }\n\n\n    render() {\n        const { t } = this.props;\n        const { loading, startDate, errorstartDate, endDate, errorendDate, data } = this.state\n\n        return (\n            <div>\n                {loading ? <LoadingComponet /> : null}\n                <div className=\"content-wrapper\">\n                    <section className=\"content-header\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row mb-2\">\n                                <div className=\"col-sm-6\">\n                                    <h3>{t('SalesReport')}</h3>\n                                </div>\n                                <div className=\"col-sm-6\">\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-md-3\">\n                                    <div class=\"form-group\">\n\n                                        <input\n                                            name=\"date\"\n                                            value={startDate}\n                                            type=\"date\"\n                                            className={\n                                                errorstartDate === undefined\n                                                    ? \"form-control\"\n                                                    : errorstartDate\n                                                        ? \"form-control is-invalid\"\n                                                        : \"form-control is-valid\"\n                                            }\n                                            onChange={(text) => this.onChangeTextstartDate(text)}\n                                        />\n                                        {errorstartDate ? (\n                                            <p class=\"text-danger\">{errorstartDate}</p>\n                                        ) : null}\n                                    </div>\n                                </div>\n\n                                <div className=\"col-md-3\">\n                                    <div class=\"form-group\">\n\n                                        <input\n                                            name=\"date\"\n                                            value={endDate}\n                                            type=\"date\"\n                                            className={\n                                                errorendDate === undefined\n                                                    ? \"form-control\"\n                                                    : errorendDate\n                                                        ? \"form-control is-invalid\"\n                                                        : \"form-control is-valid\"\n                                            }\n                                            onChange={(text) => this.onChangeTextendDate(text)}\n                                        />\n                                        {errorendDate ? (\n                                            <p class=\"text-danger\">{errorendDate}</p>\n                                        ) : null}\n                                    </div>\n\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <button\n                                            type=\"button\"\n                                            className=\"btn btn-info\"\n                                            onClick={() => this.onClickScrach()}\n                                        >\n\n                                            {t(\"search\")}\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            {data.length > 0 ?\n                                <div className=\"container-fluid\" ref={el => (this.componentRef = el)}>\n                                    <br></br>\n                                    <p className=\"text-center\">{t('textHeader')}</p>\n                                    <p className=\"text-center\">{t('textDetail')}</p>\n                                    <h4 className=\"text-center\">{t('SalesReport')}</h4>\n                                    <h4 className=\"text-center\">-----------------</h4>\n                                    <p className=\"text-center\"><Moment format='MMMM Do YYYY, h:mm:ss a'>{new Date()}</Moment></p>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <img\n                                                src={logo}\n                                                className=\"img-circle\"\n                                                style={{ width: 100, height: 50 }}\n                                            />\n                                            <h5>{t('companyaName')}</h5>\n                                            <h6>{t('ContactInfo')}</h6>\n                                            <h6>{t('location')}</h6>\n                                        </div>\n\n                                    </div>\n                                    <div className=\"row\">\n\n\n                                        <div className=\"col-12\">\n                                            <div className=\"card\">\n                                                <div className=\"card-header\">\n                                                    <h3 className=\"card-title\">{t(\"Description\")}</h3>\n                                                    <div className=\"card-tools\">\n                                                        <div className=\"input-group input-group-sm\">\n                                                            <ReactToPrint\n                                                                trigger={() => <button type=\"submit\" className=\"btn btn-success btn-xs\">\n                                                                    <i className=\"fas fa-sync-alt\" />\n                                                                </button>}\n                                                                content={() => this.componentRef}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"card-body table-responsive p-0\">\n                                                    <table className=\"table table-hover table-bordered\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th>{t(\"Level\")}</th>\n                                                                <th>{t(\"car_id\")}</th>\n                                                                <th>{t(\"oil_name\")}</th>\n                                                                <th>{t(\"qty\")}</th>\n                                                                <th>{t(\"price\")}</th>\n                                                                <th>{t(\"Total\")}</th>\n                                                                <th>{t(\"createdAt\")}</th>\n                                                                <th>{t(\"username\")}</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            {data.map((item, i) => (\n                                                                <tr>\n                                                                    <td>{i + 1}</td>\n                                                                    <td>{item.sales_id}</td>\n                                                                    <td>{item.oil_name}</td>\n                                                                    <td>{formatNumber(item.Qty + '')}</td>\n                                                                    <td>{formatNumber(item.Price + '')}</td>\n                                                                    <td>{formatNumber(item.total + '')}</td>\n                                                                    <td>\n                                                                        <Moment format=\"YYYY/MM/DD\">{item.createdAt}</Moment>\n                                                                    </td>\n                                                                    <td>{item.username}</td>\n                                                                </tr>\n                                                            ))\n                                                            }\n                                                        </tbody>\n                                                    </table>\n                                                    {\n                                                        data.length > 0 ?\n                                                            <div className=\"row\">\n                                                                <div className=\"col-3\">\n                                                                </div>\n                                                                <div className=\"col-9\">\n                                                                    <div className=\"table-responsive\">\n                                                                        <table className=\"table\">\n                                                                            <tbody>\n                                                                                <tr>\n                                                                                    <th>{t('qty')}</th>\n                                                                                    <td>{formatNumber(data.reduce((a, v) => a = a + parseInt(v.Qty), 0) + \"\")}</td>\n                                                                                </tr>\n                                                                                <tr>\n                                                                                    <th>{t('Total')}</th>\n                                                                                    <td>{formatNumber(data.reduce((a, v) => a = a + v.total, 0) + \"\")}</td>\n                                                                                </tr>\n                                                                            </tbody></table>\n                                                                    </div>\n\n                                                                </div>\n\n                                                            </div> : null\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                : <div className=\"row\">\n                                    <div className=\"col-md-4\"></div>\n                                    <div className=\"col-md-4\">\n                                        <h3 className=\"text-center\">{t('Nodata')}</h3>\n\n                                    </div>\n                                    <div className=\"col-md-4\"></div>\n                                </div>}\n\n                        </div>\n\n                    </section>\n                </div>\n            </div>\n\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n\n        dataResultReport: state.reportReducer.dataResultReport,\n        actionType: state.reportReducer.actionType,\n        responseCode: state.reportReducer.responseCode,\n\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        requestGetReport: (data, token) => dispatch(requestGetReport(data, token)),\n    };\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(SellSrceen));","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { withTranslation } from \"react-i18next\";\nimport { LoadingComponet } from \"../../components\";\nimport Cookie from \"js-cookie\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport {\n    GET_ALL_REPORT_FAILED,\n    GET_ALL_REPORT_SUCCESS,\n\n} from \"../../utils/commonType\";\nimport { formatNumber } from '../../utils/Formater'\nimport { requestGetReport } from '../../actions/reportAction'\nimport ReactToPrint from \"react-to-print\";\nimport logo from '../../img/11_PTT.png';\nimport Moment from 'react-moment';\n// import Lottie from \"lottie-web\";\n\nconst MySwal = withReactContent(Swal);\nclass SellSrceen extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            data: []\n        };\n    }\n    componentDidMount() {\n        const userInfo = Cookie.getJSON(\"userInfo\") || null;\n        let token = userInfo ? userInfo.token : null;\n        let user_id = userInfo.auth[0].user_id;\n        this.setState({ token, user_id });\n\n    }\n\n    loaderOrder(token) {\n        this.props.requestGetAllOrder(token);\n        this.setState({\n            isCallGetOrder: true,\n        });\n    }\n    componentWillReceiveProps(nextProps) {\n        const { t } = this.props;\n        const { onGetInfo } = this.state;\n        if (onGetInfo) {\n            if (nextProps.dataResultReport) {\n                switch (nextProps.actionType) {\n                    case GET_ALL_REPORT_SUCCESS:\n                        switch (nextProps.dataResultReport.responseCode) {\n                            case \"00000\":\n                                let a = nextProps.dataResultReport.reportValueOrder;\n                                this.setState({ onGetInfo: false, loading: false, data: a });\n                                break;\n                            case nextProps.responseCode:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.dataResultReport.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onGetInfo: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case GET_ALL_REPORT_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onGetInfo: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    onChangeTextstartDate = (text) => {\n        const value = text.target.value;\n        const errorstartDate =\n            !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\n        this.setState({ startDate: value, errorstartDate, Date: value });\n    };\n\n    onChangeTextendDate = (text) => {\n        const value = text.target.value;\n        const errorendDate =\n            !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\n        this.setState({ endDate: value, errorendDate, Date: value });\n    };\n    onClickScrach = () => {\n        const { t } = this.props;\n        const { endDate, startDate, token } = this.state\n        if (endDate && startDate) {\n            let data = 'REPORT_ORDER' + '&' + startDate + '&' + endDate\n            this.props.requestGetReport(data, token);\n            this.setState({ loading: true, onGetInfo: true })\n        } else {\n            MySwal.fire({\n                icon: \"error\",\n                title: t(\"info\"),\n                text: t(\"InformationOncomplete\"),\n                footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n            });\n        }\n    }\n\n\n    render() {\n        const { t } = this.props;\n        const { loading, startDate, errorstartDate, endDate, errorendDate, data } = this.state\n\n        return (\n            <div>\n                {loading ? <LoadingComponet /> : null}\n                <div className=\"content-wrapper\">\n                    <section className=\"content-header\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row mb-2\">\n                                <div className=\"col-sm-6\">\n                                    <h3>{t('OrderReport')}</h3>\n                                </div>\n                                <div className=\"col-sm-6\">\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-md-3\">\n                                    <div class=\"form-group\">\n\n                                        <input\n                                            name=\"date\"\n                                            value={startDate}\n                                            type=\"date\"\n                                            className={\n                                                errorstartDate === undefined\n                                                    ? \"form-control\"\n                                                    : errorstartDate\n                                                        ? \"form-control is-invalid\"\n                                                        : \"form-control is-valid\"\n                                            }\n                                            onChange={(text) => this.onChangeTextstartDate(text)}\n                                        />\n                                        {errorstartDate ? (\n                                            <p class=\"text-danger\">{errorstartDate}</p>\n                                        ) : null}\n                                    </div>\n                                </div>\n\n                                <div className=\"col-md-3\">\n                                    <div class=\"form-group\">\n\n                                        <input\n                                            name=\"date\"\n                                            value={endDate}\n                                            type=\"date\"\n                                            className={\n                                                errorendDate === undefined\n                                                    ? \"form-control\"\n                                                    : errorendDate\n                                                        ? \"form-control is-invalid\"\n                                                        : \"form-control is-valid\"\n                                            }\n                                            onChange={(text) => this.onChangeTextendDate(text)}\n                                        />\n                                        {errorendDate ? (\n                                            <p class=\"text-danger\">{errorendDate}</p>\n                                        ) : null}\n                                    </div>\n\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <button\n                                            type=\"button\"\n                                            className=\"btn btn-info\"\n                                            onClick={() => this.onClickScrach()}\n                                        >\n\n                                            {t(\"search\")}\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            {data.length > 0 ?\n                                <div className=\"container-fluid\" ref={el => (this.componentRef = el)}>\n                                    <br></br>\n                                    <p className=\"text-center\">{t('textHeader')}</p>\n                                    <p className=\"text-center\">{t('textDetail')}</p>\n                                    <h4 className=\"text-center\">{t('OrderReport')}</h4>\n                                    <h4 className=\"text-center\">-----------------</h4>\n                                    <p className=\"text-center\"><Moment format='MMMM Do YYYY, h:mm:ss a'>{new Date()}</Moment></p>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <img\n                                                src={logo}\n                                                className=\"img-circle\"\n                                                style={{ width: 100, height: 50 }}\n                                            />\n                                            <h5>{t('companyaName')}</h5>\n                                            <h6>{t('ContactInfo')}</h6>\n                                            <h6>{t('location')}</h6>\n                                        </div>\n\n                                    </div>\n                                    <div className=\"row\">\n\n\n                                        <div className=\"col-12\">\n                                            <div className=\"card\">\n                                                <div className=\"card-header\">\n                                                    <h3 className=\"card-title\">{t(\"Description\")}</h3>\n                                                    <div className=\"card-tools\">\n                                                        <div className=\"input-group input-group-sm\">\n                                                            <ReactToPrint\n                                                                trigger={() => <button type=\"submit\" className=\"btn btn-success btn-xs\">\n                                                                    <i className=\"fas fa-sync-alt\" />\n                                                                </button>}\n                                                                content={() => this.componentRef}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"card-body table-responsive p-0\">\n                                                    <table className=\"table table-hover table-bordered\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th>{t(\"Level\")}</th>\n                                                                <th>{t(\"orders_id\")}</th>\n                                                                <th>{t(\"oil_name\")}</th>\n                                                                <th>{t(\"qty\")}</th>\n                                                                <th>{t(\"price\")}</th>\n                                                                <th>{t(\"Total\")}</th>\n                                                                <th>{t('service')}</th>\n                                                                <th>{t('company')}</th>\n                                                                <th>{t(\"createdAt\")}</th>\n                                                                <th>{t(\"status_order\")}</th>\n                                                                <th>{t(\"username\")}</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            {data.map((item, i) => (\n                                                                <tr>\n                                                                    <td>{i + 1}</td>\n                                                                    <td>{item.orders_id}</td>\n                                                                    <td>{item.oil_name}</td>\n                                                                    <td>{formatNumber(item.qty + '')}</td>\n                                                                    <td>{formatNumber(item.price + '')}</td>\n                                                                    <td>{formatNumber(item.total + '')}</td>\n                                                                    <td>{item.service}</td>\n                                                                    <td>{item.company}</td>\n                                                                    <td>\n                                                                        <Moment format=\"YYYY/MM/DD\">{item.createdat}</Moment>\n                                                                    </td>\n                                                                    <td>{item.status_order}</td>\n                                                                    <td>{item.username}</td>\n                                                                </tr>\n                                                            ))\n                                                            }\n                                                        </tbody>\n\n                                                    </table>\n                                                    {\n                                                        data.length > 0 ?\n                                                            <div className=\"row\">\n                                                                <div className=\"col-3\">\n                                                                </div>\n                                                                <div className=\"col-9\">\n                                                                    <div className=\"table-responsive\">\n                                                                        <table className=\"table\">\n                                                                            <tbody>\n                                                                                <tr>\n                                                                                    <th>{t('qty')}</th>\n                                                                                    <td>{formatNumber(data.reduce((a, v) => a = a + parseInt(v.qty), 0) + \"\")}</td>\n                                                                                </tr>\n                                                                                <tr>\n                                                                                    <th>{t('Total')}</th>\n                                                                                    <td>{formatNumber(data.reduce((a, v) => a = a + v.total, 0) + \"\")}</td>\n                                                                                </tr>\n                                                                            </tbody></table>\n                                                                    </div>\n\n                                                                </div>\n\n                                                            </div> : null\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                : <div className=\"row\">\n                                    <div className=\"col-md-4\"></div>\n                                    <div className=\"col-md-4\">\n                                        <h3 className=\"text-center\">{t('Nodata')}</h3>\n\n                                    </div>\n                                    <div className=\"col-md-4\"></div>\n                                </div>}\n\n                        </div>\n\n                    </section>\n                </div>\n            </div>\n\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n\n        dataResultReport: state.reportReducer.dataResultReport,\n        actionType: state.reportReducer.actionType,\n        responseCode: state.reportReducer.responseCode,\n\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        requestGetReport: (data, token) => dispatch(requestGetReport(data, token)),\n    };\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(SellSrceen));","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { withTranslation } from \"react-i18next\";\nimport { LoadingComponet } from \"../../components\";\nimport Cookie from \"js-cookie\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport {\n    GET_ALL_REPORT_FAILED,\n    GET_ALL_REPORT_SUCCESS,\n\n} from \"../../utils/commonType\";\nimport { formatNumber } from '../../utils/Formater'\nimport { requestGetReport } from '../../actions/reportAction'\nimport ReactToPrint from \"react-to-print\";\nimport logo from '../../img/11_PTT.png';\nimport Moment from 'react-moment';\n// import Lottie from \"lottie-web\";\n\nconst MySwal = withReactContent(Swal);\nclass SellSrceen extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            data: []\n        };\n    }\n    componentDidMount() {\n        const userInfo = Cookie.getJSON(\"userInfo\") || null;\n        let token = userInfo ? userInfo.token : null;\n        let user_id = userInfo.auth[0].user_id;\n        this.setState({ token, user_id });\n\n    }\n\n    loaderOrder(token) {\n        this.props.requestGetAllOrder(token);\n        this.setState({\n            isCallGetOrder: true,\n        });\n    }\n    componentWillReceiveProps(nextProps) {\n        const { t } = this.props;\n        const { onGetInfo } = this.state;\n        if (onGetInfo) {\n            if (nextProps.dataResultReport) {\n                switch (nextProps.actionType) {\n                    case GET_ALL_REPORT_SUCCESS:\n                        switch (nextProps.dataResultReport.responseCode) {\n                            case \"00000\":\n                                let a = nextProps.dataResultReport.reportValueImport;\n                                this.setState({ onGetInfo: false, loading: false, data: a });\n                                break;\n                            case nextProps.responseCode:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.dataResultReport.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onGetInfo: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case GET_ALL_REPORT_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onGetInfo: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    onChangeTextstartDate = (text) => {\n        const value = text.target.value;\n        const errorstartDate =\n            !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\n        this.setState({ startDate: value, errorstartDate, Date: value });\n    };\n\n    onChangeTextendDate = (text) => {\n        const value = text.target.value;\n        const errorendDate =\n            !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\n        this.setState({ endDate: value, errorendDate, Date: value });\n    };\n    onClickScrach = () => {\n        const { t } = this.props;\n        const { endDate, startDate, token } = this.state\n        if (endDate && startDate) {\n            let data = 'REPORT_IMPORT' + '&' + startDate + '&' + endDate\n            this.props.requestGetReport(data, token);\n            this.setState({ loading: true, onGetInfo: true })\n        } else {\n            MySwal.fire({\n                icon: \"error\",\n                title: t(\"info\"),\n                text: t(\"InformationOncomplete\"),\n                footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n            });\n        }\n    }\n\n\n    render() {\n        const { t } = this.props;\n        const { loading, startDate, errorstartDate, endDate, errorendDate, data } = this.state\n\n        return (\n            <div>\n                {loading ? <LoadingComponet /> : null}\n                <div className=\"content-wrapper\">\n                    <section className=\"content-header\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row mb-2\">\n                                <div className=\"col-sm-6\">\n                                    <h3>{t('ImportReport')}</h3>\n                                </div>\n                                <div className=\"col-sm-6\">\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-md-3\">\n                                    <div class=\"form-group\">\n\n                                        <input\n                                            name=\"date\"\n                                            value={startDate}\n                                            type=\"date\"\n                                            className={\n                                                errorstartDate === undefined\n                                                    ? \"form-control\"\n                                                    : errorstartDate\n                                                        ? \"form-control is-invalid\"\n                                                        : \"form-control is-valid\"\n                                            }\n                                            onChange={(text) => this.onChangeTextstartDate(text)}\n                                        />\n                                        {errorstartDate ? (\n                                            <p class=\"text-danger\">{errorstartDate}</p>\n                                        ) : null}\n                                    </div>\n                                </div>\n\n                                <div className=\"col-md-3\">\n                                    <div class=\"form-group\">\n\n                                        <input\n                                            name=\"date\"\n                                            value={endDate}\n                                            type=\"date\"\n                                            className={\n                                                errorendDate === undefined\n                                                    ? \"form-control\"\n                                                    : errorendDate\n                                                        ? \"form-control is-invalid\"\n                                                        : \"form-control is-valid\"\n                                            }\n                                            onChange={(text) => this.onChangeTextendDate(text)}\n                                        />\n                                        {errorendDate ? (\n                                            <p class=\"text-danger\">{errorendDate}</p>\n                                        ) : null}\n                                    </div>\n\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <button\n                                            type=\"button\"\n                                            className=\"btn btn-info\"\n                                            onClick={() => this.onClickScrach()}\n                                        >\n\n                                            {t(\"search\")}\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            {data.length > 0 ?\n                                <div className=\"container-fluid\" ref={el => (this.componentRef = el)}>\n                                    <br></br>\n                                    <p className=\"text-center\">{t('textHeader')}</p>\n                                    <p className=\"text-center\">{t('textDetail')}</p>\n                                    <h4 className=\"text-center\">{t('ImportReport')}</h4>\n                                    <h4 className=\"text-center\">-----------------</h4>\n                                    <p className=\"text-center\"><Moment format='MMMM Do YYYY, h:mm:ss a'>{new Date()}</Moment></p>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <img\n                                                src={logo}\n                                                className=\"img-circle\"\n                                                style={{ width: 100, height: 50 }}\n                                            />\n                                            <h5>{t('companyaName')}</h5>\n                                            <h6>{t('ContactInfo')}</h6>\n                                            <h6>{t('location')}</h6>\n                                        </div>\n\n                                    </div>\n                                    <div className=\"row\">\n\n\n                                        <div className=\"col-12\">\n                                            <div className=\"card\">\n                                                <div className=\"card-header\">\n                                                    <h3 className=\"card-title\">{t(\"Description\")}</h3>\n                                                    <div className=\"card-tools\">\n                                                        <div className=\"input-group input-group-sm\">\n                                                            <ReactToPrint\n                                                                trigger={() => <button type=\"submit\" className=\"btn btn-success btn-xs\">\n                                                                    <i className=\"fas fa-sync-alt\" />\n                                                                </button>}\n                                                                content={() => this.componentRef}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"card-body table-responsive p-0\">\n                                                    <table className=\"table table-hover table-bordered\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th>{t(\"Level\")}</th>\n                                                                <th>{t(\"impid\")}</th>\n                                                                <th>{t(\"oil_name\")}</th>\n                                                                <th>{t(\"qty\")}</th>\n                                                                <th>{t(\"price\")}</th>\n                                                                <th>{t(\"Total\")}</th>\n                                                                <th>{t('supplier_name')}</th>\n                                                                <th>{t('company')}</th>\n                                                                <th>{t(\"createdAt\")}</th>\n                                                                <th>{t(\"username\")}</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            {data.map((item, i) => (\n                                                                <tr>\n                                                                    <td>{i + 1}</td>\n                                                                    <td>{item.impid}</td>\n                                                                    <td>{item.oil_name}</td>\n                                                                    <td>{formatNumber(item.qty + '')}</td>\n                                                                    <td>{formatNumber(item.price + '')}</td>\n                                                                    <td>{formatNumber(item.total + '')}</td>\n                                                                    <td>{item.supplier_name}</td>\n                                                                    <td>{item.company}</td>\n                                                                    <td>{item.impdate}</td>\n                                                                    <td>{item.username}</td>\n                                                                </tr>\n                                                            ))\n                                                            }\n                                                        </tbody>\n                                                    </table>\n                                                    {\n                                                        data.length > 0 ?\n                                                            <div className=\"row\">\n                                                                <div className=\"col-3\">\n                                                                </div>\n                                                                <div className=\"col-9\">\n                                                                    <div className=\"table-responsive\">\n                                                                        <table className=\"table\">\n                                                                            <tbody>\n                                                                                <tr>\n                                                                                    <th>{t('qty')}</th>\n                                                                                    <td>{formatNumber(data.reduce((a, v) => a = a + parseInt(v.qty), 0) + \"\")}</td>\n                                                                                </tr>\n                                                                                <tr>\n                                                                                    <th>{t('Total')}</th>\n                                                                                    <td>{formatNumber(data.reduce((a, v) => a = a + v.total, 0) + \"\")}</td>\n                                                                                </tr>\n                                                                            </tbody></table>\n                                                                    </div>\n\n                                                                </div>\n\n                                                            </div> : null\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                : <div className=\"row\">\n                                    <div className=\"col-md-4\"></div>\n                                    <div className=\"col-md-4\">\n                                        <h3 className=\"text-center\">{t('Nodata')}</h3>\n                                        \n                                    </div>\n                                    <div className=\"col-md-4\"></div>\n                                </div>}\n\n                        </div>\n\n                    </section>\n                </div>\n            </div>\n\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n\n        dataResultReport: state.reportReducer.dataResultReport,\n        actionType: state.reportReducer.actionType,\n        responseCode: state.reportReducer.responseCode,\n\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        requestGetReport: (data, token) => dispatch(requestGetReport(data, token)),\n    };\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(SellSrceen));","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { withTranslation } from \"react-i18next\";\nimport { LoadingComponet } from \"../../components\";\nimport Cookie from \"js-cookie\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport {\n    GET_ALL_REPORT_FAILED,\n    GET_ALL_REPORT_SUCCESS,\n\n} from \"../../utils/commonType\";\nimport { formatNumber } from '../../utils/Formater'\nimport { requestGetReport } from '../../actions/reportAction'\nimport ReactToPrint from \"react-to-print\";\nimport logo from '../../img/11_PTT.png';\nimport Moment from 'react-moment';\n// import Lottie from \"lottie-web\";\n\nconst MySwal = withReactContent(Swal);\nclass SellSrceen extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            data: []\n        };\n    }\n    componentDidMount() {\n        const userInfo = Cookie.getJSON(\"userInfo\") || null;\n        let token = userInfo ? userInfo.token : null;\n        let user_id = userInfo.auth[0].user_id;\n        this.setState({ token, user_id });\n\n    }\n\n    loaderOrder(token) {\n        this.props.requestGetAllOrder(token);\n        this.setState({\n            isCallGetOrder: true,\n        });\n    }\n    componentWillReceiveProps(nextProps) {\n        const { t } = this.props;\n        const { onGetInfo } = this.state;\n        if (onGetInfo) {\n            if (nextProps.dataResultReport) {\n                switch (nextProps.actionType) {\n                    case GET_ALL_REPORT_SUCCESS:\n                        switch (nextProps.dataResultReport.responseCode) {\n                            case \"00000\":\n                                let a = nextProps.dataResultReport.reportValueTransfer;\n\n                                this.setState({ onGetInfo: false, loading: false, data: a });\n                                break;\n                            case nextProps.responseCode:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.dataResultReport.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onGetInfo: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case GET_ALL_REPORT_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onGetInfo: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    onChangeTextstartDate = (text) => {\n        const value = text.target.value;\n        const errorstartDate =\n            !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\n        this.setState({ startDate: value, errorstartDate, Date: value });\n    };\n\n    onChangeTextendDate = (text) => {\n        const value = text.target.value;\n        const errorendDate =\n            !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\n        this.setState({ endDate: value, errorendDate, Date: value });\n    };\n    onClickScrach = () => {\n        const { t } = this.props;\n        const { endDate, startDate, token } = this.state\n        if (endDate && startDate) {\n            let data = 'REPORT_TRANSFER' + '&' + startDate + '&' + endDate\n            this.props.requestGetReport(data, token);\n            this.setState({ loading: true, onGetInfo: true })\n        } else {\n            MySwal.fire({\n                icon: \"error\",\n                title: t(\"info\"),\n                text: t(\"InformationOncomplete\"),\n                footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n            });\n        }\n    }\n\n\n    render() {\n        const { t } = this.props;\n        const { loading, startDate, errorstartDate, endDate, errorendDate, data } = this.state\n\n        return (\n            <div>\n                {loading ? <LoadingComponet /> : null}\n                <div className=\"content-wrapper\">\n                    <section className=\"content-header\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row mb-2\">\n                                <div className=\"col-sm-6\">\n                                    <h3>{t('ReportFuelDeliveryInformation')}</h3>\n                                </div>\n                                <div className=\"col-sm-6\">\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-md-3\">\n                                    <div class=\"form-group\">\n\n                                        <input\n                                            name=\"date\"\n                                            value={startDate}\n                                            type=\"date\"\n                                            className={\n                                                errorstartDate === undefined\n                                                    ? \"form-control\"\n                                                    : errorstartDate\n                                                        ? \"form-control is-invalid\"\n                                                        : \"form-control is-valid\"\n                                            }\n                                            onChange={(text) => this.onChangeTextstartDate(text)}\n                                        />\n                                        {errorstartDate ? (\n                                            <p class=\"text-danger\">{errorstartDate}</p>\n                                        ) : null}\n                                    </div>\n                                </div>\n\n                                <div className=\"col-md-3\">\n                                    <div class=\"form-group\">\n\n                                        <input\n                                            name=\"date\"\n                                            value={endDate}\n                                            type=\"date\"\n                                            className={\n                                                errorendDate === undefined\n                                                    ? \"form-control\"\n                                                    : errorendDate\n                                                        ? \"form-control is-invalid\"\n                                                        : \"form-control is-valid\"\n                                            }\n                                            onChange={(text) => this.onChangeTextendDate(text)}\n                                        />\n                                        {errorendDate ? (\n                                            <p class=\"text-danger\">{errorendDate}</p>\n                                        ) : null}\n                                    </div>\n\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <button\n                                            type=\"button\"\n                                            className=\"btn btn-info\"\n                                            onClick={() => this.onClickScrach()}\n                                        >\n\n                                            {t(\"search\")}\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            {\n                                data ?\n                                    data.length > 0 ?\n                                        <div className=\"container-fluid\" ref={el => (this.componentRef = el)}>\n                                            <br></br>\n                                            <p className=\"text-center\">{t('textHeader')}</p>\n                                            <p className=\"text-center\">{t('textDetail')}</p>\n                                            <h4 className=\"text-center\">{t('ReportFuelDeliveryInformation')}</h4>\n                                            <h4 className=\"text-center\">-----------------</h4>\n                                            <p className=\"text-center\"><Moment format='MMMM Do YYYY, h:mm:ss a'>{new Date()}</Moment></p>\n                                            <div className=\"row\">\n                                                <div className=\"col-md-12\">\n                                                    <img\n                                                        src={logo}\n                                                        className=\"img-circle\"\n                                                        style={{ width: 100, height: 50 }}\n                                                    />\n                                                    <h5>{t('companyaName')}</h5>\n                                                    <h6>{t('ContactInfo')}</h6>\n                                                    <h6>{t('location')}</h6>\n                                                </div>\n\n                                            </div>\n                                            <div className=\"row\">\n\n\n                                                <div className=\"col-12\">\n                                                    <div className=\"card\">\n                                                        <div className=\"card-header\">\n                                                            <h3 className=\"card-title\">{t(\"Description\")}</h3>\n                                                            <div className=\"card-tools\">\n                                                                <div className=\"input-group input-group-sm\">\n                                                                    <ReactToPrint\n                                                                        trigger={() => <button type=\"submit\" className=\"btn btn-success btn-xs\">\n                                                                            <i className=\"fas fa-sync-alt\" />\n                                                                        </button>}\n                                                                        content={() => this.componentRef}\n                                                                    />\n                                                                </div>\n                                                            </div>\n                                                        </div>\n\n                                                        <div className=\"card-body table-responsive p-0\">\n                                                            <table className=\"table table-hover table-bordered\">\n                                                                <thead>\n                                                                    <tr>\n                                                                        <th>{t(\"Level\")}</th>\n                                                                        <th>{t(\"transport_id\")}</th>\n                                                                        <th>{t(\"id_documents\")}</th>\n                                                                        <th>{t(\"address\")}</th>\n                                                                        <th>{t(\"dimention\")}</th>\n                                                                        <th>{t(\"orders_id\")}</th>\n                                                                        <th>{t(\"service\")}</th>\n                                                                        <th>{t(\"oils_id\")}</th>\n                                                                        <th>{t(\"oil_name\")}</th>\n                                                                        <th>{t(\"company\")}</th>\n                                                                        <th>{t(\"supplier_id\")}</th>\n                                                                        <th>{t(\"supplier_name\")}</th>\n                                                                        <th>{t(\"createdAt\")}</th>\n                                                                      \n                                                                        <th>{t(\"car_id\")}</th>\n                                                                        <th>{t(\"car_name\")}</th>\n                                                                        <th>{t(\"username\")}</th>\n                                                                    </tr>\n                                                                </thead>\n                                                                <tbody>\n                                                                    {data.map((item, i) => (\n                                                                        <tr>\n                                                                            <td>{i + 1}</td>\n                                                                            <td>{item.transport_id}</td>\n                                                                            <td>{item.id_documents}</td>\n                                                                            <td>{item.address}</td>\n                                                                            <td>{item.dimention}</td>\n                                                                            <td>{item.orders_id}</td>\n                                                                            <td>{item.service}</td>\n                                                                            <td>{item.oils_id}</td>\n                                                                            <td>{item.oil_name}</td>\n                                                                            <td>{item.company}</td>\n                                                                            <td>{item.supplier_id}</td>\n                                                                            <td>{item.supplier_name}</td>\n                                                                            <td>\n                                                                            <Moment format=\"YYYY/MM/DD\">{item.createdat}</Moment>\n                                                                            </td>\n                                                                           \n                                                                            <td>{item.car_id}</td>\n                                                                            <td>{item.car_name}</td>\n                                                                            <td>{item.username}</td>\n                                                                        </tr>\n                                                                    ))\n                                                                    }\n                                                                </tbody>\n                                                            </table>\n\n                                                        </div>\n                                                    </div>\n                                                </div>\n                                            </div>\n                                        </div>\n                                        : <div className=\"row\">\n                                            <div className=\"col-md-4\"></div>\n                                            <div className=\"col-md-4\">\n                                                <h3 className=\"text-center\">{t('Nodata')}</h3>\n\n                                            </div>\n                                            <div className=\"col-md-4\"></div>\n                                        </div>\n                                    : null\n                            }\n\n                        </div>\n\n                    </section>\n                </div>\n            </div>\n\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n\n        dataResultReport: state.reportReducer.dataResultReport,\n        actionType: state.reportReducer.actionType,\n        responseCode: state.reportReducer.responseCode,\n\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        requestGetReport: (data, token) => dispatch(requestGetReport(data, token)),\n    };\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(SellSrceen));","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { withTranslation } from \"react-i18next\";\nimport { LoadingComponet } from \"../../components\";\nimport Cookie from \"js-cookie\";\nimport Swal from \"sweetalert2\";\nimport withReactContent from \"sweetalert2-react-content\";\nimport {\n    GET_ALL_REPORT_FAILED,\n    GET_ALL_REPORT_SUCCESS,\n\n} from \"../../utils/commonType\";\nimport { formatNumber } from '../../utils/Formater'\nimport { requestGetReport } from '../../actions/reportAction'\nimport ReactToPrint from \"react-to-print\";\nimport logo from '../../img/11_PTT.png';\nimport Moment from 'react-moment';\n// import Lottie from \"lottie-web\";\n\nconst MySwal = withReactContent(Swal);\nclass SellSrceen extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false,\n            data: []\n        };\n    }\n    componentDidMount() {\n        const userInfo = Cookie.getJSON(\"userInfo\") || null;\n        let token = userInfo ? userInfo.token : null;\n        let user_id = userInfo.auth[0].user_id;\n        this.setState({ token, user_id });\n\n    }\n\n    loaderOrder(token) {\n        this.props.requestGetAllOrder(token);\n        this.setState({\n            isCallGetOrder: true,\n        });\n    }\n    componentWillReceiveProps(nextProps) {\n        const { t } = this.props;\n        const { onGetInfo } = this.state;\n        if (onGetInfo) {\n            if (nextProps.dataResultReport) {\n                switch (nextProps.actionType) {\n                    case GET_ALL_REPORT_SUCCESS:\n                        switch (nextProps.dataResultReport.responseCode) {\n                            case \"00000\":\n                                let a = nextProps.dataResultReport.reportValueOil;\n\n                                this.setState({ onGetInfo: false, loading: false, data: a });\n                                break;\n                            case nextProps.responseCode:\n                                MySwal.fire({\n                                    icon: \"error\",\n                                    title: t(\"info\"),\n                                    text: nextProps.dataResultReport.message,\n                                    footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                                });\n                                this.setState({ onGetInfo: false, loading: false });\n                                break;\n\n                            default:\n                                break;\n                        }\n                        break;\n                    case GET_ALL_REPORT_FAILED:\n                        MySwal.fire({\n                            icon: \"error\",\n                            title: t(\"info\"),\n                            text: nextProps.message,\n                            footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n                        });\n                        this.setState({ onGetInfo: false, loading: false });\n                        break;\n\n                    default:\n                        break;\n                }\n            }\n        }\n    }\n\n    onChangeTextstartDate = (text) => {\n        const value = text.target.value;\n        const errorstartDate =\n            !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\n        this.setState({ startDate: value, errorstartDate, Date: value });\n    };\n\n    onChangeTextendDate = (text) => {\n        const value = text.target.value;\n        const errorendDate =\n            !value || value.length < 1 ? \"ກະລຸນາປ້ອນຂໍ້ມູນໃຫ້ຖຶກຕ້ອງ\" : null;\n        this.setState({ endDate: value, errorendDate, Date: value });\n    };\n    onClickScrach = () => {\n        const { t } = this.props;\n        const { endDate, startDate, token } = this.state\n        if (endDate && startDate) {\n            let data = 'REPORT_OILS' + '&' + startDate + '&' + endDate\n            this.props.requestGetReport(data, token);\n            this.setState({ loading: true, onGetInfo: true })\n        } else {\n            MySwal.fire({\n                icon: \"error\",\n                title: t(\"info\"),\n                text: t(\"InformationOncomplete\"),\n                footer: `<a href=\"\">${t(\"YouContactDeveloper\")}</a>`,\n            });\n        }\n    }\n\n\n    render() {\n        const { t } = this.props;\n        const { loading, startDate, errorstartDate, endDate, errorendDate, data } = this.state\n\n        return (\n            <div>\n                {loading ? <LoadingComponet /> : null}\n                <div className=\"content-wrapper\">\n                    <section className=\"content-header\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row mb-2\">\n                                <div className=\"col-sm-6\">\n                                    <h3>{t('ReportFuelInformation')}</h3>\n                                </div>\n                                <div className=\"col-sm-6\">\n                                </div>\n                            </div>\n                        </div>\n                    </section>\n                    <section className=\"content\">\n                        <div className=\"container-fluid\">\n                            <div className=\"row\">\n                                <div className=\"col-md-3\">\n                                    <div class=\"form-group\">\n\n                                        <input\n                                            name=\"date\"\n                                            value={startDate}\n                                            type=\"date\"\n                                            className={\n                                                errorstartDate === undefined\n                                                    ? \"form-control\"\n                                                    : errorstartDate\n                                                        ? \"form-control is-invalid\"\n                                                        : \"form-control is-valid\"\n                                            }\n                                            onChange={(text) => this.onChangeTextstartDate(text)}\n                                        />\n                                        {errorstartDate ? (\n                                            <p class=\"text-danger\">{errorstartDate}</p>\n                                        ) : null}\n                                    </div>\n                                </div>\n\n                                <div className=\"col-md-3\">\n                                    <div class=\"form-group\">\n\n                                        <input\n                                            name=\"date\"\n                                            value={endDate}\n                                            type=\"date\"\n                                            className={\n                                                errorendDate === undefined\n                                                    ? \"form-control\"\n                                                    : errorendDate\n                                                        ? \"form-control is-invalid\"\n                                                        : \"form-control is-valid\"\n                                            }\n                                            onChange={(text) => this.onChangeTextendDate(text)}\n                                        />\n                                        {errorendDate ? (\n                                            <p class=\"text-danger\">{errorendDate}</p>\n                                        ) : null}\n                                    </div>\n\n                                </div>\n                                <div className=\"col-md-6\">\n                                    <div class=\"form-group\">\n                                        <button\n                                            type=\"button\"\n                                            className=\"btn btn-info\"\n                                            onClick={() => this.onClickScrach()}\n                                        >\n\n                                            {t(\"search\")}\n                                        </button>\n                                    </div>\n                                </div>\n                            </div>\n\n\n                            {data.length > 0 ?\n                                <div className=\"container-fluid\" ref={el => (this.componentRef = el)}>\n                                    <br></br>\n                                    <p className=\"text-center\">{t('textHeader')}</p>\n                                    <p className=\"text-center\">{t('textDetail')}</p>\n                                    <h4 className=\"text-center\">{t('ReportFuelInformation')}</h4>\n                                    <h4 className=\"text-center\">-----------------</h4>\n                                    <p className=\"text-center\"><Moment format='MMMM Do YYYY, h:mm:ss a'>{new Date()}</Moment></p>\n                                    <div className=\"row\">\n                                        <div className=\"col-md-12\">\n                                            <img\n                                                src={logo}\n                                                className=\"img-circle\"\n                                                style={{ width: 100, height: 50 }}\n                                            />\n                                            <h5>{t('companyaName')}</h5>\n                                            <h6>{t('ContactInfo')}</h6>\n                                            <h6>{t('location')}</h6>\n                                        </div>\n\n                                    </div>\n                                    <div className=\"row\">\n\n\n                                        <div className=\"col-12\">\n                                            <div className=\"card\">\n                                                <div className=\"card-header\">\n                                                    <h3 className=\"card-title\">{t(\"Description\")}</h3>\n                                                    <div className=\"card-tools\">\n                                                        <div className=\"input-group input-group-sm\">\n                                                            <ReactToPrint\n                                                                trigger={() => <button type=\"submit\" className=\"btn btn-success btn-xs\">\n                                                                    <i className=\"fas fa-sync-alt\" />\n                                                                </button>}\n                                                                content={() => this.componentRef}\n                                                            />\n                                                        </div>\n                                                    </div>\n                                                </div>\n\n                                                <div className=\"card-body table-responsive p-0\">\n                                                    <table className=\"table table-hover table-bordered\">\n                                                        <thead>\n                                                            <tr>\n                                                                <th>{t(\"Level\")}</th>\n                                                                <th>{t(\"oils_id\")}</th>\n                                                                <th>{t(\"oil_name\")}</th>\n                                                               \n                                                                <th>{t(\"qty\")}</th>\n                                                                <th>{t(\"price\")}</th>\n                                                                <th>{t(\"Total\")}</th>\n                                                                <th>{t(\"createdAt\")}</th>\n                                                                <th>{t(\"username\")}</th>\n                                                            </tr>\n                                                        </thead>\n                                                        <tbody>\n                                                            {data.map((item, i) => (\n                                                                <tr>\n                                                                    <td>{i + 1}</td>\n                                                                    <td>{item.oils_id}</td>\n                                                                    <td>{item.oil_name}</td>\n                                                                    <td>{item.status}</td>\n                                                                    <td>{formatNumber(item.qty + '')}</td>\n                                                                    <td>{formatNumber(item.price + '')}</td>\n                                                                   \n                                                                    <td>\n                                                                    <Moment format=\"YYYY/MM/DD\">{item.createdAt}</Moment>\n                                                                     </td>\n                                                                    <td>{item.username}</td>\n                                                                </tr>\n                                                            ))\n                                                            }\n                                                        </tbody>\n                                                    </table>\n                                                    {\n                                                        data.length > 0 ?\n                                                            <div className=\"row\">\n                                                                <div className=\"col-3\">\n                                                                </div>\n                                                                <div className=\"col-9\">\n                                                                    <div className=\"table-responsive\">\n                                                                        <table className=\"table\">\n                                                                            <tbody>\n                                                                                <tr>\n                                                                                    <th>{t('qty')}</th>\n                                                                                    <td>{formatNumber(data.reduce((a, v) => a = a + parseInt(v.qty), 0) + \"\")}</td>\n                                                                                </tr>\n                                                                                <tr>\n                                                                                    <th>{t('Total')}</th>\n                                                                                    <td>{formatNumber(data.reduce((a, v) => a = a + v.price, 0) + \"\")}</td>\n                                                                                </tr>\n                                                                            </tbody></table>\n                                                                    </div>\n\n                                                                </div>\n\n                                                            </div> : null\n                                                    }\n                                                </div>\n                                            </div>\n                                        </div>\n                                    </div>\n                                </div>\n                                : <div className=\"row\">\n                                    <div className=\"col-md-4\"></div>\n                                    <div className=\"col-md-4\">\n                                        <h3 className=\"text-center\">{t('Nodata')}</h3>\n                                        \n                                    </div>\n                                    <div className=\"col-md-4\"></div>\n                                </div>}\n\n                        </div>\n\n                    </section>\n                </div>\n            </div>\n\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n\n        dataResultReport: state.reportReducer.dataResultReport,\n        actionType: state.reportReducer.actionType,\n        responseCode: state.reportReducer.responseCode,\n\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n        requestGetReport: (data, token) => dispatch(requestGetReport(data, token)),\n    };\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(SellSrceen));","import React, { Component } from 'react'\nimport { connect } from \"react-redux\";\nimport { withTranslation } from \"react-i18next\";\n\nclass index extends Component {\n    constructor(props) {\n        super(props);\n        this.state = {\n            loading: false\n        };\n    }\n    componentDidMount(){\n\n    }\n    render() {\n        const { data }=this.props\n        console.log('dara:', data)\n        return (\n            <div>\n                <h2>bopby</h2>\n            </div>\n        )\n    }\n}\nconst mapStateToProps = (state) => {\n    return {\n    };\n};\nconst mapDispatchToProps = (dispatch) => {\n    return {\n    };\n};\nexport default connect(\n    mapStateToProps,\n    mapDispatchToProps\n)(withTranslation()(index));","import { Navigate, useRoutes, Outlet } from \"react-router-dom\";\nimport {\n  Dashboard,\n  NotFound,\n  Car,\n  Employee,\n  Supplier,\n  OilScreen,\n  Customer,\n  UserScreen,\n  Document,\n  Transports,\n  Sale,\n  Order,\n  ImportScreen,\n  ReportSell,\n  ReportOrder,\n  ReportImport,\n  ReportTransfer,\n  ReportOils\n} from \"./index\";\nimport { Header, Menu } from \"../components/index\";\nimport Cookie from \"js-cookie\";\n\nexport default function Router() {\n  const userInfo = Cookie.getJSON(\"userInfo\") || null;\n  let role = userInfo ? userInfo.auth[0].role : null;\n  return useRoutes([\n    {\n      path: \"/\",\n      element: (\n        <div>\n          <Header />\n          <Menu />\n          <Outlet />\n          {/* <Footer/> */}\n        </div>\n      ),\n\n      children: [\n        { element: <Navigate to=\"/Home\" replace /> },\n        { path: \"dashboard\", element: <Dashboard /> },\n        { path: \"CarInformation\", element: role == 1 ? <Car /> : <NotFound /> },\n        { path: \"ManageEmployee\", element: role == 1 ? <Employee /> : <NotFound /> },\n        { path: \"supplierManage\", element: role == 1 ? <Supplier /> : <NotFound /> },\n        { path: \"oilManage\", element: role == 1 ? <OilScreen /> : <NotFound /> },\n        { path: \"CustomerInformation\", element: role == 1 ? <Customer /> : <NotFound /> },\n        { path: \"UserScreen\", element: role == 1 ? <UserScreen /> : <NotFound /> },\n        { path: \"FuelDeliveryDocument\", element: role == 1 ? <Document /> : <NotFound /> },\n        { path: \"FuelDelivery\", element: role == 1 ? <Transports /> : <NotFound /> },\n        { path: \"Sell\", element: <Sale /> },\n        { path: \"OrderSreen\", element: <Order /> },\n        { path: \"ImportScreen\", element: <ImportScreen /> },\n        { path: \"SalesItems\", element: <ReportSell /> },\n        { path: \"OrderReport\", element: <ReportOrder /> },\n        { path: \"ImportReport\", element: <ReportImport /> },\n        { path: \"ReportFuelDeliveryInformation\", element: <ReportTransfer /> },\n        { path: \"ReportFuelInformation\", element: <ReportOils /> },\n        { path: \"404\", element: <NotFound /> },\n      ],\n    },\n    {\n      path: \"/\",\n      children: [\n        { path: \"/\", element: <Navigate to=\"/dashboard/app\" /> },\n        { path: \"*\", element: <Navigate to=\"/404\" /> },\n        { path: \"/\", element: <Navigate to=\"/\" /> },\n      ],\n    },\n    { path: \"*\", element: <Navigate to=\"/404\" replace /> },\n  ]);\n}\n","import axios from \"axios\";\n\nfunction baseApi(token) {\n  return axios.create({\n    baseURL: \"http://localhost:81\",\n    headers: {\n      \"Content-Type\": \"application/json\",\n      Authorization: \"Bearer \" + token,\n    },\n    timeout: 60000,\n  });\n}\n\nfunction callAuth() {\n  return axios.create({\n    baseURL: \"http://localhost:81\",\n    headers: {\n      \"Content-Type\": \"application/json\"\n    },\n    timeout: 60000,\n  });\n}\n\nexport function* userLoginApi(data) {\n  const api = callAuth();\n  return yield api.post(\"/auth\", data);\n}\n// cars\nexport function* apiResultGetAllCar(token) {\n  const api = baseApi(token);\n  return yield api.get(\"/cars\");\n}\n\nexport function* apiResultdataCarDelete(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/cars/deleteCars\", data);\n}\n\nexport function* apiResultdataCarNew(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/cars\", data);\n}\n\nexport function* apiResultdataCarUpdate(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/cars/updateCars\", data);\n}\n// employees\nexport function* apiResultGetAllEmployee(token) {\n  const api = baseApi(token);\n  return yield api.get(\"/employees\");\n}\n\nexport function* apiResultdataEmployeeDelete(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/employees/deleteEmployees\", data);\n}\n\nexport function* apiResultdataEmployeeNew(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/employees\", data);\n}\n\nexport function* apiResultdataEmployeeUpdate(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/employees/updateEmployees\", data);\n}\n// supplier\nexport function* apiResultGetAllSupplier(token) {\n  const api = baseApi(token);\n  return yield api.get(\"/supplier\");\n}\n\nexport function* apiResultdataSupplierDelete(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/supplier/deleteSuppliers\", data);\n}\n\nexport function* apiResultdataSupplierNew(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/supplier\", data);\n}\n\nexport function* apiResultdataSupplierUpdate(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/supplier/updateSuppliers\", data);\n}\n// oil\nexport function* apiResultGetAllOil(token) {\n  const api = baseApi(token);\n  return yield api.get(\"/oils\");\n}\n\nexport function* apiResultdataOilDelete(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/oils/deleteOils\", data);\n}\n\nexport function* apiResultdataOilNew(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/oils\", data);\n}\n\nexport function* apiResultdataOilUpdate(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/oils/updateOils\", data);\n}\n//\nexport function* apiResultGetAllOilByIdSupplier(data, token) {\n  const api = baseApi(token);\n  return yield api.get(`/oils/${data}`);\n}\n\n\n//Customers\nexport function* apiResultGetAllCustomers(token) {\n  const api = baseApi(token);\n  return yield api.get(\"/customers\");\n}\n\nexport function* apiResultdataCustomersDelete(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/customers/deleteCustomers\", data);\n}\n\nexport function* apiResultdataCustomersNew(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/customers\", data);\n}\n\nexport function* apiResultdataCustomersUpdate(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/customers/updateCustomers\", data);\n}\n\n//Users\nexport function* apiResultGetAllUsers(token) {\n  const api = baseApi(token);\n  return yield api.get(\"/users\");\n}\n\nexport function* apiResultdataUsersDelete(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/users/deleteUser\", data);\n}\n\nexport function* apiResultdataUsersNew(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/users\", data);\n}\n\nexport function* apiResultdataUsersUpdate(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/users/updateUser\", data);\n}\n// document\nexport function* apiResultGetAllDocument(token) {\n  const api = baseApi(token);\n  return yield api.get(\"/document\");\n}\n\nexport function* apiResultdataDocumentDelete(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/document/deleteDocuments\", data);\n}\n\nexport function* apiResultdataDocumentNew(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/document\", data);\n}\n\nexport function* apiResultdataDocumentUpdate(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/document/updateDocuments\", data);\n}\n\nexport function* apiResultdataDocumentById(data, token) {\n  const api = baseApi(token);\n  return yield api.get(`/document/${data}`);\n}\n\nexport function* apiResultGetAllOrder(token) {\n  const api = baseApi(token);\n  return yield api.get(\"/order\");\n}\n\nexport function* apiResultGetSearchOrder(data,token) {\n  const api = baseApi(token);\n  return yield api.get(`/order/${data}`);\n}\n\nexport function* apiResultGetPrintOrder(data,token) {\n  const api = baseApi(token);\n  return yield api.get(`/order/print/${data}`);\n}\n\nexport function* apiResultdataOrderDelete(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/order/deleteOrders\", data);\n}\n\nexport function* apiResultdataOrderNew(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/order\", data);\n}\n\nexport function* apiResultdataOrderUpdate(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/order/updateOrders\", data);\n}\n\n// transport\nexport function* apiResultGetAllTransports(token) {\n  const api = baseApi(token);\n  return yield api.get(\"/transport\");\n}\n\nexport function* apiResultdataTransportsDelete(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/transport/deleteTransports\", data);\n}\n\nexport function* apiResultdataTransportsNew(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/transport\", data);\n}\n\nexport function* apiResultdataTransportsUpdate(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/transport/updateTransports\", data);\n}\n\n//sell\nexport function* apiResultdataSellNew(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/sell\", data);\n}\n\nexport function* apiResultGetMaxIdSell(token) {\n  const api = baseApi(token);\n  return yield api.get(\"/sell/max\");\n}\n\n\nexport function* apiResultGetPrintSell(data, token) {\n  const api = baseApi(token);\n  return yield api.get(`/sell/${data}`);\n}\n\nexport function* apiResultdataSellDetailNew(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/selldetail\", data);\n}\n\nexport function* apiResultGetMaxIdOrder(token) {\n  const api = baseApi(token);\n  return yield api.get(\"/order/max\");\n}\n\n\nexport function* apiResultdataOrderDetailNew(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/orderdetail\", data);\n}\n\nexport function* apiResultdataImportNew(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/import\", data);\n}\n\nexport function* apiResultGetMaxIdImport(token) {\n  const api = baseApi(token);\n  return yield api.get(\"/import/max\");\n}\n\nexport function* apiResultdataImportDetailNew(data, token) {\n  const api = baseApi(token);\n  return yield api.post(\"/importdetail\", data);\n}\n\n//apiResultGetPrintImport\nexport function* apiResultGetPrintImport(data, token) {\n  const api = baseApi(token);\n  return yield api.get(`/import/${data}`);\n}\nexport function* apiResultGetAllReport(data, token) {\n  const api = baseApi(token);\n  return yield api.get(`/report/${data}`);\n}\n\nexport function* apiResultGetSumReport(token) {\n  const api = baseApi(token);\n  return yield api.get(`/report`);\n}\n\n//apiResultGetSell\n\n\nexport function* apiResultGetSell(token) {\n  const api = baseApi(token);\n  return yield api.get(`/sell`);\n}\n\n\nexport function* apiResultdataTransportsById(data, token) {\n  const api = baseApi(token);\n  return yield api.get(`/transport/${data}`);\n}\n","import { takeEvery, put } from \"redux-saga/effects\";\nimport { LOGIN, LOGIN_FAILED, LOGIN_SUCCESS } from \"../utils/commonType.js\";\nimport { userLoginApi } from \"../api/apiConfig\";\nimport Cookie from 'js-cookie';\n\nexport function* wachLogin() {\n  yield takeEvery(LOGIN, callLogin);\n}\n\nfunction* callLogin(action) {\n  try {\n    const result = yield userLoginApi(action.data);\n    if (result.status === 200) {\n      console.log('result.data:', result.data)\n      console.log('result.data.responseCode:', result.data.responseCode)\n      if (result.data.responseCode === \"00000\") {\n        Cookie.set('userInfo', JSON.stringify(result.data));\n        yield put({\n          type: LOGIN_SUCCESS,\n          userInfo: result.data,\n          description: result.data.message,\n          responseCode: result.data.responseCode,\n        });\n      } else {\n        yield put({\n          type: LOGIN_FAILED,\n          userInfo: result.data,\n          description: result.data.message,\n          responseCode: result.data.responseCode,\n        });\n      }\n    } else {\n      yield put({\n        type: LOGIN_FAILED,\n        userInfo: null,\n        description: \"failure\",\n        responseCode: result.status,\n      });\n    }\n    yield put({ type: LOGIN_SUCCESS, userInfo: action.data });\n  } catch (error) {\n    yield put({ type: LOGIN_FAILED, userInfo: null });\n  }\n}\n\n\n\n\n\n","import { takeEvery, put } from \"redux-saga/effects\";\r\nimport {\r\n  GET_ALL_CAR,\r\n  GET_ALL_CAR_FAILED,\r\n  GET_ALL_CAR_SUCCESS,\r\n\r\n  DELETE_BY_ID_CAR,\r\n  DELETE_BY_ID_CAR_FAILED,\r\n  DELETE_BY_ID_CAR_SUCCESS,\r\n\r\n  INSRT_NEW_CAR,\r\n  INSRT_NEW_CAR_FAILED,\r\n  INSRT_NEW_CAR_SUCCESS,\r\n\r\n  UPDATE_CAR,\r\n  UPDATE_CAR_FAILED,\r\n  UPDATE_CAR_SUCCESS,\r\n  \r\n} from \"../utils/commonType\";\r\nimport { apiResultGetAllCar, apiResultdataCarDelete, apiResultdataCarNew, apiResultdataCarUpdate } from \"../api/apiConfig\";\r\n\r\nexport function* wachResultGetAllCar() {\r\n  yield takeEvery(GET_ALL_CAR, callResultGetAllCar);\r\n}\r\nfunction* callResultGetAllCar(action) {\r\n  try {\r\n    const result = yield apiResultGetAllCar(action.data);\r\n    if (result.status === 200) {\r\n      if (result.data.responseCode === \"00000\") {\r\n        yield put({\r\n          type: GET_ALL_CAR_SUCCESS,\r\n          status: result.data.status,\r\n          data: result.data.cars,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: GET_ALL_CAR_FAILED,\r\n          status: result.data.status,\r\n          data: result.data.listData,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } else if (result.status === 500) {\r\n      yield put({\r\n        type: GET_ALL_CAR_FAILED,\r\n        status: false,\r\n        data: null,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: GET_ALL_CAR_FAILED,\r\n        status: result.data.status,\r\n        data: result.data.listData,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: GET_ALL_CAR_FAILED, data: null });\r\n  }\r\n}\r\n\r\nexport function* wachResultdataCarDelete() {\r\n  yield takeEvery(DELETE_BY_ID_CAR, callResultdataCarDelete);\r\n}\r\nfunction* callResultdataCarDelete(action) {\r\n  try {\r\n    const result = yield apiResultdataCarDelete(action.data, action.token);\r\n    console.log(\"result:\", result);\r\n    console.log(\"status:\", result.status);\r\n    console.log(\"data.responseCode:\", result.data.responseCode);\r\n    if (result.status === 200) {\r\n      if (result.data.responseCode === \"00000\") {\r\n        yield put({\r\n          type: DELETE_BY_ID_CAR_SUCCESS,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: DELETE_BY_ID_CAR_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } else {\r\n      yield put({\r\n        type: DELETE_BY_ID_CAR_FAILED,\r\n        status: result.data.status,\r\n        data: result.data,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: DELETE_BY_ID_CAR_FAILED, data: null });\r\n  }\r\n}\r\n\r\n\r\nexport function* wachResultdataCarNew() {\r\n    yield takeEvery(INSRT_NEW_CAR, callResultdataCarNew);\r\n  }\r\n  function* callResultdataCarNew(action) {\r\n    try {\r\n      const result = yield apiResultdataCarNew(action.data, action.token );\r\n      console.log(\"result:\", result);\r\n      console.log(\"status:\", result.status);\r\n      console.log(\"data.responseCode:\", result.data.responseCode);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: INSRT_NEW_CAR_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: INSRT_NEW_CAR_FAILED,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: INSRT_NEW_CAR_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: INSRT_NEW_CAR_FAILED, data: null });\r\n    }\r\n  }\r\n\r\n\r\n  export function* wachResultdataCarUpdate() {\r\n    yield takeEvery(UPDATE_CAR, callResultdataCarUpdate);\r\n  }\r\n  function* callResultdataCarUpdate(action) {\r\n    try {\r\n      const result = yield apiResultdataCarUpdate(action.data, action.token );\r\n      console.log(\"result:\", result);\r\n      console.log(\"status:\", result.status);\r\n      console.log(\"data.responseCode:\", result.data.responseCode);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: UPDATE_CAR_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: UPDATE_CAR_FAILED,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: UPDATE_CAR_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: UPDATE_CAR_FAILED, data: null });\r\n    }\r\n  }\r\n","import { takeEvery, put } from \"redux-saga/effects\";\r\nimport {\r\n  GET_ALL_EMPLOYEE,\r\n  GET_ALL_EMPLOYEE_FAILED,\r\n  GET_ALL_EMPLOYEE_SUCCESS,\r\n\r\n  DELETE_BY_ID_EMPLOYEE,\r\n  DELETE_BY_ID_EMPLOYEE_FAILED,\r\n  DELETE_BY_ID_EMPLOYEE_SUCCESS,\r\n\r\n  INSRT_NEW_EMPLOYEE,\r\n  INSRT_NEW_EMPLOYEE_FAILED,\r\n  INSRT_NEW_EMPLOYEE_SUCCESS,\r\n\r\n  UPDATE_EMPLOYEE,\r\n  UPDATE_EMPLOYEE_FAILED,\r\n  UPDATE_EMPLOYEE_SUCCESS,\r\n  \r\n} from \"../utils/commonType\";\r\nimport { apiResultGetAllEmployee, apiResultdataEmployeeDelete, apiResultdataEmployeeNew, apiResultdataEmployeeUpdate } from \"../api/apiConfig\";\r\n\r\nexport function* wachResultGetAllEmployee() {\r\n  yield takeEvery(GET_ALL_EMPLOYEE, callResultGetAllEmployee);\r\n}\r\nfunction* callResultGetAllEmployee(action) {\r\n  try {\r\n    const result = yield apiResultGetAllEmployee(action.data);\r\n    if (result.status === 200) {\r\n      if (result.data.responseCode === \"00000\") {\r\n        yield put({\r\n          type: GET_ALL_EMPLOYEE_SUCCESS,\r\n          status: result.data.status,\r\n          data: result.data.employees,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: GET_ALL_EMPLOYEE_FAILED,\r\n          status: result.data.status,\r\n          data: result.data.listData,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } else if (result.status === 500) {\r\n      yield put({\r\n        type: GET_ALL_EMPLOYEE_FAILED,\r\n        status: false,\r\n        data: null,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: GET_ALL_EMPLOYEE_FAILED,\r\n        status: result.data.status,\r\n        data: result.data.listData,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: GET_ALL_EMPLOYEE_FAILED, data: null });\r\n  }\r\n}\r\n\r\nexport function* wachResultdataEmployeeDelete() {\r\n  yield takeEvery(DELETE_BY_ID_EMPLOYEE, callResultdataEmployeeDelete);\r\n}\r\nfunction* callResultdataEmployeeDelete(action) {\r\n  try {\r\n    const result = yield apiResultdataEmployeeDelete(action.data, action.token);\r\n    console.log(\"result:\", result);\r\n    console.log(\"status:\", result.status);\r\n    console.log(\"data.responseCode:\", result.data.responseCode);\r\n    if (result.status === 200) {\r\n      if (result.data.responseCode === \"00000\") {\r\n        yield put({\r\n          type: DELETE_BY_ID_EMPLOYEE_SUCCESS,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: DELETE_BY_ID_EMPLOYEE_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } else {\r\n      yield put({\r\n        type: DELETE_BY_ID_EMPLOYEE_FAILED,\r\n        status: result.data.status,\r\n        data: result.data,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: DELETE_BY_ID_EMPLOYEE_FAILED, data: null });\r\n  }\r\n}\r\n\r\n\r\nexport function* wachResultdataEmployeeNew() {\r\n    yield takeEvery(INSRT_NEW_EMPLOYEE, callResultdataEmployeeNew);\r\n  }\r\n  function* callResultdataEmployeeNew(action) {\r\n    try {\r\n      const result = yield apiResultdataEmployeeNew(action.data, action.token );\r\n      console.log(\"result:\", result);\r\n      console.log(\"status:\", result.status);\r\n      console.log(\"data.responseCode:\", result.data.responseCode);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: INSRT_NEW_EMPLOYEE_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: INSRT_NEW_EMPLOYEE_FAILED,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: INSRT_NEW_EMPLOYEE_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: INSRT_NEW_EMPLOYEE_FAILED, data: null });\r\n    }\r\n  }\r\n\r\n\r\n  export function* wachResultdataEmployeeUpdate() {\r\n    yield takeEvery(UPDATE_EMPLOYEE, callResultdataEmployeeUpdate);\r\n  }\r\n  function* callResultdataEmployeeUpdate(action) {\r\n    try {\r\n      const result = yield apiResultdataEmployeeUpdate(action.data, action.token );\r\n      console.log(\"result:\", result);\r\n      console.log(\"status:\", result.status);\r\n      console.log(\"data.responseCode:\", result.data.responseCode);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: UPDATE_EMPLOYEE_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: UPDATE_EMPLOYEE_FAILED,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: UPDATE_EMPLOYEE_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: UPDATE_EMPLOYEE_FAILED, data: null });\r\n    }\r\n  }\r\n","import { takeEvery, put } from \"redux-saga/effects\";\r\nimport {\r\n  GET_ALL_SUPPLIER,\r\n  GET_ALL_SUPPLIER_FAILED,\r\n  GET_ALL_SUPPLIER_SUCCESS,\r\n\r\n  DELETE_BY_ID_SUPPLIER,\r\n  DELETE_BY_ID_SUPPLIER_FAILED,\r\n  DELETE_BY_ID_SUPPLIER_SUCCESS,\r\n\r\n  INSRT_NEW_SUPPLIER,\r\n  INSRT_NEW_SUPPLIER_FAILED,\r\n  INSRT_NEW_SUPPLIER_SUCCESS,\r\n\r\n  UPDATE_SUPPLIER,\r\n  UPDATE_SUPPLIER_FAILED,\r\n  UPDATE_SUPPLIER_SUCCESS,\r\n  \r\n} from \"../utils/commonType\";\r\nimport { apiResultGetAllSupplier, apiResultdataSupplierDelete, apiResultdataSupplierNew, apiResultdataSupplierUpdate } from \"../api/apiConfig\";\r\n\r\nexport function* wachResultGetAllSupplier() {\r\n  yield takeEvery(GET_ALL_SUPPLIER, callResultGetAllSupplier);\r\n}\r\nfunction* callResultGetAllSupplier(action) {\r\n  try {\r\n    const result = yield apiResultGetAllSupplier(action.data);\r\n    if (result.status === 200) {\r\n      if (result.data.responseCode === \"00000\") {\r\n        yield put({\r\n          type: GET_ALL_SUPPLIER_SUCCESS,\r\n          status: result.data.status,\r\n          data: result.data.suppliers,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: GET_ALL_SUPPLIER_FAILED,\r\n          status: result.data.status,\r\n          data: result.data.listData,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } else if (result.status === 500) {\r\n      yield put({\r\n        type: GET_ALL_SUPPLIER_FAILED,\r\n        status: false,\r\n        data: null,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: GET_ALL_SUPPLIER_FAILED,\r\n        status: result.data.status,\r\n        data: result.data.listData,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: GET_ALL_SUPPLIER_FAILED, data: null });\r\n  }\r\n}\r\n\r\nexport function* wachResultdataSupplierDelete() {\r\n  yield takeEvery(DELETE_BY_ID_SUPPLIER, callResultdataSupplierDelete);\r\n}\r\nfunction* callResultdataSupplierDelete(action) {\r\n  try {\r\n    const result = yield apiResultdataSupplierDelete(action.data, action.token);\r\n    console.log(\"result:\", result);\r\n    console.log(\"status:\", result.status);\r\n    console.log(\"data.responseCode:\", result.data.responseCode);\r\n    if (result.status === 200) {\r\n      if (result.data.responseCode === \"00000\") {\r\n        yield put({\r\n          type: DELETE_BY_ID_SUPPLIER_SUCCESS,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: DELETE_BY_ID_SUPPLIER_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } else {\r\n      yield put({\r\n        type: DELETE_BY_ID_SUPPLIER_FAILED,\r\n        status: result.data.status,\r\n        data: result.data,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: DELETE_BY_ID_SUPPLIER_FAILED, data: null });\r\n  }\r\n}\r\n\r\n\r\nexport function* wachResultdataSupplierNew() {\r\n    yield takeEvery(INSRT_NEW_SUPPLIER, callResultdataSupplierNew);\r\n  }\r\n  function* callResultdataSupplierNew(action) {\r\n    try {\r\n      const result = yield apiResultdataSupplierNew(action.data, action.token );\r\n      console.log(\"result:\", result);\r\n      console.log(\"status:\", result.status);\r\n      console.log(\"data.responseCode:\", result.data.responseCode);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: INSRT_NEW_SUPPLIER_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: INSRT_NEW_SUPPLIER_FAILED,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: INSRT_NEW_SUPPLIER_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: INSRT_NEW_SUPPLIER_FAILED, data: null });\r\n    }\r\n  }\r\n\r\n\r\n  export function* wachResultdataSupplierUpdate() {\r\n    yield takeEvery(UPDATE_SUPPLIER, callResultdataSupplierUpdate);\r\n  }\r\n  function* callResultdataSupplierUpdate(action) {\r\n    try {\r\n      const result = yield apiResultdataSupplierUpdate(action.data, action.token );\r\n      console.log(\"result:\", result);\r\n      console.log(\"status:\", result.status);\r\n      console.log(\"data.responseCode:\", result.data.responseCode);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: UPDATE_SUPPLIER_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: UPDATE_SUPPLIER_FAILED,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: UPDATE_SUPPLIER_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: UPDATE_SUPPLIER_FAILED, data: null });\r\n    }\r\n  }\r\n","import { takeEvery, put } from \"redux-saga/effects\";\r\nimport {\r\n  GET_ALL_OIL,\r\n  GET_ALL_OIL_FAILED,\r\n  GET_ALL_OIL_SUCCESS,\r\n\r\n  DELETE_BY_ID_OIL,\r\n  DELETE_BY_ID_OIL_FAILED,\r\n  DELETE_BY_ID_OIL_SUCCESS,\r\n\r\n  INSRT_NEW_OIL,\r\n  INSRT_NEW_OIL_FAILED,\r\n  INSRT_NEW_OIL_SUCCESS,\r\n\r\n  UPDATE_OIL,\r\n  UPDATE_OIL_FAILED,\r\n  UPDATE_OIL_SUCCESS,\r\n\r\n  GET_ALL_OIL_BY_ID_SUPPLIER,\r\n  GET_ALL_OIL_BY_ID_SUPPLIER_SUCCESS,\r\n  GET_ALL_OIL_BY_ID_SUPPLIER_FAILED\r\n  \r\n} from \"../utils/commonType\";\r\nimport { apiResultGetAllOil, apiResultdataOilDelete, apiResultdataOilNew, apiResultdataOilUpdate, apiResultGetAllOilByIdSupplier } from \"../api/apiConfig\";\r\n\r\nexport function* wachResultGetAllOil() {\r\n  yield takeEvery(GET_ALL_OIL, callResultGetAllOil);\r\n}\r\nfunction* callResultGetAllOil(action) {\r\n  try {\r\n    const result = yield apiResultGetAllOil(action.data);\r\n    if (result.status === 200) {\r\n      if (result.data.responseCode === \"00000\") {\r\n        yield put({\r\n          type: GET_ALL_OIL_SUCCESS,\r\n          status: result.data.status,\r\n          data: result.data.oils,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: GET_ALL_OIL_FAILED,\r\n          status: result.data.status,\r\n          data: result.data.listData,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } else if (result.status === 500) {\r\n      yield put({\r\n        type: GET_ALL_OIL_FAILED,\r\n        status: false,\r\n        data: null,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: GET_ALL_OIL_FAILED,\r\n        status: result.data.status,\r\n        data: result.data.listData,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: GET_ALL_OIL_FAILED, data: null });\r\n  }\r\n}\r\n\r\nexport function* wachResultdataOilDelete() {\r\n  yield takeEvery(DELETE_BY_ID_OIL, callResultdataOilDelete);\r\n}\r\nfunction* callResultdataOilDelete(action) {\r\n  try {\r\n    const result = yield apiResultdataOilDelete(action.data, action.token);\r\n    console.log(\"result:\", result);\r\n    console.log(\"status:\", result.status);\r\n    console.log(\"data.responseCode:\", result.data.responseCode);\r\n    if (result.status === 200) {\r\n      if (result.data.responseCode === \"00000\") {\r\n        yield put({\r\n          type: DELETE_BY_ID_OIL_SUCCESS,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: DELETE_BY_ID_OIL_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } else {\r\n      yield put({\r\n        type: DELETE_BY_ID_OIL_FAILED,\r\n        status: result.data.status,\r\n        data: result.data,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: DELETE_BY_ID_OIL_FAILED, data: null });\r\n  }\r\n}\r\n\r\n\r\nexport function* wachResultdataOilNew() {\r\n    yield takeEvery(INSRT_NEW_OIL, callResultdataOilNew);\r\n  }\r\n  function* callResultdataOilNew(action) {\r\n    try {\r\n      const result = yield apiResultdataOilNew(action.data, action.token );\r\n      console.log(\"result:\", result);\r\n      console.log(\"status:\", result.status);\r\n      console.log(\"data.responseCode:\", result.data.responseCode);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: INSRT_NEW_OIL_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: INSRT_NEW_OIL_FAILED,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: INSRT_NEW_OIL_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: INSRT_NEW_OIL_FAILED, data: null });\r\n    }\r\n  }\r\n\r\n\r\n  export function* wachResultdataOilUpdate() {\r\n    yield takeEvery(UPDATE_OIL, callResultdataOilUpdate);\r\n  }\r\n  function* callResultdataOilUpdate(action) {\r\n    try {\r\n      const result = yield apiResultdataOilUpdate(action.data, action.token );\r\n      console.log(\"result:\", result);\r\n      console.log(\"status:\", result.status);\r\n      console.log(\"data.responseCode:\", result.data.responseCode);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: UPDATE_OIL_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: UPDATE_OIL_FAILED,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: UPDATE_OIL_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: UPDATE_OIL_FAILED, data: null });\r\n    }\r\n  }\r\n\r\n\r\n  export function* wachResultGetAllOilByIdSupplier() {\r\n    yield takeEvery(GET_ALL_OIL_BY_ID_SUPPLIER, callResultGetAllOilByIdSupplier);\r\n  }\r\n  function* callResultGetAllOilByIdSupplier(action) {\r\n    try {\r\n      const result = yield apiResultGetAllOilByIdSupplier(action.data, action.token);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: GET_ALL_OIL_BY_ID_SUPPLIER_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data.supplier,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: GET_ALL_OIL_BY_ID_SUPPLIER_FAILED,\r\n            status: result.data.status,\r\n            data: result.data.listData,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else if (result.status === 500) {\r\n        yield put({\r\n          type: GET_ALL_OIL_BY_ID_SUPPLIER_FAILED,\r\n          status: false,\r\n          data: null,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: GET_ALL_OIL_BY_ID_SUPPLIER_FAILED,\r\n          status: result.data.status,\r\n          data: result.data.listData,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: GET_ALL_OIL_BY_ID_SUPPLIER_FAILED, data: null });\r\n    }\r\n  }\r\n","import { takeEvery, put } from \"redux-saga/effects\";\r\nimport {\r\n  GET_ALL_CUSTOMERS,\r\n  GET_ALL_CUSTOMERS_FAILED,\r\n  GET_ALL_CUSTOMERS_SUCCESS,\r\n\r\n  DELETE_BY_ID_CUSTOMERS,\r\n  DELETE_BY_ID_CUSTOMERS_FAILED,\r\n  DELETE_BY_ID_CUSTOMERS_SUCCESS,\r\n\r\n  INSRT_NEW_CUSTOMERS,\r\n  INSRT_NEW_CUSTOMERS_FAILED,\r\n  INSRT_NEW_CUSTOMERS_SUCCESS,\r\n\r\n  UPDATE_CUSTOMERS,\r\n  UPDATE_CUSTOMERS_FAILED,\r\n  UPDATE_CUSTOMERS_SUCCESS,\r\n  \r\n} from \"../utils/commonType\";\r\nimport { apiResultGetAllCustomers, apiResultdataCustomersDelete, apiResultdataCustomersNew, apiResultdataCustomersUpdate } from \"../api/apiConfig\";\r\n\r\nexport function* wachResultGetAllCustomers() {\r\n  yield takeEvery(GET_ALL_CUSTOMERS, callResultGetAllCustomers);\r\n}\r\nfunction* callResultGetAllCustomers(action) {\r\n  try {\r\n    const result = yield apiResultGetAllCustomers(action.data);\r\n    if (result.status === 200) {\r\n      if (result.data.responseCode === \"00000\") {\r\n        yield put({\r\n          type: GET_ALL_CUSTOMERS_SUCCESS,\r\n          status: result.data.status,\r\n          data: result.data.customers,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: GET_ALL_CUSTOMERS_FAILED,\r\n          status: result.data.status,\r\n          data: result.data.customers,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } else if (result.status === 500) {\r\n      yield put({\r\n        type: GET_ALL_CUSTOMERS_FAILED,\r\n        status: false,\r\n        data: null,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: GET_ALL_CUSTOMERS_FAILED,\r\n        status: result.data.status,\r\n        data: result.data.customers,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: GET_ALL_CUSTOMERS_FAILED, data: null });\r\n  }\r\n}\r\n\r\nexport function* wachResultdataCustomersDelete() {\r\n  yield takeEvery(DELETE_BY_ID_CUSTOMERS, callResultdataCustomersDelete);\r\n}\r\nfunction* callResultdataCustomersDelete(action) {\r\n  try {\r\n    const result = yield apiResultdataCustomersDelete(action.data, action.token);\r\n    console.log(\"result:\", result);\r\n    console.log(\"status:\", result.status);\r\n    console.log(\"data.responseCode:\", result.data.responseCode);\r\n    if (result.status === 200) {\r\n      if (result.data.responseCode === \"00000\") {\r\n        yield put({\r\n          type: DELETE_BY_ID_CUSTOMERS_SUCCESS,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: DELETE_BY_ID_CUSTOMERS_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } else {\r\n      yield put({\r\n        type: DELETE_BY_ID_CUSTOMERS_FAILED,\r\n        status: result.data.status,\r\n        data: result.data,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: DELETE_BY_ID_CUSTOMERS_FAILED, data: null });\r\n  }\r\n}\r\n\r\n\r\nexport function* wachResultdataCustomersNew() {\r\n    yield takeEvery(INSRT_NEW_CUSTOMERS, callResultdataCustomersNew);\r\n  }\r\n  function* callResultdataCustomersNew(action) {\r\n    try {\r\n      const result = yield apiResultdataCustomersNew(action.data, action.token );\r\n      console.log(\"result:\", result);\r\n      console.log(\"status:\", result.status);\r\n      console.log(\"data.responseCode:\", result.data.responseCode);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: INSRT_NEW_CUSTOMERS_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: INSRT_NEW_CUSTOMERS_FAILED,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: INSRT_NEW_CUSTOMERS_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: INSRT_NEW_CUSTOMERS_FAILED, data: null });\r\n    }\r\n  }\r\n\r\n\r\n  export function* wachResultdataCustomersUpdate() {\r\n    yield takeEvery(UPDATE_CUSTOMERS, callResultdataCustomersUpdate);\r\n  }\r\n  function* callResultdataCustomersUpdate(action) {\r\n    try {\r\n      const result = yield apiResultdataCustomersUpdate(action.data, action.token );\r\n      console.log(\"result:\", result);\r\n      console.log(\"status:\", result.status);\r\n      console.log(\"data.responseCode:\", result.data.responseCode);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: UPDATE_CUSTOMERS_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: UPDATE_CUSTOMERS_FAILED,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: UPDATE_CUSTOMERS_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: UPDATE_CUSTOMERS_FAILED, data: null });\r\n    }\r\n  }\r\n","import { takeEvery, put } from \"redux-saga/effects\";\r\nimport {\r\n  GET_ALL_USERS,\r\n  GET_ALL_USERS_FAILED,\r\n  GET_ALL_USERS_SUCCESS,\r\n\r\n  DELETE_BY_ID_USERS,\r\n  DELETE_BY_ID_USERS_FAILED,\r\n  DELETE_BY_ID_USERS_SUCCESS,\r\n\r\n  INSRT_NEW_USERS,\r\n  INSRT_NEW_USERS_FAILED,\r\n  INSRT_NEW_USERS_SUCCESS,\r\n\r\n  UPDATE_USERS,\r\n  UPDATE_USERS_FAILED,\r\n  UPDATE_USERS_SUCCESS,\r\n  \r\n} from \"../utils/commonType\";\r\nimport { apiResultGetAllUsers, apiResultdataUsersDelete, apiResultdataUsersNew, apiResultdataUsersUpdate } from \"../api/apiConfig\";\r\n\r\nexport function* wachResultGetAllUsers() {\r\n  yield takeEvery(GET_ALL_USERS, callResultGetAllUsers);\r\n}\r\nfunction* callResultGetAllUsers(action) {\r\n  try {\r\n    const result = yield apiResultGetAllUsers(action.data);\r\n    if (result.status === 200) {\r\n      if (result.data.responseCode === \"00000\") {\r\n        yield put({\r\n          type: GET_ALL_USERS_SUCCESS,\r\n          status: result.data.status,\r\n          data: result.data.users,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: GET_ALL_USERS_FAILED,\r\n          status: result.data.status,\r\n          data: result.data.listData,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } else if (result.status === 500) {\r\n      yield put({\r\n        type: GET_ALL_USERS_FAILED,\r\n        status: false,\r\n        data: null,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: GET_ALL_USERS_FAILED,\r\n        status: result.data.status,\r\n        data: result.data.listData,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: GET_ALL_USERS_FAILED, data: null });\r\n  }\r\n}\r\n\r\nexport function* wachResultdataUsersDelete() {\r\n  yield takeEvery(DELETE_BY_ID_USERS, callResultdataUsersDelete);\r\n}\r\nfunction* callResultdataUsersDelete(action) {\r\n  try {\r\n    const result = yield apiResultdataUsersDelete(action.data, action.token);\r\n    console.log(\"result:\", result);\r\n    console.log(\"status:\", result.status);\r\n    console.log(\"data.responseCode:\", result.data.responseCode);\r\n    if (result.status === 200) {\r\n      if (result.data.responseCode === \"00000\") {\r\n        yield put({\r\n          type: DELETE_BY_ID_USERS_SUCCESS,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: DELETE_BY_ID_USERS_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } else {\r\n      yield put({\r\n        type: DELETE_BY_ID_USERS_FAILED,\r\n        status: result.data.status,\r\n        data: result.data,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: DELETE_BY_ID_USERS_FAILED, data: null });\r\n  }\r\n}\r\n\r\n\r\nexport function* wachResultdataUsersNew() {\r\n    yield takeEvery(INSRT_NEW_USERS, callResultdataUsersNew);\r\n  }\r\n  function* callResultdataUsersNew(action) {\r\n    try {\r\n      const result = yield apiResultdataUsersNew(action.data, action.token );\r\n      console.log(\"result:\", result);\r\n      console.log(\"status:\", result.status);\r\n      console.log(\"data.responseCode:\", result.data.responseCode);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: INSRT_NEW_USERS_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: INSRT_NEW_USERS_FAILED,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: INSRT_NEW_USERS_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: INSRT_NEW_USERS_FAILED, data: null });\r\n    }\r\n  }\r\n\r\n\r\n  export function* wachResultdataUsersUpdate() {\r\n    yield takeEvery(UPDATE_USERS, callResultdataUsersUpdate);\r\n  }\r\n  function* callResultdataUsersUpdate(action) {\r\n    try {\r\n      const result = yield apiResultdataUsersUpdate(action.data, action.token );\r\n      console.log(\"result:\", result);\r\n      console.log(\"status:\", result.status);\r\n      console.log(\"data.responseCode:\", result.data.responseCode);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: UPDATE_USERS_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: UPDATE_USERS_FAILED,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: UPDATE_USERS_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: UPDATE_USERS_FAILED, data: null });\r\n    }\r\n  }\r\n","import { takeEvery, put } from \"redux-saga/effects\";\r\nimport {\r\n  GET_ALL_DOCUMENT,\r\n  GET_ALL_DOCUMENT_FAILED,\r\n  GET_ALL_DOCUMENT_SUCCESS,\r\n\r\n  DELETE_BY_ID_DOCUMENT,\r\n  DELETE_BY_ID_DOCUMENT_FAILED,\r\n  DELETE_BY_ID_DOCUMENT_SUCCESS,\r\n\r\n  INSRT_NEW_DOCUMENT,\r\n  INSRT_NEW_DOCUMENT_FAILED,\r\n  INSRT_NEW_DOCUMENT_SUCCESS,\r\n\r\n  UPDATE_DOCUMENT,\r\n  UPDATE_DOCUMENT_FAILED,\r\n  UPDATE_DOCUMENT_SUCCESS,\r\n\r\n  GET_ALL_DOCUMENT_BY_ID,\r\n  GET_ALL_DOCUMENT_BY_ID_FAILED,\r\n  GET_ALL_DOCUMENT_BY_ID_SUCCESS\r\n  \r\n} from \"../utils/commonType\";\r\nimport { apiResultGetAllDocument, apiResultdataDocumentDelete, apiResultdataDocumentNew, apiResultdataDocumentUpdate,\r\n  apiResultdataDocumentById } from \"../api/apiConfig\";\r\n\r\nexport function* wachResultGetAllDocument() {\r\n  yield takeEvery(GET_ALL_DOCUMENT, callResultGetAllDocument);\r\n}\r\nfunction* callResultGetAllDocument(action) {\r\n  try {\r\n    const result = yield apiResultGetAllDocument(action.data);\r\n    if (result.status === 200) {\r\n      if (result.data.responseCode === \"00000\") {\r\n        yield put({\r\n          type: GET_ALL_DOCUMENT_SUCCESS,\r\n          status: result.data.status,\r\n          data: result.data.documents,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: GET_ALL_DOCUMENT_FAILED,\r\n          status: result.data.status,\r\n          data: result.data.listData,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } else if (result.status === 500) {\r\n      yield put({\r\n        type: GET_ALL_DOCUMENT_FAILED,\r\n        status: false,\r\n        data: null,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: GET_ALL_DOCUMENT_FAILED,\r\n        status: result.data.status,\r\n        data: result.data.listData,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: GET_ALL_DOCUMENT_FAILED, data: null });\r\n  }\r\n}\r\n\r\nexport function* wachResultdataDocumentDelete() {\r\n  yield takeEvery(DELETE_BY_ID_DOCUMENT, callResultdataDocumentDelete);\r\n}\r\nfunction* callResultdataDocumentDelete(action) {\r\n  try {\r\n    const result = yield apiResultdataDocumentDelete(action.data, action.token);\r\n    console.log(\"result:\", result);\r\n    console.log(\"status:\", result.status);\r\n    console.log(\"data.responseCode:\", result.data.responseCode);\r\n    if (result.status === 200) {\r\n      if (result.data.responseCode === \"00000\") {\r\n        yield put({\r\n          type: DELETE_BY_ID_DOCUMENT_SUCCESS,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: DELETE_BY_ID_DOCUMENT_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } else {\r\n      yield put({\r\n        type: DELETE_BY_ID_DOCUMENT_FAILED,\r\n        status: result.data.status,\r\n        data: result.data,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: DELETE_BY_ID_DOCUMENT_FAILED, data: null });\r\n  }\r\n}\r\n\r\n\r\nexport function* wachResultdataDocumentNew() {\r\n    yield takeEvery(INSRT_NEW_DOCUMENT, callResultdataDocumentNew);\r\n  }\r\n  function* callResultdataDocumentNew(action) {\r\n    try {\r\n      const result = yield apiResultdataDocumentNew(action.data, action.token );\r\n      console.log(\"result:\", result);\r\n      console.log(\"status:\", result.status);\r\n      console.log(\"data.responseCode:\", result.data.responseCode);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: INSRT_NEW_DOCUMENT_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: INSRT_NEW_DOCUMENT_FAILED,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: INSRT_NEW_DOCUMENT_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: INSRT_NEW_DOCUMENT_FAILED, data: null });\r\n    }\r\n  }\r\n\r\n\r\n  export function* wachResultdataDocumentUpdate() {\r\n    yield takeEvery(UPDATE_DOCUMENT, callResultdataDocumentUpdate);\r\n  }\r\n  function* callResultdataDocumentUpdate(action) {\r\n    try {\r\n      const result = yield apiResultdataDocumentUpdate(action.data, action.token );\r\n      console.log(\"result:\", result);\r\n      console.log(\"status:\", result.status);\r\n      console.log(\"data.responseCode:\", result.data.responseCode);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: UPDATE_DOCUMENT_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: UPDATE_DOCUMENT_FAILED,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: UPDATE_DOCUMENT_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: UPDATE_DOCUMENT_FAILED, data: null });\r\n    }\r\n  }\r\n\r\n\r\n  export function* wachResultdataDocumentById() {\r\n    yield takeEvery(GET_ALL_DOCUMENT_BY_ID, callResultdataDocumentById);\r\n  }\r\n  function* callResultdataDocumentById(action) {\r\n    try {\r\n      const result = yield apiResultdataDocumentById(action.data, action.token );\r\n      console.log(\"result:\", result);\r\n      console.log(\"status:\", result.status);\r\n      console.log(\"data.responseCode:\", result.data.responseCode);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: GET_ALL_DOCUMENT_BY_ID_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data.documents,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: GET_ALL_DOCUMENT_BY_ID_FAILED,\r\n            status: result.data.status,\r\n            data: result.data.documents,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: GET_ALL_DOCUMENT_BY_ID_FAILED,\r\n          status: result.data.status,\r\n          data: result.data.documents,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: GET_ALL_DOCUMENT_BY_ID_FAILED, data: null });\r\n    }\r\n  }\r\n","import { takeEvery, put } from \"redux-saga/effects\";\r\nimport {\r\n  GET_ALL_ORDER,\r\n  GET_ALL_ORDER_FAILED,\r\n  GET_ALL_ORDER_SUCCESS,\r\n\r\n  DELETE_BY_ID_ORDER,\r\n  DELETE_BY_ID_ORDER_FAILED,\r\n  DELETE_BY_ID_ORDER_SUCCESS,\r\n\r\n  INSRT_NEW_ORDER,\r\n  INSRT_NEW_ORDER_FAILED,\r\n  INSRT_NEW_ORDER_SUCCESS,\r\n\r\n  UPDATE_ORDER,\r\n  UPDATE_ORDER_FAILED,\r\n  UPDATE_ORDER_SUCCESS,\r\n\r\n  GET_MAX_ID_ORDER,\r\n  GET_MAX_ID_ORDER_SUCCESS,\r\n  GET_MAX_ID_ORDER_FAILED,\r\n\r\n  INSRT_NEW_ORDER_DETAIL,\r\n  INSRT_NEW_ORDER_DETAIL_SUCCESS,\r\n  INSRT_NEW_ORDER_DETAIL_FAILED,\r\n\r\n  GET_SEARCH_ORDER,\r\n  GET_SEARCH_ORDER_SUCCESS,\r\n  GET_SEARCH_ORDER_FAILED,\r\n\r\n  GET_PRINT_ORDER,\r\n  GET_PRINT_ORDER_SUCCESS,\r\n  GET_PRINT_ORDER_FAILED\r\n  \r\n} from \"../utils/commonType\";\r\nimport { apiResultGetAllOrder, apiResultdataOrderDelete, apiResultdataOrderNew,\r\n   apiResultdataOrderUpdate, apiResultGetMaxIdOrder, apiResultdataOrderDetailNew,apiResultGetSearchOrder,\r\n   apiResultGetPrintOrder } from \"../api/apiConfig\";\r\n\r\nexport function* wachResultGetAllOrder() {\r\n  yield takeEvery(GET_ALL_ORDER, callResultGetAllOrder);\r\n}\r\nfunction* callResultGetAllOrder(action) {\r\n  try {\r\n    const result = yield apiResultGetAllOrder(action.data);\r\n    if (result.status === 200) {\r\n      if (result.data.responseCode === \"00000\") {\r\n        yield put({\r\n          type: GET_ALL_ORDER_SUCCESS,\r\n          status: result.data.status,\r\n          data: result.data.order,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: GET_ALL_ORDER_FAILED,\r\n          status: result.data.status,\r\n          data: result.data.order,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } else if (result.status === 500) {\r\n      yield put({\r\n        type: GET_ALL_ORDER_FAILED,\r\n        status: false,\r\n        data: null,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: GET_ALL_ORDER_FAILED,\r\n        status: result.data.status,\r\n        data: result.data.order,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: GET_ALL_ORDER_FAILED, data: null });\r\n  }\r\n}\r\n\r\nexport function* wachResultdataOrderDelete() {\r\n  yield takeEvery(DELETE_BY_ID_ORDER, callResultdataOrderDelete);\r\n}\r\nfunction* callResultdataOrderDelete(action) {\r\n  try {\r\n    const result = yield apiResultdataOrderDelete(action.data, action.token);\r\n    console.log(\"result:\", result);\r\n    console.log(\"status:\", result.status);\r\n    console.log(\"data.responseCode:\", result.data.responseCode);\r\n    if (result.status === 200) {\r\n      if (result.data.responseCode === \"00000\") {\r\n        yield put({\r\n          type: DELETE_BY_ID_ORDER_SUCCESS,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: DELETE_BY_ID_ORDER_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } else {\r\n      yield put({\r\n        type: DELETE_BY_ID_ORDER_FAILED,\r\n        status: result.data.status,\r\n        data: result.data,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: DELETE_BY_ID_ORDER_FAILED, data: null });\r\n  }\r\n}\r\n\r\n\r\nexport function* wachResultdataOrderNew() {\r\n    yield takeEvery(INSRT_NEW_ORDER, callResultdataOrderNew);\r\n  }\r\n  function* callResultdataOrderNew(action) {\r\n    try {\r\n      const result = yield apiResultdataOrderNew(action.data, action.token );\r\n      console.log(\"result:\", result);\r\n      console.log(\"status:\", result.status);\r\n      console.log(\"data.responseCode:\", result.data.responseCode);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: INSRT_NEW_ORDER_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: INSRT_NEW_ORDER_FAILED,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: INSRT_NEW_ORDER_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: INSRT_NEW_ORDER_FAILED, data: null });\r\n    }\r\n  }\r\n\r\n\r\n  export function* wachResultdataOrderUpdate() {\r\n    yield takeEvery(UPDATE_ORDER, callResultdataOrderUpdate);\r\n  }\r\n  function* callResultdataOrderUpdate(action) {\r\n    try {\r\n      const result = yield apiResultdataOrderUpdate(action.data, action.token );\r\n      console.log(\"result:\", result);\r\n      console.log(\"status:\", result.status);\r\n      console.log(\"data.responseCode:\", result.data.responseCode);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: UPDATE_ORDER_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: UPDATE_ORDER_FAILED,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: UPDATE_ORDER_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: UPDATE_ORDER_FAILED, data: null });\r\n    }\r\n  }\r\n\r\n\r\n  export function* wachResultGetMaxIdOrder() {\r\n    yield takeEvery(GET_MAX_ID_ORDER, callResultGetMaxIdOrder);\r\n  }\r\n  function* callResultGetMaxIdOrder(action) {\r\n    try {\r\n      const result = yield apiResultGetMaxIdOrder(action.data);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: GET_MAX_ID_ORDER_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data.order[0],\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: GET_MAX_ID_ORDER_FAILED,\r\n            status: result.data.status,\r\n            data: result.data.order,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else if (result.status === 500) {\r\n        yield put({\r\n          type: GET_MAX_ID_ORDER_FAILED,\r\n          status: false,\r\n          data: null,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: GET_MAX_ID_ORDER_FAILED,\r\n          status: result.data.status,\r\n          data: result.data.order,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: GET_MAX_ID_ORDER_FAILED, data: null });\r\n    }\r\n  }\r\n\r\n\r\n  export function* wachResultdataOrderDetailNew() {\r\n    yield takeEvery(INSRT_NEW_ORDER_DETAIL, callResultdataOrderDetailNew);\r\n  }\r\n  function* callResultdataOrderDetailNew(action) {\r\n    try {\r\n      const result = yield apiResultdataOrderDetailNew(action.data, action.token);\r\n      console.log(\"result:\", result);\r\n      console.log(\"status:\", result.status);\r\n      console.log(\"data.responseCode:\", result.data.responseCode);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: INSRT_NEW_ORDER_DETAIL_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: INSRT_NEW_ORDER_DETAIL_FAILED,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: INSRT_NEW_ORDER_DETAIL_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: INSRT_NEW_ORDER_DETAIL_FAILED, data: null });\r\n    }\r\n  }\r\n\r\n  export function* wachResultGetSearchOrder() {\r\n    yield takeEvery(GET_SEARCH_ORDER, callResultGetSearchOrder);\r\n  }\r\n  function* callResultGetSearchOrder(action) {\r\n    try {\r\n      const result = yield apiResultGetSearchOrder(action.data, action.token);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: GET_SEARCH_ORDER_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data.order,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: GET_SEARCH_ORDER_FAILED,\r\n            status: result.data.status,\r\n            data: result.data.Order,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else if (result.status === 500) {\r\n        yield put({\r\n          type: GET_SEARCH_ORDER_FAILED,\r\n          status: false,\r\n          data: null,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: GET_SEARCH_ORDER_FAILED,\r\n          status: result.data.status,\r\n          data: result.data.Order,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: GET_SEARCH_ORDER_FAILED, data: null });\r\n    }\r\n  }\r\n\r\n\r\n  export function* wachResultGetPrintOrder() {\r\n    yield takeEvery(GET_PRINT_ORDER, callResultGetPrintOrder);\r\n  }\r\n  function* callResultGetPrintOrder(action) {\r\n    try {\r\n      const result = yield apiResultGetPrintOrder(action.data, action.token);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: GET_PRINT_ORDER_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data.order,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: GET_PRINT_ORDER_FAILED,\r\n            status: result.data.status,\r\n            data: result.data.order,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else if (result.status === 500) {\r\n        yield put({\r\n          type: GET_PRINT_ORDER_FAILED,\r\n          status: false,\r\n          data: null,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: GET_PRINT_ORDER_FAILED,\r\n          status: result.data.status,\r\n          data: result.data.order,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: GET_PRINT_ORDER_FAILED, data: null });\r\n    }\r\n  }\r\n","import { takeEvery, put } from \"redux-saga/effects\";\r\nimport {\r\n  GET_ALL_TRANSPORTS,\r\n  GET_ALL_TRANSPORTS_FAILED,\r\n  GET_ALL_TRANSPORTS_SUCCESS,\r\n\r\n  DELETE_BY_ID_TRANSPORTS,\r\n  DELETE_BY_ID_TRANSPORTS_FAILED,\r\n  DELETE_BY_ID_TRANSPORTS_SUCCESS,\r\n\r\n  INSRT_NEW_TRANSPORTS,\r\n  INSRT_NEW_TRANSPORTS_FAILED,\r\n  INSRT_NEW_TRANSPORTS_SUCCESS,\r\n\r\n  UPDATE_TRANSPORTS,\r\n  UPDATE_TRANSPORTS_FAILED,\r\n  UPDATE_TRANSPORTS_SUCCESS,\r\n\r\n  GET_ALL_TRANSPORTS_BY_ID,\r\n  GET_ALL_TRANSPORTS_BY_ID_FAILED,\r\n  GET_ALL_TRANSPORTS_BY_ID_SUCCESS\r\n  \r\n} from \"../utils/commonType\";\r\nimport { apiResultGetAllTransports, apiResultdataTransportsDelete, apiResultdataTransportsNew, apiResultdataTransportsUpdate, apiResultdataTransportsById } from \"../api/apiConfig\";\r\n\r\nexport function* wachResultGetAllTransports() {\r\n  yield takeEvery(GET_ALL_TRANSPORTS, callResultGetAllTransports);\r\n}\r\nfunction* callResultGetAllTransports(action) {\r\n  try {\r\n    const result = yield apiResultGetAllTransports(action.data);\r\n    if (result.status === 200) {\r\n      if (result.data.responseCode === \"00000\") {\r\n        yield put({\r\n          type: GET_ALL_TRANSPORTS_SUCCESS,\r\n          status: result.data.status,\r\n          data: result.data.transports,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: GET_ALL_TRANSPORTS_FAILED,\r\n          status: result.data.status,\r\n          data: result.data.transports,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } else if (result.status === 500) {\r\n      yield put({\r\n        type: GET_ALL_TRANSPORTS_FAILED,\r\n        status: false,\r\n        data: null,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    } else {\r\n      yield put({\r\n        type: GET_ALL_TRANSPORTS_FAILED,\r\n        status: result.data.status,\r\n        data: result.data.transports,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: GET_ALL_TRANSPORTS_FAILED, data: null });\r\n  }\r\n}\r\n\r\nexport function* wachResultdataTransportsDelete() {\r\n  yield takeEvery(DELETE_BY_ID_TRANSPORTS, callResultdataTransportsDelete);\r\n}\r\nfunction* callResultdataTransportsDelete(action) {\r\n  try {\r\n    const result = yield apiResultdataTransportsDelete(action.data, action.token);\r\n    console.log(\"result:\", result);\r\n    console.log(\"status:\", result.status);\r\n    console.log(\"data.responseCode:\", result.data.responseCode);\r\n    if (result.status === 200) {\r\n      if (result.data.responseCode === \"00000\") {\r\n        yield put({\r\n          type: DELETE_BY_ID_TRANSPORTS_SUCCESS,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: DELETE_BY_ID_TRANSPORTS_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } else {\r\n      yield put({\r\n        type: DELETE_BY_ID_TRANSPORTS_FAILED,\r\n        status: result.data.status,\r\n        data: result.data,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: DELETE_BY_ID_TRANSPORTS_FAILED, data: null });\r\n  }\r\n}\r\n\r\n\r\nexport function* wachResultdataTransportsNew() {\r\n    yield takeEvery(INSRT_NEW_TRANSPORTS, callResultdataTransportsNew);\r\n  }\r\n  function* callResultdataTransportsNew(action) {\r\n    try {\r\n      const result = yield apiResultdataTransportsNew(action.data, action.token );\r\n      console.log(\"result:\", result);\r\n      console.log(\"status:\", result.status);\r\n      console.log(\"data.responseCode:\", result.data.responseCode);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: INSRT_NEW_TRANSPORTS_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: INSRT_NEW_TRANSPORTS_FAILED,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: INSRT_NEW_TRANSPORTS_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: INSRT_NEW_TRANSPORTS_FAILED, data: null });\r\n    }\r\n  }\r\n\r\n\r\n  export function* wachResultdataTransportsUpdate() {\r\n    yield takeEvery(UPDATE_TRANSPORTS, callResultdataTransportsUpdate);\r\n  }\r\n  function* callResultdataTransportsUpdate(action) {\r\n    try {\r\n      const result = yield apiResultdataTransportsUpdate(action.data, action.token );\r\n      console.log(\"result:\", result);\r\n      console.log(\"status:\", result.status);\r\n      console.log(\"data.responseCode:\", result.data.responseCode);\r\n      if (result.status === 200) {\r\n        if (result.data.responseCode === \"00000\") {\r\n          yield put({\r\n            type: UPDATE_TRANSPORTS_SUCCESS,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        } else {\r\n          yield put({\r\n            type: UPDATE_TRANSPORTS_FAILED,\r\n            status: result.data.status,\r\n            data: result.data,\r\n            message: result.data.message,\r\n            responseCode: result.data.responseCode,\r\n          });\r\n        }\r\n      } else {\r\n        yield put({\r\n          type: UPDATE_TRANSPORTS_FAILED,\r\n          status: result.data.status,\r\n          data: result.data,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } catch (error) {\r\n      yield put({ type: UPDATE_TRANSPORTS_FAILED, data: null });\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\nexport function* wachResultdataTransportsById() {\r\n  yield takeEvery(GET_ALL_TRANSPORTS_BY_ID, callResultdataTransportsById);\r\n}\r\nfunction* callResultdataTransportsById(action) {\r\n  try {\r\n    const result = yield apiResultdataTransportsById(action.data, action.token );\r\n    console.log(\"result:\", result);\r\n    console.log(\"status:\", result.status);\r\n    console.log(\"data.responseCode:\", result.data.responseCode);\r\n    if (result.status === 200) {\r\n      if (result.data.responseCode === \"00000\") {\r\n        yield put({\r\n          type: GET_ALL_TRANSPORTS_BY_ID_SUCCESS,\r\n          status: result.data.status,\r\n          data: result.data.transports,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      } else {\r\n        yield put({\r\n          type: GET_ALL_TRANSPORTS_BY_ID_FAILED,\r\n          status: result.data.status,\r\n          data: result.data.transports,\r\n          message: result.data.message,\r\n          responseCode: result.data.responseCode,\r\n        });\r\n      }\r\n    } else {\r\n      yield put({\r\n        type: GET_ALL_TRANSPORTS_BY_ID_FAILED,\r\n        status: result.data.status,\r\n        data: result.data,\r\n        message: result.data.message,\r\n        responseCode: result.data.responseCode,\r\n      });\r\n    }\r\n  } catch (error) {\r\n    yield put({ type: GET_ALL_TRANSPORTS_BY_ID_FAILED, data: null });\r\n  }\r\n}","import { takeEvery, put } from \"redux-saga/effects\";\nimport {\n  GET_ALL_REPORT,\n  GET_ALL_REPORT_FAILED,\n  GET_ALL_REPORT_SUCCESS,\n  GET_SUM_REPORT,\n  GET_SUM_REPORT_SUCCESS,\n  GET_SUM_REPORT_FAILED\n  \n} from \"../utils/commonType\";\nimport { apiResultGetAllReport, apiResultGetSumReport } from \"../api/apiConfig\";\n\nexport function* wachResultGetAllReport() {\n  yield takeEvery(GET_ALL_REPORT, callResultGetAllReport);\n}\nfunction* callResultGetAllReport(action) {\n  try {\n    const result = yield apiResultGetAllReport(action.data, action.token);\n    console.log('result:', result)\n    if (result.status === 200) {\n      if (result.data.responseCode === \"00000\") {\n        yield put({\n          type: GET_ALL_REPORT_SUCCESS,\n          status: result.data.status,\n          data: result.data,\n          message: result.data.message,\n          responseCode: result.data.responseCode,\n        });\n      } else {\n        yield put({\n          type: GET_ALL_REPORT_FAILED,\n          status: result.data.status,\n          data: result.data,\n          message: result.data.message,\n          responseCode: result.data.responseCode,\n        });\n      }\n    } else if (result.status === 500) {\n      yield put({\n        type: GET_ALL_REPORT_FAILED,\n        status: false,\n        data: null,\n        message: result.data.message,\n        responseCode: result.data.responseCode,\n      });\n    } else {\n      yield put({\n        type: GET_ALL_REPORT_FAILED,\n        status: result.data.status,\n        data: result.data.listData,\n        message: result.data.message,\n        responseCode: result.data.responseCode,\n      });\n    }\n  } catch (error) {\n    yield put({ type: GET_ALL_REPORT_FAILED, data: null });\n  }\n}\n\nexport function* wachResultGetSumReport() {\n  yield takeEvery(GET_SUM_REPORT, callResultGetSumReport);\n}\nfunction* callResultGetSumReport(action) {\n  try {\n    const result = yield apiResultGetSumReport(action.token);\n    console.log('result:', result)\n    if (result.status === 200) {\n      if (result.data.responseCode === \"00000\") {\n        yield put({\n          type: GET_SUM_REPORT_SUCCESS,\n          status: result.data.status,\n          data: result.data.dataSum,\n          message: result.data.message,\n          responseCode: result.data.responseCode,\n        });\n      } else {\n        yield put({\n          type: GET_SUM_REPORT_FAILED,\n          status: result.data.status,\n          data: result.data.dataSum,\n          message: result.data.message,\n          responseCode: result.data.responseCode,\n        });\n      }\n    } else if (result.status === 500) {\n      yield put({\n        type: GET_SUM_REPORT_FAILED,\n        status: false,\n        data: null,\n        message: result.data.message,\n        responseCode: result.data.responseCode,\n      });\n    } else {\n      yield put({\n        type: GET_SUM_REPORT_FAILED,\n        status: result.data.status,\n        data: result.data.dataSum,\n        message: result.data.message,\n        responseCode: result.data.responseCode,\n      });\n    }\n  } catch (error) {\n    yield put({ type: GET_SUM_REPORT_FAILED, data: null });\n  }\n}\n\n","import { takeEvery, put } from \"redux-saga/effects\";\nimport {\n\n  INSRT_NEW_IMPORT,\n  INSRT_NEW_IMPORT_FAILED,\n  INSRT_NEW_IMPORT_SUCCESS,\n  GET_MAX_ID_IMPORT,\n  GET_MAX_ID_IMPORT_SUCCESS,\n  GET_MAX_ID_IMPORT_FAILED,\n\n  INSRT_NEW_IMPORT_DETAIL,\n  INSRT_NEW_IMPORT_DETAIL_SUCCESS,\n  INSRT_NEW_IMPORT_DETAIL_FAILED,\n\n  GET_PRINT_IMPORT,\n  GET_PRINT_IMPORT_FAILED,\n  GET_PRINT_IMPORT_SUCCESS\n\n  \n} from \"../utils/commonType\";\nimport { apiResultdataImportNew, apiResultGetMaxIdImport, apiResultdataImportDetailNew, apiResultGetPrintImport } from \"../api/apiConfig\";\n\n\n\nexport function* wachResultdataImportNew() {\n    yield takeEvery(INSRT_NEW_IMPORT, callResultdataImportNew);\n  }\n  function* callResultdataImportNew(action) {\n    try {\n      const result = yield apiResultdataImportNew(action.data, action.token );\n      console.log(\"result:\", result);\n      console.log(\"status:\", result.status);\n      console.log(\"data.responseCode:\", result.data.responseCode);\n      console.log(\"result.data.responseCode:\", result.data.responseCode);\n      //00000\n      if (result.status === 200) {\n        if (result.data.responseCode === \"00000\") {\n          yield put({\n            type: INSRT_NEW_IMPORT_SUCCESS,\n            status: result.data.status,\n            data: result.data,\n            message: result.data.message,\n            responseCode: result.data.responseCode,\n          });\n        } else {\n          yield put({\n            type: INSRT_NEW_IMPORT_FAILED,\n            status: result.data.status,\n            data: result.data,\n            message: result.data.message,\n            responseCode: result.data.responseCode,\n          });\n        }\n      } else {\n        yield put({\n          type: INSRT_NEW_IMPORT_FAILED,\n          status: result.data.status,\n          data: result.data,\n          message: result.data.message,\n          responseCode: result.data.responseCode,\n        });\n      }\n    } catch (error) {\n      yield put({ type: INSRT_NEW_IMPORT_FAILED, data: null });\n    }\n  }\n\n\n  export function* wachResultGetMaxIdImport() {\n    yield takeEvery(GET_MAX_ID_IMPORT, callResultGetMaxIdImport);\n  }\n  function* callResultGetMaxIdImport(action) {\n    try {\n      const result = yield apiResultGetMaxIdImport(action.data);\n      console.log('result:', result)\n      if (result.status === 200) {\n        if (result.data.responseCode === \"00000\") {\n          yield put({\n            type: GET_MAX_ID_IMPORT_SUCCESS,\n            status: result.data.status,\n            data: result.data.imports[0],\n            message: result.data.message,\n            responseCode: result.data.responseCode,\n          });\n        } else {\n          yield put({\n            type: GET_MAX_ID_IMPORT_FAILED,\n            status: result.data.status,\n            data: result.data.imports,\n            message: result.data.message,\n            responseCode: result.data.responseCode,\n          });\n        }\n      } else if (result.status === 500) {\n        yield put({\n          type: GET_MAX_ID_IMPORT_FAILED,\n          status: false,\n          data: null,\n          message: result.data.message,\n          responseCode: result.data.responseCode,\n        });\n      } else {\n        yield put({\n          type: GET_MAX_ID_IMPORT_FAILED,\n          status: result.data.status,\n          data: result.data.imports,\n          message: result.data.message,\n          responseCode: result.data.responseCode,\n        });\n      }\n    } catch (error) {\n      yield put({ type: GET_MAX_ID_IMPORT_FAILED, data: null });\n    }\n  }\n\n\n  export function* wachResultdataImportDetailNew() {\n    yield takeEvery(INSRT_NEW_IMPORT_DETAIL, callResultdataImportDetailNew);\n  }\n  function* callResultdataImportDetailNew(action) {\n    try {\n      const result = yield apiResultdataImportDetailNew(action.data, action.token);\n      console.log(\"result:\", result);\n      console.log(\"status:\", result.status);\n      console.log(\"data.responseCode:\", result.data.responseCode);\n      if (result.status === 200) {\n        if (result.data.responseCode === \"00000\") {\n          yield put({\n            type: INSRT_NEW_IMPORT_DETAIL_SUCCESS,\n            status: result.data.status,\n            data: result.data,\n            message: result.data.message,\n            responseCode: result.data.responseCode,\n          });\n        } else {\n          yield put({\n            type: INSRT_NEW_IMPORT_DETAIL_FAILED,\n            status: result.data.status,\n            data: result.data,\n            message: result.data.message,\n            responseCode: result.data.responseCode,\n          });\n        }\n      } else {\n        yield put({\n          type: INSRT_NEW_IMPORT_DETAIL_FAILED,\n          status: result.data.status,\n          data: result.data,\n          message: result.data.message,\n          responseCode: result.data.responseCode,\n        });\n      }\n    } catch (error) {\n      yield put({ type: INSRT_NEW_IMPORT_DETAIL_FAILED, data: null });\n    }\n  }\n\n\n  export function* wachResultGetPrintImport() {\n    yield takeEvery(GET_PRINT_IMPORT, callResultGetPrintImport);\n  }\n  function* callResultGetPrintImport(action) {\n    try {\n      const result = yield apiResultGetPrintImport(action.data, action.token);\n      console.log('result:', result)\n      if (result.status === 200) {\n        if (result.data.responseCode === \"00000\") {\n          yield put({\n            type: GET_PRINT_IMPORT_SUCCESS,\n            status: result.data.status,\n            data: result.data.imports,\n            message: result.data.message,\n            responseCode: result.data.responseCode,\n          });\n        } else {\n          yield put({\n            type: GET_PRINT_IMPORT_FAILED,\n            status: result.data.status,\n            data: result.data.imports,\n            message: result.data.message,\n            responseCode: result.data.responseCode,\n          });\n        }\n      } else if (result.status === 500) {\n        yield put({\n          type: GET_PRINT_IMPORT_FAILED,\n          status: false,\n          data: null,\n          message: result.data.message,\n          responseCode: result.data.responseCode,\n        });\n      } else {\n        yield put({\n          type: GET_PRINT_IMPORT_FAILED,\n          status: result.data.status,\n          data: result.data.imports,\n          message: result.data.message,\n          responseCode: result.data.responseCode,\n        });\n      }\n    } catch (error) {\n      yield put({ type: GET_PRINT_IMPORT_FAILED, data: null });\n    }\n  }\n","import { takeEvery, put } from \"redux-saga/effects\";\nimport {\n\n  INSRT_NEW_SELL,\n  INSRT_NEW_SELL_FAILED,\n  INSRT_NEW_SELL_SUCCESS,\n\n  GET_MAX_ID_SELL,\n  GET_MAX_ID_SELL_FAILED,\n  GET_MAX_ID_SELL_SUCCESS,\n\n  INSRT_NEW_SELL_DETAIL,\n  INSRT_NEW_SELL_DETAIL_FAILED,\n  INSRT_NEW_SELL_DETAIL_SUCCESS,\n\n  GET_ALL_SELL,\n  GET_ALL_SELL_FAILED,\n  GET_ALL_SELL_SUCCESS,\n\n\n  GET_PRINT_SELL,\n  GET_PRINT_SELL_SUCCESS,\n  GET_PRINT_SELL_FAILED\n\n\n} from \"../utils/commonType\";\nimport { apiResultdataSellNew, apiResultGetMaxIdSell, apiResultdataSellDetailNew, apiResultGetSell, apiResultGetPrintSell } from \"../api/apiConfig\";\n\n\nexport function* wachResultdataSellNew() {\n  yield takeEvery(INSRT_NEW_SELL, callResultdataSellNew);\n}\nfunction* callResultdataSellNew(action) {\n  try {\n    const result = yield apiResultdataSellNew(action.data, action.token);\n    console.log(\"result:\", result);\n    console.log(\"status:\", result.status);\n    console.log(\"data.responseCode:\", result.data.responseCode);\n    if (result.status === 200) {\n      switch (result.data.responseCode) {\n        case \"00000\":\n          yield put({\n            type: INSRT_NEW_SELL_SUCCESS,\n            status: result.data.status,\n            data: result.data,\n            message: result.data.message,\n            responseCode: result.data.responseCode,\n          });\n          break;\n        case result.data.responseCode:\n          yield put({\n            type: INSRT_NEW_SELL_FAILED,\n            status: result.data.status,\n            data: result.data,\n            message: result.data.message,\n            responseCode: result.data.responseCode,\n          });\n          break;\n\n        default:\n          break;\n      }\n\n    } else {\n      yield put({\n        type: INSRT_NEW_SELL_FAILED,\n        status: result.data.status,\n        data: result.data,\n        message: result.data.message,\n        responseCode: result.data.responseCode,\n      });\n    }\n  } catch (error) {\n    yield put({ type: INSRT_NEW_SELL_FAILED, data: null });\n  }\n}\n\n\nexport function* wachResultGetMaxIdSell() {\n  yield takeEvery(GET_MAX_ID_SELL, callResultGetMaxIdSell);\n}\nfunction* callResultGetMaxIdSell(action) {\n  try {\n    const result = yield apiResultGetMaxIdSell(action.data);\n    if (result.status === 200) {\n      if (result.data.responseCode === \"00000\") {\n        yield put({\n          type: GET_MAX_ID_SELL_SUCCESS,\n          status: result.data.status,\n          data: result.data.sell[0],\n          message: result.data.message,\n          responseCode: result.data.responseCode,\n        });\n      } else {\n        yield put({\n          type: GET_MAX_ID_SELL_FAILED,\n          status: result.data.status,\n          data: result.data.sell,\n          message: result.data.message,\n          responseCode: result.data.responseCode,\n        });\n      }\n    } else if (result.status === 500) {\n      yield put({\n        type: GET_MAX_ID_SELL_FAILED,\n        status: false,\n        data: null,\n        message: result.data.message,\n        responseCode: result.data.responseCode,\n      });\n    } else {\n      yield put({\n        type: GET_MAX_ID_SELL_FAILED,\n        status: result.data.status,\n        data: result.data.sell,\n        message: result.data.message,\n        responseCode: result.data.responseCode,\n      });\n    }\n  } catch (error) {\n    yield put({ type: GET_MAX_ID_SELL_FAILED, data: null });\n  }\n}\n\nexport function* wachResultdataSellDetailNew() {\n  yield takeEvery(INSRT_NEW_SELL_DETAIL, callResultdataSellDetailNew);\n}\nfunction* callResultdataSellDetailNew(action) {\n  try {\n    const result = yield apiResultdataSellDetailNew(action.data, action.token);\n    console.log(\"result:\", result);\n    console.log(\"status:\", result.status);\n    console.log(\"data.responseCode:\", result.data.responseCode);\n    if (result.status === 200) {\n      if (result.data.responseCode === \"00000\") {\n        yield put({\n          type: INSRT_NEW_SELL_DETAIL_SUCCESS,\n          status: result.data.status,\n          data: result.data,\n          message: result.data.message,\n          responseCode: result.data.responseCode,\n        });\n      } else {\n        yield put({\n          type: INSRT_NEW_SELL_DETAIL_FAILED,\n          status: result.data.status,\n          data: result.data,\n          message: result.data.message,\n          responseCode: result.data.responseCode,\n        });\n      }\n    } else {\n      yield put({\n        type: INSRT_NEW_SELL_DETAIL_FAILED,\n        status: result.data.status,\n        data: result.data,\n        message: result.data.message,\n        responseCode: result.data.responseCode,\n      });\n    }\n  } catch (error) {\n    yield put({ type: INSRT_NEW_SELL_DETAIL_FAILED, data: null });\n  }\n}\n\n\nexport function* wachResultGetdSell() {\n  yield takeEvery(GET_ALL_SELL, callResultGetdSell);\n}\nfunction* callResultGetdSell(action) {\n  try {\n    const result = yield apiResultGetSell(action.data);\n    if (result.status === 200) {\n      if (result.data.responseCode === \"00000\") {\n        yield put({\n          type: GET_ALL_SELL_SUCCESS,\n          status: result.data.status,\n          data: result.data.sell,\n          message: result.data.message,\n          responseCode: result.data.responseCode,\n        });\n      } else {\n        yield put({\n          type: GET_ALL_SELL_FAILED,\n          status: result.data.status,\n          data: result.data.sell,\n          message: result.data.message,\n          responseCode: result.data.responseCode,\n        });\n      }\n    } else if (result.status === 500) {\n      yield put({\n        type: GET_ALL_SELL_FAILED,\n        status: false,\n        data: null,\n        message: result.data.message,\n        responseCode: result.data.responseCode,\n      });\n    } else {\n      yield put({\n        type: GET_ALL_SELL_FAILED,\n        status: result.data.status,\n        data: result.data.sell,\n        message: result.data.message,\n        responseCode: result.data.responseCode,\n      });\n    }\n  } catch (error) {\n    yield put({ type: GET_ALL_SELL_FAILED, data: null });\n  }\n}\n\n\nexport function* wachResultGetdPrintSell() {\n  yield takeEvery(GET_PRINT_SELL, callResultGetdPrintSell);\n}\nfunction* callResultGetdPrintSell(action) {\n  try {\n    const result = yield apiResultGetPrintSell(action.data, action.token);\n    if (result.status === 200) {\n      if (result.data.responseCode === \"00000\") {\n        yield put({\n          type: GET_PRINT_SELL_SUCCESS,\n          status: result.data.status,\n          data: result.data.sell,\n          message: result.data.message,\n          responseCode: result.data.responseCode,\n        });\n      } else {\n        yield put({\n          type: GET_PRINT_SELL_FAILED,\n          status: result.data.status,\n          data: result.data.sell,\n          message: result.data.message,\n          responseCode: result.data.responseCode,\n        });\n      }\n    } else if (result.status === 500) {\n      yield put({\n        type: GET_PRINT_SELL_FAILED,\n        status: false,\n        data: null,\n        message: result.data.message,\n        responseCode: result.data.responseCode,\n      });\n    } else {\n      yield put({\n        type: GET_PRINT_SELL_FAILED,\n        status: result.data.status,\n        data: result.data.sell,\n        message: result.data.message,\n        responseCode: result.data.responseCode,\n      });\n    }\n  } catch (error) {\n    yield put({ type: GET_PRINT_SELL_FAILED, data: null });\n  }\n}\n","import { spawn } from \"redux-saga/effects\";\nimport { wachLogin } from \"./loginSaga\";\nimport {\n  wachResultGetAllCar,\n  wachResultdataCarDelete,\n  wachResultdataCarNew,\n  wachResultdataCarUpdate,\n} from \"./carSaga\";\n\nimport {\n  wachResultGetAllEmployee,\n  wachResultdataEmployeeDelete,\n  wachResultdataEmployeeNew,\n  wachResultdataEmployeeUpdate,\n} from \"./employeeSaga\";\n\nimport {\n  wachResultGetAllSupplier,\n  wachResultdataSupplierDelete,\n  wachResultdataSupplierNew,\n  wachResultdataSupplierUpdate,\n} from \"./supplierSaga\";\n\nimport {\n  wachResultGetAllOil,\n  wachResultdataOilDelete,\n  wachResultdataOilNew,\n  wachResultdataOilUpdate,\n  wachResultGetAllOilByIdSupplier\n} from \"./oilSaga\";\n\nimport {\n  wachResultGetAllCustomers,\n  wachResultdataCustomersDelete,\n  wachResultdataCustomersNew,\n  wachResultdataCustomersUpdate,\n} from \"./customerSaga\";\nimport {\n  wachResultGetAllUsers,\n  wachResultdataUsersDelete,\n  wachResultdataUsersNew,\n  wachResultdataUsersUpdate,\n} from \"./userSaga\";\nimport {\n  wachResultGetAllDocument,\n  wachResultdataDocumentDelete,\n  wachResultdataDocumentNew,\n  wachResultdataDocumentUpdate,\n  wachResultdataDocumentById\n} from \"./documentSaga\";\n\nimport {\n  wachResultGetAllOrder,\n  wachResultdataOrderDelete,\n  wachResultdataOrderNew,\n  wachResultdataOrderUpdate,\n  wachResultGetMaxIdOrder,\n  wachResultdataOrderDetailNew,\n  wachResultGetSearchOrder,\n  wachResultGetPrintOrder\n} from \"./orderSaga\";\n\nimport {\n  wachResultGetAllTransports,\n  wachResultdataTransportsDelete,\n  wachResultdataTransportsNew,\n  wachResultdataTransportsUpdate,\n  wachResultdataTransportsById\n} from \"./transportsSaga\";\n\nimport {wachResultGetAllReport, wachResultGetSumReport} from './reportSaga'\n\nimport {wachResultdataImportNew, wachResultGetMaxIdImport, wachResultdataImportDetailNew, wachResultGetPrintImport} from './importSaga'\n\nimport { wachResultdataSellNew, wachResultGetMaxIdSell, wachResultdataSellDetailNew, wachResultGetdSell, wachResultGetdPrintSell } from './sellSaga'\nexport default function* rootSaga() {\n  yield [\n    yield spawn(wachLogin),\n    yield spawn(wachResultGetAllCar),\n    yield spawn(wachResultdataCarDelete),\n    yield spawn(wachResultdataCarNew),\n    yield spawn(wachResultdataCarUpdate),\n\n    yield spawn(wachResultGetAllEmployee),\n    yield spawn(wachResultdataEmployeeDelete),\n    yield spawn(wachResultdataEmployeeNew),\n    yield spawn(wachResultdataEmployeeUpdate),\n\n    yield spawn(wachResultGetAllSupplier),\n    yield spawn(wachResultdataSupplierDelete),\n    yield spawn(wachResultdataSupplierNew),\n    yield spawn(wachResultdataSupplierUpdate),\n\n    yield spawn(wachResultGetAllOil),\n    yield spawn(wachResultdataOilDelete),\n    yield spawn(wachResultdataOilNew),\n    yield spawn(wachResultdataOilUpdate),\n\n    yield spawn(wachResultGetAllCustomers),\n    yield spawn(wachResultdataCustomersDelete),\n    yield spawn(wachResultdataCustomersNew),\n    yield spawn(wachResultdataCustomersUpdate),\n\n    yield spawn(wachResultGetAllUsers),\n    yield spawn(wachResultdataUsersDelete),\n    yield spawn(wachResultdataUsersNew),\n    yield spawn(wachResultdataUsersUpdate),\n\n    yield spawn(wachResultGetAllDocument),\n    yield spawn(wachResultdataDocumentDelete),\n    yield spawn(wachResultdataDocumentNew),\n    yield spawn(wachResultdataDocumentUpdate),\n\n    yield spawn(wachResultGetAllOrder),\n    yield spawn(wachResultdataOrderDelete),\n    yield spawn(wachResultdataOrderNew),\n    yield spawn(wachResultdataOrderUpdate),\n\n    yield spawn(wachResultGetAllTransports),\n    yield spawn(wachResultdataTransportsDelete),\n    yield spawn(wachResultdataTransportsNew),\n    yield spawn(wachResultdataTransportsUpdate),\n    yield spawn(wachResultGetAllOilByIdSupplier),\n\n    yield spawn(wachResultdataSellNew),\n    yield spawn(wachResultGetMaxIdSell),\n    yield spawn(wachResultdataSellDetailNew),\n\n    yield spawn(wachResultdataOrderDetailNew),\n    yield spawn(wachResultGetMaxIdOrder),\n\n    yield spawn(wachResultGetSearchOrder),\n    yield spawn(wachResultdataImportNew),\n    yield spawn(wachResultGetMaxIdImport),\n    yield spawn(wachResultdataImportDetailNew),\n    yield spawn(wachResultGetAllReport),\n    yield spawn(wachResultGetSumReport),\n    yield spawn(wachResultGetdSell),\n    yield spawn(wachResultGetdPrintSell),\n    yield spawn(wachResultGetPrintOrder),\n    yield spawn(wachResultGetPrintImport),\n    yield spawn(wachResultdataDocumentById),\n    yield spawn(wachResultdataTransportsById),\n    \n\n  ];\n}\n","import {\n  LOGIN,\n  LOGIN_FAILED,\n  LOGIN_SUCCESS\n} from \"../utils/commonType\";\n\nconst initialState = {\n  userInfo: null,\n  error: false,\n  success: false,\n  actionType: null,\n  responseCode: null,\n  description: null,\n  isLoading: false,\n  responseDescription: null,\n  accessToken: null,\n  setlogin: false,\n  dataLogout: null\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case LOGIN:\n      return { ...state, isLoading: false, userInfo: null };\n    case LOGIN_FAILED:\n      return {\n        ...state,\n        actionType: LOGIN_FAILED,\n        error: true,\n        userInfo: null,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        actionType: LOGIN_SUCCESS,\n        success: true,\n        userInfo: action.userInfo,\n        error: false,\n      };\n    default:\n      return state;\n  }\n};\n","import {\r\n  GET_ALL_CAR,\r\n  GET_ALL_CAR_SUCCESS,\r\n  GET_ALL_CAR_FAILED,\r\n  DELETE_BY_ID_CAR,\r\n  DELETE_BY_ID_CAR_FAILED,\r\n  DELETE_BY_ID_CAR_SUCCESS,\r\n  INSRT_NEW_CAR,\r\n  INSRT_NEW_CAR_FAILED,\r\n  INSRT_NEW_CAR_SUCCESS,\r\n  UPDATE_CAR,\r\n  UPDATE_CAR_FAILED,\r\n  UPDATE_CAR_SUCCESS,\r\n} from \"../utils/commonType\";\r\n\r\nconst initialState = {\r\n  error: false,\r\n  success: false,\r\n  actionType: null,\r\n  isLoading: false,\r\n  dataResultCar: null,\r\n  dataResultCarDelete: null,\r\n  dataResultCarNew: null,\r\n  dataResultCarUpdate: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_CAR:\r\n      return { ...state, isLoading: false, dataResultCar: null };\r\n    case GET_ALL_CAR_FAILED:\r\n      return {\r\n        ...state,\r\n        actionType: GET_ALL_CAR_FAILED,\r\n        dataResultCar: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n    case GET_ALL_CAR_SUCCESS:\r\n      return {\r\n        ...state,\r\n        actionType: GET_ALL_CAR_SUCCESS,\r\n        dataResultCar: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n    case DELETE_BY_ID_CAR:\r\n      return { ...state, isLoading: false, dataResultCarDelete: null };\r\n    case DELETE_BY_ID_CAR_FAILED:\r\n      return {\r\n        ...state,\r\n        actionType: DELETE_BY_ID_CAR_FAILED,\r\n        dataResultCarDelete: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n    case DELETE_BY_ID_CAR_SUCCESS:\r\n      return {\r\n        ...state,\r\n        actionType: DELETE_BY_ID_CAR_SUCCESS,\r\n        dataResultCarDelete: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n\r\n    case INSRT_NEW_CAR:\r\n      return { ...state, isLoading: false, dataResultCarNew: null };\r\n    case INSRT_NEW_CAR_FAILED:\r\n      return {\r\n        ...state,\r\n        actionType: INSRT_NEW_CAR_FAILED,\r\n        dataResultCarNew: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n    case INSRT_NEW_CAR_SUCCESS:\r\n      return {\r\n        ...state,\r\n        actionType: INSRT_NEW_CAR_SUCCESS,\r\n        dataResultCarNew: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n\r\n    case UPDATE_CAR:\r\n      return { ...state, isLoading: false, dataResultCarUpdate: null };\r\n    case UPDATE_CAR_FAILED:\r\n      return {\r\n        ...state,\r\n        actionType: UPDATE_CAR_FAILED,\r\n        dataResultCarUpdate: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n    case UPDATE_CAR_SUCCESS:\r\n      return {\r\n        ...state,\r\n        actionType: UPDATE_CAR_SUCCESS,\r\n        dataResultCarUpdate: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n    GET_ALL_EMPLOYEE,\r\n    GET_ALL_EMPLOYEE_SUCCESS,\r\n    GET_ALL_EMPLOYEE_FAILED,\r\n\r\n    DELETE_BY_ID_EMPLOYEE,\r\n    DELETE_BY_ID_EMPLOYEE_FAILED,\r\n    DELETE_BY_ID_EMPLOYEE_SUCCESS,\r\n\r\n    INSRT_NEW_EMPLOYEE,\r\n    INSRT_NEW_EMPLOYEE_FAILED,\r\n    INSRT_NEW_EMPLOYEE_SUCCESS,\r\n\r\n    UPDATE_EMPLOYEE,\r\n    UPDATE_EMPLOYEE_FAILED,\r\n    UPDATE_EMPLOYEE_SUCCESS,\r\n  } from \"../utils/commonType\";\r\n  \r\n  const initialState = {\r\n    error: false,\r\n    success: false,\r\n    actionType: null,\r\n    isLoading: false,\r\n    dataResultEmployee: null,\r\n    dataResultEmployeeDelete: null,\r\n    dataResultEmployeeNew: null,\r\n    dataResultEmployeeUpdate: null,\r\n  };\r\n  \r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case GET_ALL_EMPLOYEE:\r\n        return { ...state, isLoading: false, dataResultEmployee: null };\r\n      case GET_ALL_EMPLOYEE_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: GET_ALL_EMPLOYEE_FAILED,\r\n          dataResultEmployee: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case GET_ALL_EMPLOYEE_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: GET_ALL_EMPLOYEE_SUCCESS,\r\n          dataResultEmployee: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case DELETE_BY_ID_EMPLOYEE:\r\n        return { ...state, isLoading: false, dataResultEmployeeDelete: null };\r\n      case DELETE_BY_ID_EMPLOYEE_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: DELETE_BY_ID_EMPLOYEE_FAILED,\r\n          dataResultEmployeeDelete: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case DELETE_BY_ID_EMPLOYEE_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: DELETE_BY_ID_EMPLOYEE_SUCCESS,\r\n          dataResultEmployeeDelete: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      case INSRT_NEW_EMPLOYEE:\r\n        return { ...state, isLoading: false, dataResultEmployeeNew: null };\r\n      case INSRT_NEW_EMPLOYEE_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: INSRT_NEW_EMPLOYEE_FAILED,\r\n          dataResultEmployeeNew: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case INSRT_NEW_EMPLOYEE_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: INSRT_NEW_EMPLOYEE_SUCCESS,\r\n          dataResultEmployeeNew: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      case UPDATE_EMPLOYEE:\r\n        return { ...state, isLoading: false, dataResultEmployeeUpdate: null };\r\n      case UPDATE_EMPLOYEE_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: UPDATE_EMPLOYEE_FAILED,\r\n          dataResultEmployeeUpdate: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case UPDATE_EMPLOYEE_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: UPDATE_EMPLOYEE_SUCCESS,\r\n          dataResultEmployeeUpdate: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import {\r\n    GET_ALL_SUPPLIER,\r\n    GET_ALL_SUPPLIER_SUCCESS,\r\n    GET_ALL_SUPPLIER_FAILED,\r\n    DELETE_BY_ID_SUPPLIER,\r\n    DELETE_BY_ID_SUPPLIER_FAILED,\r\n    DELETE_BY_ID_SUPPLIER_SUCCESS,\r\n    INSRT_NEW_SUPPLIER,\r\n    INSRT_NEW_SUPPLIER_FAILED,\r\n    INSRT_NEW_SUPPLIER_SUCCESS,\r\n    UPDATE_SUPPLIER,\r\n    UPDATE_SUPPLIER_FAILED,\r\n    UPDATE_SUPPLIER_SUCCESS,\r\n  } from \"../utils/commonType\";\r\n  \r\n  const initialState = {\r\n    error: false,\r\n    success: false,\r\n    actionType: null,\r\n    isLoading: false,\r\n    dataResultSupplier: null,\r\n    dataResultSupplierDelete: null,\r\n    dataResultSupplierNew: null,\r\n    dataResultSupplierUpdate: null,\r\n  };\r\n  \r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case GET_ALL_SUPPLIER:\r\n        return { ...state, isLoading: false, dataResultSupplier: null };\r\n      case GET_ALL_SUPPLIER_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: GET_ALL_SUPPLIER_FAILED,\r\n          dataResultSupplier: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case GET_ALL_SUPPLIER_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: GET_ALL_SUPPLIER_SUCCESS,\r\n          dataResultSupplier: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case DELETE_BY_ID_SUPPLIER:\r\n        return { ...state, isLoading: false, dataResultSupplierDelete: null };\r\n      case DELETE_BY_ID_SUPPLIER_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: DELETE_BY_ID_SUPPLIER_FAILED,\r\n          dataResultSupplierDelete: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case DELETE_BY_ID_SUPPLIER_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: DELETE_BY_ID_SUPPLIER_SUCCESS,\r\n          dataResultSupplierDelete: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      case INSRT_NEW_SUPPLIER:\r\n        return { ...state, isLoading: false, dataResultSupplierNew: null };\r\n      case INSRT_NEW_SUPPLIER_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: INSRT_NEW_SUPPLIER_FAILED,\r\n          dataResultSupplierNew: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case INSRT_NEW_SUPPLIER_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: INSRT_NEW_SUPPLIER_SUCCESS,\r\n          dataResultSupplierNew: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      case UPDATE_SUPPLIER:\r\n        return { ...state, isLoading: false, dataResultSupplierUpdate: null };\r\n      case UPDATE_SUPPLIER_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: UPDATE_SUPPLIER_FAILED,\r\n          dataResultSupplierUpdate: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case UPDATE_SUPPLIER_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: UPDATE_SUPPLIER_SUCCESS,\r\n          dataResultSupplierUpdate: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import {\r\n    GET_ALL_OIL,\r\n    GET_ALL_OIL_SUCCESS,\r\n    GET_ALL_OIL_FAILED,\r\n    DELETE_BY_ID_OIL,\r\n    DELETE_BY_ID_OIL_FAILED,\r\n    DELETE_BY_ID_OIL_SUCCESS,\r\n    INSRT_NEW_OIL,\r\n    INSRT_NEW_OIL_FAILED,\r\n    INSRT_NEW_OIL_SUCCESS,\r\n    UPDATE_OIL,\r\n    UPDATE_OIL_FAILED,\r\n    UPDATE_OIL_SUCCESS,\r\n    GET_ALL_OIL_BY_ID_SUPPLIER,\r\n    GET_ALL_OIL_BY_ID_SUPPLIER_SUCCESS,\r\n    GET_ALL_OIL_BY_ID_SUPPLIER_FAILED\r\n  } from \"../utils/commonType\";\r\n  \r\n  const initialState = {\r\n    error: false,\r\n    success: false,\r\n    actionType: null,\r\n    isLoading: false,\r\n    dataResultOil: null,\r\n    dataResultOilDelete: null,\r\n    dataResultOilNew: null,\r\n    dataResultOilUpdate: null,\r\n    dataResultOilByIdSupplier: null,\r\n  };\r\n  \r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case GET_ALL_OIL:\r\n        return { ...state, isLoading: false, dataResultOil: null };\r\n      case GET_ALL_OIL_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: GET_ALL_OIL_FAILED,\r\n          dataResultOil: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case GET_ALL_OIL_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: GET_ALL_OIL_SUCCESS,\r\n          dataResultOil: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case DELETE_BY_ID_OIL:\r\n        return { ...state, isLoading: false, dataResultOilDelete: null };\r\n      case DELETE_BY_ID_OIL_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: DELETE_BY_ID_OIL_FAILED,\r\n          dataResultOilDelete: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case DELETE_BY_ID_OIL_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: DELETE_BY_ID_OIL_SUCCESS,\r\n          dataResultOilDelete: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      case INSRT_NEW_OIL:\r\n        return { ...state, isLoading: false, dataResultOilNew: null };\r\n      case INSRT_NEW_OIL_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: INSRT_NEW_OIL_FAILED,\r\n          dataResultOilNew: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case INSRT_NEW_OIL_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: INSRT_NEW_OIL_SUCCESS,\r\n          dataResultOilNew: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      case UPDATE_OIL:\r\n        return { ...state, isLoading: false, dataResultOilUpdate: null };\r\n      case UPDATE_OIL_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: UPDATE_OIL_FAILED,\r\n          dataResultOilUpdate: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case UPDATE_OIL_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: UPDATE_OIL_SUCCESS,\r\n          dataResultOilUpdate: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n\r\n        case GET_ALL_OIL_BY_ID_SUPPLIER:\r\n        return { ...state, isLoading: false, dataResultOilByIdSupplier: null };\r\n      case GET_ALL_OIL_BY_ID_SUPPLIER_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: GET_ALL_OIL_BY_ID_SUPPLIER_FAILED,\r\n          dataResultOilByIdSupplier: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case GET_ALL_OIL_BY_ID_SUPPLIER_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: GET_ALL_OIL_BY_ID_SUPPLIER_SUCCESS,\r\n          dataResultOilByIdSupplier: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import {\r\n    GET_ALL_CUSTOMERS,\r\n    GET_ALL_CUSTOMERS_SUCCESS,\r\n    GET_ALL_CUSTOMERS_FAILED,\r\n    DELETE_BY_ID_CUSTOMERS,\r\n    DELETE_BY_ID_CUSTOMERS_FAILED,\r\n    DELETE_BY_ID_CUSTOMERS_SUCCESS,\r\n    INSRT_NEW_CUSTOMERS,\r\n    INSRT_NEW_CUSTOMERS_FAILED,\r\n    INSRT_NEW_CUSTOMERS_SUCCESS,\r\n    UPDATE_CUSTOMERS,\r\n    UPDATE_CUSTOMERS_FAILED,\r\n    UPDATE_CUSTOMERS_SUCCESS,\r\n  } from \"../utils/commonType\";\r\n  \r\n  const initialState = {\r\n    error: false,\r\n    success: false,\r\n    actionType: null,\r\n    isLoading: false,\r\n    dataResultCustomers: null,\r\n    dataResultCustomersDelete: null,\r\n    dataResultCustomersNew: null,\r\n    dataResultCustomersUpdate: null,\r\n  };\r\n  \r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case GET_ALL_CUSTOMERS:\r\n        return { ...state, isLoading: false, dataResultCustomers: null };\r\n      case GET_ALL_CUSTOMERS_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: GET_ALL_CUSTOMERS_FAILED,\r\n          dataResultCustomers: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case GET_ALL_CUSTOMERS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: GET_ALL_CUSTOMERS_SUCCESS,\r\n          dataResultCustomers: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case DELETE_BY_ID_CUSTOMERS:\r\n        return { ...state, isLoading: false, dataResultCustomersDelete: null };\r\n      case DELETE_BY_ID_CUSTOMERS_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: DELETE_BY_ID_CUSTOMERS_FAILED,\r\n          dataResultCustomersDelete: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case DELETE_BY_ID_CUSTOMERS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: DELETE_BY_ID_CUSTOMERS_SUCCESS,\r\n          dataResultCustomersDelete: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      case INSRT_NEW_CUSTOMERS:\r\n        return { ...state, isLoading: false, dataResultCustomersNew: null };\r\n      case INSRT_NEW_CUSTOMERS_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: INSRT_NEW_CUSTOMERS_FAILED,\r\n          dataResultCustomersNew: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case INSRT_NEW_CUSTOMERS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: INSRT_NEW_CUSTOMERS_SUCCESS,\r\n          dataResultCustomersNew: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      case UPDATE_CUSTOMERS:\r\n        return { ...state, isLoading: false, dataResultCustomersUpdate: null };\r\n      case UPDATE_CUSTOMERS_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: UPDATE_CUSTOMERS_FAILED,\r\n          dataResultCustomersUpdate: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case UPDATE_CUSTOMERS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: UPDATE_CUSTOMERS_SUCCESS,\r\n          dataResultCustomersUpdate: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import {\r\n    GET_ALL_USERS,\r\n    GET_ALL_USERS_SUCCESS,\r\n    GET_ALL_USERS_FAILED,\r\n    DELETE_BY_ID_USERS,\r\n    DELETE_BY_ID_USERS_FAILED,\r\n    DELETE_BY_ID_USERS_SUCCESS,\r\n    INSRT_NEW_USERS,\r\n    INSRT_NEW_USERS_FAILED,\r\n    INSRT_NEW_USERS_SUCCESS,\r\n    UPDATE_USERS,\r\n    UPDATE_USERS_FAILED,\r\n    UPDATE_USERS_SUCCESS,\r\n  } from \"../utils/commonType\";\r\n  \r\n  const initialState = {\r\n    error: false,\r\n    success: false,\r\n    actionType: null,\r\n    isLoading: false,\r\n    dataResultUsers: null,\r\n    dataResultUsersDelete: null,\r\n    dataResultUsersNew: null,\r\n    dataResultUsersUpdate: null,\r\n  };\r\n  \r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case GET_ALL_USERS:\r\n        return { ...state, isLoading: false, dataResultUsers: null };\r\n      case GET_ALL_USERS_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: GET_ALL_USERS_FAILED,\r\n          dataResultUsers: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case GET_ALL_USERS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: GET_ALL_USERS_SUCCESS,\r\n          dataResultUsers: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case DELETE_BY_ID_USERS:\r\n        return { ...state, isLoading: false, dataResultUsersDelete: null };\r\n      case DELETE_BY_ID_USERS_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: DELETE_BY_ID_USERS_FAILED,\r\n          dataResultUsersDelete: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case DELETE_BY_ID_USERS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: DELETE_BY_ID_USERS_SUCCESS,\r\n          dataResultUsersDelete: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      case INSRT_NEW_USERS:\r\n        return { ...state, isLoading: false, dataResultUsersNew: null };\r\n      case INSRT_NEW_USERS_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: INSRT_NEW_USERS_FAILED,\r\n          dataResultUsersNew: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case INSRT_NEW_USERS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: INSRT_NEW_USERS_SUCCESS,\r\n          dataResultUsersNew: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      case UPDATE_USERS:\r\n        return { ...state, isLoading: false, dataResultUsersUpdate: null };\r\n      case UPDATE_USERS_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: UPDATE_USERS_FAILED,\r\n          dataResultUsersUpdate: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case UPDATE_USERS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: UPDATE_USERS_SUCCESS,\r\n          dataResultUsersUpdate: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import {\r\n    GET_ALL_DOCUMENT,\r\n    GET_ALL_DOCUMENT_SUCCESS,\r\n    GET_ALL_DOCUMENT_FAILED,\r\n    DELETE_BY_ID_DOCUMENT,\r\n    DELETE_BY_ID_DOCUMENT_FAILED,\r\n    DELETE_BY_ID_DOCUMENT_SUCCESS,\r\n    INSRT_NEW_DOCUMENT,\r\n    INSRT_NEW_DOCUMENT_FAILED,\r\n    INSRT_NEW_DOCUMENT_SUCCESS,\r\n    UPDATE_DOCUMENT,\r\n    UPDATE_DOCUMENT_FAILED,\r\n    UPDATE_DOCUMENT_SUCCESS,\r\n    GET_ALL_DOCUMENT_BY_ID,\r\n    GET_ALL_DOCUMENT_BY_ID_FAILED,\r\n    GET_ALL_DOCUMENT_BY_ID_SUCCESS\r\n  } from \"../utils/commonType\";\r\n  \r\n  const initialState = {\r\n    error: false,\r\n    success: false,\r\n    actionType: null,\r\n    isLoading: false,\r\n    dataResultDocument: null,\r\n    dataResultDocumentDelete: null,\r\n    dataResultDocumentNew: null,\r\n    dataResultDocumentUpdate: null,\r\n    dataResultDocumentById: null,\r\n  };\r\n  \r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case GET_ALL_DOCUMENT:\r\n        return { ...state, isLoading: false, dataResultDocument: null };\r\n      case GET_ALL_DOCUMENT_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: GET_ALL_DOCUMENT_FAILED,\r\n          dataResultDocument: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case GET_ALL_DOCUMENT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: GET_ALL_DOCUMENT_SUCCESS,\r\n          dataResultDocument: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case DELETE_BY_ID_DOCUMENT:\r\n        return { ...state, isLoading: false, dataResultDocumentDelete: null };\r\n      case DELETE_BY_ID_DOCUMENT_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: DELETE_BY_ID_DOCUMENT_FAILED,\r\n          dataResultDocumentDelete: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case DELETE_BY_ID_DOCUMENT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: DELETE_BY_ID_DOCUMENT_SUCCESS,\r\n          dataResultDocumentDelete: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      case INSRT_NEW_DOCUMENT:\r\n        return { ...state, isLoading: false, dataResultDocumentNew: null };\r\n      case INSRT_NEW_DOCUMENT_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: INSRT_NEW_DOCUMENT_FAILED,\r\n          dataResultDocumentNew: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case INSRT_NEW_DOCUMENT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: INSRT_NEW_DOCUMENT_SUCCESS,\r\n          dataResultDocumentNew: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      case UPDATE_DOCUMENT:\r\n        return { ...state, isLoading: false, dataResultDocumentUpdate: null };\r\n      case UPDATE_DOCUMENT_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: UPDATE_DOCUMENT_FAILED,\r\n          dataResultDocumentUpdate: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case UPDATE_DOCUMENT_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: UPDATE_DOCUMENT_SUCCESS,\r\n          dataResultDocumentUpdate: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n\r\n        case GET_ALL_DOCUMENT_BY_ID:\r\n        return { ...state, isLoading: false, dataResultDocumentById: null };\r\n      case GET_ALL_DOCUMENT_BY_ID_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: GET_ALL_DOCUMENT_BY_ID_FAILED,\r\n          dataResultDocumentById: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case GET_ALL_DOCUMENT_BY_ID_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: GET_ALL_DOCUMENT_BY_ID_SUCCESS,\r\n          dataResultDocumentById: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import {\r\n  GET_ALL_ORDER,\r\n  GET_ALL_ORDER_SUCCESS,\r\n  GET_ALL_ORDER_FAILED,\r\n  DELETE_BY_ID_ORDER,\r\n  DELETE_BY_ID_ORDER_FAILED,\r\n  DELETE_BY_ID_ORDER_SUCCESS,\r\n  INSRT_NEW_ORDER,\r\n  INSRT_NEW_ORDER_FAILED,\r\n  INSRT_NEW_ORDER_SUCCESS,\r\n  UPDATE_ORDER,\r\n  UPDATE_ORDER_FAILED,\r\n  UPDATE_ORDER_SUCCESS,\r\n  GET_MAX_ID_ORDER,\r\n  GET_MAX_ID_ORDER_SUCCESS,\r\n  GET_MAX_ID_ORDER_FAILED,\r\n\r\n  INSRT_NEW_ORDER_DETAIL,\r\n  INSRT_NEW_ORDER_DETAIL_SUCCESS,\r\n  INSRT_NEW_ORDER_DETAIL_FAILED,\r\n\r\n  GET_SEARCH_ORDER,\r\n  GET_SEARCH_ORDER_SUCCESS,\r\n  GET_SEARCH_ORDER_FAILED,\r\n\r\n  GET_PRINT_ORDER,\r\n  GET_PRINT_ORDER_SUCCESS,\r\n  GET_PRINT_ORDER_FAILED\r\n\r\n} from \"../utils/commonType\";\r\n\r\nconst initialState = {\r\n  error: false,\r\n  success: false,\r\n  actionType: null,\r\n  isLoading: false,\r\n  dataResultOrder: null,\r\n  dataResultOrderDelete: null,\r\n  dataResultOrderNew: null,\r\n  dataResultOrderUpdate: null,\r\n  dataResultMaxIdOrder: null,\r\n  dataResultOrderDetailNew: null,\r\n  dataResultPrintOrder: null,\r\n};\r\n\r\nexport default (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case GET_ALL_ORDER:\r\n      return { ...state, isLoading: false, dataResultOrder: null };\r\n    case GET_ALL_ORDER_FAILED:\r\n      return {\r\n        ...state,\r\n        actionType: GET_ALL_ORDER_FAILED,\r\n        dataResultOrder: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n    case GET_ALL_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        actionType: GET_ALL_ORDER_SUCCESS,\r\n        dataResultOrder: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n    case DELETE_BY_ID_ORDER:\r\n      return { ...state, isLoading: false, dataResultOrderDelete: null };\r\n    case DELETE_BY_ID_ORDER_FAILED:\r\n      return {\r\n        ...state,\r\n        actionType: DELETE_BY_ID_ORDER_FAILED,\r\n        dataResultOrderDelete: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n    case DELETE_BY_ID_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        actionType: DELETE_BY_ID_ORDER_SUCCESS,\r\n        dataResultOrderDelete: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n\r\n    case INSRT_NEW_ORDER:\r\n      return { ...state, isLoading: false, dataResultOrderNew: null };\r\n    case INSRT_NEW_ORDER_FAILED:\r\n      return {\r\n        ...state,\r\n        actionType: INSRT_NEW_ORDER_FAILED,\r\n        dataResultOrderNew: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n    case INSRT_NEW_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        actionType: INSRT_NEW_ORDER_SUCCESS,\r\n        dataResultOrderNew: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n\r\n    case UPDATE_ORDER:\r\n      return { ...state, isLoading: false, dataResultOrderUpdate: null };\r\n    case UPDATE_ORDER_FAILED:\r\n      return {\r\n        ...state,\r\n        actionType: UPDATE_ORDER_FAILED,\r\n        dataResultOrderUpdate: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n    case UPDATE_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        actionType: UPDATE_ORDER_SUCCESS,\r\n        dataResultOrderUpdate: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n\r\n    case GET_MAX_ID_ORDER:\r\n      return { ...state, isLoading: false, dataResultMaxIdOrder: null };\r\n    case GET_MAX_ID_ORDER_FAILED:\r\n      return {\r\n        ...state,\r\n        actionType: GET_MAX_ID_ORDER_FAILED,\r\n        dataResultMaxIdOrder: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n    case GET_MAX_ID_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        actionType: GET_MAX_ID_ORDER_SUCCESS,\r\n        dataResultMaxIdOrder: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n\r\n    case INSRT_NEW_ORDER_DETAIL:\r\n      return { ...state, isLoading: false, dataResultOrderDetailNew: null };\r\n    case INSRT_NEW_ORDER_DETAIL_FAILED:\r\n      return {\r\n        ...state,\r\n        actionType: INSRT_NEW_ORDER_DETAIL_FAILED,\r\n        dataResultOrderDetailNew: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n    case INSRT_NEW_ORDER_DETAIL_SUCCESS:\r\n      return {\r\n        ...state,\r\n        actionType: INSRT_NEW_ORDER_DETAIL_SUCCESS,\r\n        dataResultOrderDetailNew: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n\r\n    case GET_SEARCH_ORDER:\r\n      return { ...state, isLoading: false, dataResultGetSearchOrderNew: null };\r\n    case GET_SEARCH_ORDER_FAILED:\r\n      return {\r\n        ...state,\r\n        actionType: GET_SEARCH_ORDER_FAILED,\r\n        dataResultGetSearchOrderNew: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n    case GET_SEARCH_ORDER_SUCCESS:\r\n      return {\r\n        ...state,\r\n        actionType: GET_SEARCH_ORDER_SUCCESS,\r\n        dataResultGetSearchOrderNew: action.data,\r\n        message: action.message,\r\n        status: action.status,\r\n        responseCode: action.responseCode,\r\n      };\r\n\r\n      case GET_PRINT_ORDER:\r\n        return { ...state, isLoading: false, dataResultPrintOrder: null };\r\n      case GET_PRINT_ORDER_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: GET_PRINT_ORDER_FAILED,\r\n          dataResultPrintOrder: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case GET_PRINT_ORDER_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: GET_PRINT_ORDER_SUCCESS,\r\n          dataResultPrintOrder: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","import {\r\n    GET_ALL_TRANSPORTS,\r\n    GET_ALL_TRANSPORTS_SUCCESS,\r\n    GET_ALL_TRANSPORTS_FAILED,\r\n    DELETE_BY_ID_TRANSPORTS,\r\n    DELETE_BY_ID_TRANSPORTS_FAILED,\r\n    DELETE_BY_ID_TRANSPORTS_SUCCESS,\r\n    INSRT_NEW_TRANSPORTS,\r\n    INSRT_NEW_TRANSPORTS_FAILED,\r\n    INSRT_NEW_TRANSPORTS_SUCCESS,\r\n    UPDATE_TRANSPORTS,\r\n    UPDATE_TRANSPORTS_FAILED,\r\n    UPDATE_TRANSPORTS_SUCCESS,\r\n    GET_ALL_TRANSPORTS_BY_ID,\r\n    GET_ALL_TRANSPORTS_BY_ID_SUCCESS,\r\n    GET_ALL_TRANSPORTS_BY_ID_FAILED\r\n  } from \"../utils/commonType\";\r\n  \r\n  const initialState = {\r\n    error: false,\r\n    success: false,\r\n    actionType: null,\r\n    isLoading: false,\r\n    dataResultTransports: null,\r\n    dataResultTransportsDelete: null,\r\n    dataResultTransportsNew: null,\r\n    dataResultTransportsUpdate: null,\r\n    dataResultTransportsById: null,\r\n  };\r\n  \r\n  export default (state = initialState, action) => {\r\n    switch (action.type) {\r\n      case GET_ALL_TRANSPORTS:\r\n        return { ...state, isLoading: false, dataResultTransports: null };\r\n      case GET_ALL_TRANSPORTS_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: GET_ALL_TRANSPORTS_FAILED,\r\n          dataResultTransports: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case GET_ALL_TRANSPORTS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: GET_ALL_TRANSPORTS_SUCCESS,\r\n          dataResultTransports: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case DELETE_BY_ID_TRANSPORTS:\r\n        return { ...state, isLoading: false, dataResultTransportsDelete: null };\r\n      case DELETE_BY_ID_TRANSPORTS_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: DELETE_BY_ID_TRANSPORTS_FAILED,\r\n          dataResultTransportsDelete: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case DELETE_BY_ID_TRANSPORTS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: DELETE_BY_ID_TRANSPORTS_SUCCESS,\r\n          dataResultTransportsDelete: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      case INSRT_NEW_TRANSPORTS:\r\n        return { ...state, isLoading: false, dataResultTransportsNew: null };\r\n      case INSRT_NEW_TRANSPORTS_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: INSRT_NEW_TRANSPORTS_FAILED,\r\n          dataResultTransportsNew: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case INSRT_NEW_TRANSPORTS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: INSRT_NEW_TRANSPORTS_SUCCESS,\r\n          dataResultTransportsNew: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      case UPDATE_TRANSPORTS:\r\n        return { ...state, isLoading: false, dataResultTransportsUpdate: null };\r\n      case UPDATE_TRANSPORTS_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: UPDATE_TRANSPORTS_FAILED,\r\n          dataResultTransportsUpdate: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case UPDATE_TRANSPORTS_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: UPDATE_TRANSPORTS_SUCCESS,\r\n          dataResultTransportsUpdate: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n\r\n        case GET_ALL_TRANSPORTS_BY_ID:\r\n        return { ...state, isLoading: false, dataResultTransportsById: null };\r\n      case GET_ALL_TRANSPORTS_BY_ID_FAILED:\r\n        return {\r\n          ...state,\r\n          actionType: GET_ALL_TRANSPORTS_BY_ID_FAILED,\r\n          dataResultTransportsById: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n      case GET_ALL_TRANSPORTS_BY_ID_SUCCESS:\r\n        return {\r\n          ...state,\r\n          actionType: GET_ALL_TRANSPORTS_BY_ID_SUCCESS,\r\n          dataResultTransportsById: action.data,\r\n          message: action.message,\r\n          status: action.status,\r\n          responseCode: action.responseCode,\r\n        };\r\n  \r\n      default:\r\n        return state;\r\n    }\r\n  };\r\n  ","import {\n    INSRT_NEW_SELL,\n    INSRT_NEW_SELL_FAILED,\n    INSRT_NEW_SELL_SUCCESS,\n    GET_MAX_ID_SELL,\n    GET_MAX_ID_SELL_FAILED,\n    GET_MAX_ID_SELL_SUCCESS,\n\n    INSRT_NEW_SELL_DETAIL,\n    INSRT_NEW_SELL_DETAIL_FAILED,\n    INSRT_NEW_SELL_DETAIL_SUCCESS,\n\n    GET_ALL_SELL,\n    GET_ALL_SELL_FAILED,\n    GET_ALL_SELL_SUCCESS,\n\n    GET_PRINT_SELL,\n    GET_PRINT_SELL_SUCCESS,\n    GET_PRINT_SELL_FAILED\n\n} from \"../utils/commonType\";\n\n\nconst initialState = {\n    error: false,\n    success: false,\n    actionType: null,\n    isLoading: false,\n    dataResultSellNew: null,\n    dataResultMaxIdSell: null,\n    dataResultSellDetailNew: null,\n    dataResultGetSell: null,\n    dataResultGetPrintSell: null,\n\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n        case INSRT_NEW_SELL:\n            return { ...state, isLoading: false, dataResultSellNew: null };\n        case INSRT_NEW_SELL_FAILED:\n            return {\n                ...state,\n                actionType: INSRT_NEW_SELL_FAILED,\n                dataResultSellNew: action.data,\n                message: action.message,\n                status: action.status,\n                responseCode: action.responseCode,\n            };\n        case INSRT_NEW_SELL_SUCCESS:\n            return {\n                ...state,\n                actionType: INSRT_NEW_SELL_SUCCESS,\n                dataResultSellNew: action.data,\n                message: action.message,\n                status: action.status,\n                responseCode: action.responseCode,\n            };\n\n        case GET_MAX_ID_SELL:\n            return { ...state, isLoading: false, dataResultMaxIdSell: null };\n        case GET_MAX_ID_SELL_FAILED:\n            return {\n                ...state,\n                actionType: GET_MAX_ID_SELL_FAILED,\n                dataResultMaxIdSell: action.data,\n                message: action.message,\n                status: action.status,\n                responseCode: action.responseCode,\n            };\n        case GET_MAX_ID_SELL_SUCCESS:\n            return {\n                ...state,\n                actionType: GET_MAX_ID_SELL_SUCCESS,\n                dataResultMaxIdSell: action.data,\n                message: action.message,\n                status: action.status,\n                responseCode: action.responseCode,\n            };\n\n        case INSRT_NEW_SELL_DETAIL:\n            return { ...state, isLoading: false, dataResultSellDetailNew: null };\n        case INSRT_NEW_SELL_DETAIL_FAILED:\n            return {\n                ...state,\n                actionType: INSRT_NEW_SELL_DETAIL_FAILED,\n                dataResultSellDetailNew: action.data,\n                message: action.message,\n                status: action.status,\n                responseCode: action.responseCode,\n            };\n        case INSRT_NEW_SELL_DETAIL_SUCCESS:\n            return {\n                ...state,\n                actionType: INSRT_NEW_SELL_DETAIL_SUCCESS,\n                dataResultSellDetailNew: action.data,\n                message: action.message,\n                status: action.status,\n                responseCode: action.responseCode,\n            };\n\n        case GET_ALL_SELL:\n            return { ...state, isLoading: false, dataResultGetSell: null };\n        case GET_ALL_SELL_FAILED:\n            return {\n                ...state,\n                actionType: GET_ALL_SELL_FAILED,\n                dataResultGetSell: action.data,\n                message: action.message,\n                status: action.status,\n                responseCode: action.responseCode,\n            };\n        case GET_ALL_SELL_SUCCESS:\n            return {\n                ...state,\n                actionType: GET_ALL_SELL_SUCCESS,\n                dataResultGetSell: action.data,\n                message: action.message,\n                status: action.status,\n                responseCode: action.responseCode,\n            };\n\n            case GET_PRINT_SELL:\n                return { ...state, isLoading: false, dataResultGetPrintSell: null };\n            case GET_PRINT_SELL_FAILED:\n                return {\n                    ...state,\n                    actionType: GET_PRINT_SELL_FAILED,\n                    dataResultGetPrintSell: action.data,\n                    message: action.message,\n                    status: action.status,\n                    responseCode: action.responseCode,\n                };\n            case GET_PRINT_SELL_SUCCESS:\n                return {\n                    ...state,\n                    actionType: GET_PRINT_SELL_SUCCESS,\n                    dataResultGetPrintSell: action.data,\n                    message: action.message,\n                    status: action.status,\n                    responseCode: action.responseCode,\n                };\n\n        default:\n            return state;\n    }\n};\n","import {\n    INSRT_NEW_IMPORT,\n    INSRT_NEW_IMPORT_FAILED,\n    INSRT_NEW_IMPORT_SUCCESS,\n\n    GET_MAX_ID_IMPORT,\n    GET_MAX_ID_IMPORT_SUCCESS,\n    GET_MAX_ID_IMPORT_FAILED,\n\n    INSRT_NEW_IMPORT_DETAIL,\n    INSRT_NEW_IMPORT_DETAIL_SUCCESS,\n    INSRT_NEW_IMPORT_DETAIL_FAILED,\n\n    GET_PRINT_IMPORT,\n    GET_PRINT_IMPORT_SUCCESS,\n    GET_PRINT_IMPORT_FAILED\n\n} from \"../utils/commonType\";\n\nconst initialState = {\n    error: false,\n    success: false,\n    actionType: null,\n    isLoading: false,\n    dataResultImportNew: null,\n    dataResultMaxIdImport: null,\n    dataResultGetPrintImport: null,\n};\n\nexport default (state = initialState, action) => {\n    switch (action.type) {\n\n\n        case INSRT_NEW_IMPORT:\n            return { ...state, isLoading: false, dataResultImportNew: null };\n        case INSRT_NEW_IMPORT_FAILED:\n            return {\n                ...state,\n                actionType: INSRT_NEW_IMPORT_FAILED,\n                dataResultImportNew: action.data,\n                message: action.message,\n                status: action.status,\n                responseCode: action.responseCode,\n            };\n        case INSRT_NEW_IMPORT_SUCCESS:\n            return {\n                ...state,\n                actionType: INSRT_NEW_IMPORT_SUCCESS,\n                dataResultImportNew: action.data,\n                message: action.message,\n                status: action.status,\n                responseCode: action.responseCode,\n            };\n\n        case GET_MAX_ID_IMPORT:\n            return { ...state, isLoading: false, dataResultMaxIdImport: null };\n        case GET_MAX_ID_IMPORT_FAILED:\n            return {\n                ...state,\n                actionType: GET_MAX_ID_IMPORT_FAILED,\n                dataResultMaxIdImport: action.data,\n                message: action.message,\n                status: action.status,\n                responseCode: action.responseCode,\n            };\n        case GET_MAX_ID_IMPORT_SUCCESS:\n            return {\n                ...state,\n                actionType: GET_MAX_ID_IMPORT_SUCCESS,\n                dataResultMaxIdImport: action.data,\n                message: action.message,\n                status: action.status,\n                responseCode: action.responseCode,\n            };\n\n        case INSRT_NEW_IMPORT_DETAIL:\n            return { ...state, isLoading: false, dataResultImportDetailNew: null };\n        case INSRT_NEW_IMPORT_DETAIL_FAILED:\n            return {\n                ...state,\n                actionType: INSRT_NEW_IMPORT_DETAIL_FAILED,\n                dataResultImportDetailNew: action.data,\n                message: action.message,\n                status: action.status,\n                responseCode: action.responseCode,\n            };\n        case INSRT_NEW_IMPORT_DETAIL_SUCCESS:\n            return {\n                ...state,\n                actionType: INSRT_NEW_IMPORT_DETAIL_SUCCESS,\n                dataResultImportDetailNew: action.data,\n                message: action.message,\n                status: action.status,\n                responseCode: action.responseCode,\n            };\n\n\n        case GET_PRINT_IMPORT:\n            return { ...state, isLoading: false, dataResultGetPrintImport: null };\n        case GET_PRINT_IMPORT_FAILED:\n            return {\n                ...state,\n                actionType: GET_PRINT_IMPORT_FAILED,\n                dataResultGetPrintImport: action.data,\n                message: action.message,\n                status: action.status,\n                responseCode: action.responseCode,\n            };\n        case GET_PRINT_IMPORT_SUCCESS:\n            return {\n                ...state,\n                actionType: GET_PRINT_IMPORT_SUCCESS,\n                dataResultGetPrintImport: action.data,\n                message: action.message,\n                status: action.status,\n                responseCode: action.responseCode,\n            };\n\n\n\n        default:\n            return state;\n    }\n};\n","import {\n  GET_ALL_REPORT,\n  GET_ALL_REPORT_SUCCESS,\n  GET_ALL_REPORT_FAILED,\n  GET_SUM_REPORT,\n  GET_SUM_REPORT_SUCCESS,\n  GET_SUM_REPORT_FAILED\n\n} from \"../utils/commonType\";\n\nconst initialState = {\n  error: false,\n  success: false,\n  actionType: null,\n  isLoading: false,\n  dataResultReport: null,\n  dataResultSumReport: null,\n};\n\nexport default (state = initialState, action) => {\n  switch (action.type) {\n    case GET_ALL_REPORT:\n      return { ...state, isLoading: false, dataResultReport: null };\n    case GET_ALL_REPORT_FAILED:\n      return {\n        ...state,\n        actionType: GET_ALL_REPORT_FAILED,\n        dataResultReport: action.data,\n        message: action.message,\n        status: action.status,\n        responseCode: action.responseCode,\n      };\n    case GET_ALL_REPORT_SUCCESS:\n      return {\n        ...state,\n        actionType: GET_ALL_REPORT_SUCCESS,\n        dataResultReport: action.data,\n        message: action.message,\n        status: action.status,\n        responseCode: action.responseCode,\n      };\n\n    case GET_SUM_REPORT:\n      return { ...state, isLoading: false, dataResultSumReport: null };\n    case GET_SUM_REPORT_FAILED:\n      return {\n        ...state,\n        actionType: GET_SUM_REPORT_FAILED,\n        dataResultSumReport: action.data,\n        message: action.message,\n        status: action.status,\n        responseCode: action.responseCode,\n      };\n    case GET_SUM_REPORT_SUCCESS:\n      return {\n        ...state,\n        actionType: GET_SUM_REPORT_SUCCESS,\n        dataResultSumReport: action.data,\n        message: action.message,\n        status: action.status,\n        responseCode: action.responseCode,\n      };\n\n\n\n    default:\n      return state;\n  }\n};\n","import { combineReducers } from \"redux\";\nimport loginReduce from \"./loginReducer\";\nimport carReducer from './carReducer'\nimport employeeReducer from './employeeReducer'\nimport supplierReducer from './supplierReducer'\nimport oilReducer from './oilReducer'\nimport customerReducer from './customerReducer'\nimport userReducer from './userReducer'\nimport documentReducer from './documentReducer'\nimport orderReducer from './orderReducer'\nimport transportsReducer from './transportsReducer'\nimport sellReducer from './sellReducer'\nimport importReducer from './importReducer'\nimport reportReducer from './reportReducer'\n\nconst AppReducer = combineReducers({\n  loginReduce,\n  carReducer,\n  employeeReducer,\n  supplierReducer,\n  oilReducer,\n  customerReducer,\n  userReducer,\n  documentReducer,\n  orderReducer,\n  transportsReducer,\n  sellReducer,\n  importReducer,\n  reportReducer\n});\n\nexport default AppReducer;\n","import i18n from 'i18next';\nimport { initReactI18next } from 'react-i18next';\n\nimport Backend from 'i18next-http-backend';\nimport LanguageDetector from 'i18next-browser-languagedetector';\n// don't want to use this?\n// have a look at the Quick start guide \n// for passing in lng and translations on init\n\nconst Languages = ['en', 'lo']\n\ni18n\n  // load translation using http -> see /public/locales (i.e. https://github.com/i18next/react-i18next/tree/master/example/react/public/locales)\n  // learn more: https://github.com/i18next/i18next-http-backend\n  // want your translations to be loaded from a professional CDN? => https://github.com/locize/react-tutorial#step-2---use-the-locize-cdn\n  .use(Backend)\n  // detect user language\n  // learn more: https://github.com/i18next/i18next-browser-languageDetector\n  .use(LanguageDetector)\n  // pass the i18n instance to react-i18next.\n  .use(initReactI18next)\n  // init i18next\n  // for all options read: https://www.i18next.com/overview/configuration-options\n  .init({\n    fallbackLng: 'lo',\n    debug: true,\n    whitelist: Languages,\n    interpolation: {\n      escapeValue: false, // not needed for react as it escapes by default\n    }\n  });\n\n\nexport default i18n;","import React, { Suspense } from \"react\";\nimport ReactDOM from \"react-dom\";\nimport Auth from \"./screens/Login\";\nimport Routes from \"./screens/Routes\";\nimport { BrowserRouter } from \"react-router-dom\";\nimport rootSaga from \"./sagas\";\nimport allReducers from \"./reducers\";\nimport { Provider } from \"react-redux\";\nimport { createStore, applyMiddleware } from \"redux\";\nimport createSagaMiddleware from \"redux-saga\";\nimport \"./i18n.js\";\nimport Cookie from \"js-cookie\";\nconst sagaMiddleware = createSagaMiddleware();\nconst store = createStore(allReducers, applyMiddleware(sagaMiddleware));\n\nReactDOM.render(\n  <React.StrictMode>\n    <Suspense fallback=\"loading\">\n      <BrowserRouter>\n        <Provider store={store}>\n          {console.log(\n            'Cookie.getJSON(\"userInfo\"):',\n            Cookie.getJSON(\"userInfo\")\n          )}\n          {Cookie.getJSON(\"userInfo\") ? <Routes /> : <Auth />}\n        </Provider>\n      </BrowserRouter>\n    </Suspense>\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\nsagaMiddleware.run(rootSaga);\n"],"sourceRoot":""}